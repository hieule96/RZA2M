   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"r_rvapi_vdc.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.R_RVAPI_InitializeVDC,"ax",%progbits
  17              		.align	2
  18              		.global	R_RVAPI_InitializeVDC
  19              		.syntax unified
  20              		.arm
  21              		.fpu neon
  23              	R_RVAPI_InitializeVDC:
  24              	.LFB0:
  25              		.file 1 "../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c"
   1:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************************************
   2:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * DISCLAIMER
   3:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * applicable laws, including copyright laws.
   6:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DA
  12:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * following link:
  15:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * http://www.renesas.com/disclaimer
  16:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  *
  17:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Copyright (C) 2019 Renesas Electronics Corporation. All rights reserved.
  18:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  **************************************************************************************************
  19:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
  20:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * File Name :   r_rvapi_vdc.c
  21:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @file         r_rvapi_vdc.c
  22:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @version      1.12
  23:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief        RVAPI for VDC function
  24:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
  25:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  26:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /******************************************************************************
  27:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  Includes   <System Includes> , "Project Includes"
  28:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
  29:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #include    "r_rvapi_vdc.h"
  30:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  31:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /******************************************************************************
  32:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  Macro definitions
  33:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
  34:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define WEITE_LAYER_NUM  (2u)
  35:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  36:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define LAYER_ID_0_WR    (0u)
  37:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define LAYER_ID_1_WR    (1u)
  38:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  39:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define DOUBLE_BUFFER    (2u)
  40:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define BUFFER_0         (0u)
  41:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define BUFFER_1         (1u)
  42:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  43:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define CLUT8_TABLE_NUM  (256u)
  44:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define CLUT4_TABLE_NUM  (16u)
  45:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define CLUT1_TABLE_NUM  (2u)
  46:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  47:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define BLACK            (0xFF000000u)
  48:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define WHITE            (0xFFFFFFFFu)
  49:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  50:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** #define LVDSPLL_TST (0u)     /* LVDSPLL_TST (LVDS PLL internal parameters) */
  51:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  52:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /******************************************************************************
  53:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  Typedef definitions
  54:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
  55:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** volatile vdc_period_rect_t full_screen; 
  56:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  57:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /* default Monochrome color 256 ARGB   */
  58:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** static const uint32_t color_table256[CLUT8_TABLE_NUM] =
  59:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
  60:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** BLACK,
  61:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF010101u, 0xFF020202u, 0xFF030303u, 0xFF040404u, 0xFF050505u, 0xFF060606u, 0xFF070707u, /*   0 -
  62:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF080808u, 0xFF090909u, 0xFF0A0A0Au, 0xFF0B0B0Bu, 0xFF0C0C0Cu, 0xFF0D0D0Du, 0xFF0E0E0Eu, 0xFF0F0F
  63:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF101010u, 0xFF111111u, 0xFF121212u, 0xFF131313u, 0xFF141414u, 0xFF151515u, 0xFF161616u, 0xFF1717
  64:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF181818u, 0xFF191919u, 0xFF1A1A1Au, 0xFF1B1B1Bu, 0xFF1C1C1Cu, 0xFF1E1E1Eu, 0xFF1E1E1Eu, 0xFF1F1F
  65:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF202020u, 0xFF212121u, 0xFF222222u, 0xFF232323u, 0xFF242424u, 0xFF252525u, 0xFF262626u, 0xFF2727
  66:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF282828u, 0xFF292929u, 0xFF2A2A2Au, 0xFF2B2B2Bu, 0xFF2C2C2Cu, 0xFF2E2E2Eu, 0xFF2E2E2Eu, 0xFF2F2F
  67:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF303030u, 0xFF313131u, 0xFF323232u, 0xFF333333u, 0xFF343434u, 0xFF353535u, 0xFF363636u, 0xFF3737
  68:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF383838u, 0xFF393939u, 0xFF3A3A3Au, 0xFF3B3B3Bu, 0xFF3C3C3Cu, 0xFF3E3E3Eu, 0xFF3E3E3Eu, 0xFF3F3F
  69:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF404040u, 0xFF414141u, 0xFF424242u, 0xFF434343u, 0xFF444444u, 0xFF454545u, 0xFF464646u, 0xFF4747
  70:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF484848u, 0xFF494949u, 0xFF4A4A4Au, 0xFF4B4B4Bu, 0xFF4C4C4Cu, 0xFF4E4E4Eu, 0xFF4E4E4Eu, 0xFF4F4F
  71:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF505050u, 0xFF515151u, 0xFF525252u, 0xFF535353u, 0xFF545454u, 0xFF555555u, 0xFF565656u, 0xFF5757
  72:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF585858u, 0xFF595959u, 0xFF5A5A5Au, 0xFF5B5B5Bu, 0xFF5C5C5Cu, 0xFF5E5E5Eu, 0xFF5E5E5Eu, 0xFF5F5F
  73:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF606060u, 0xFF616161u, 0xFF626262u, 0xFF636363u, 0xFF646464u, 0xFF656565u, 0xFF666666u, 0xFF6767
  74:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF686868u, 0xFF696969u, 0xFF6A6A6Au, 0xFF6B6B6Bu, 0xFF6C6C6Cu, 0xFF6E6E6Eu, 0xFF6E6E6Eu, 0xFF6F6F
  75:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF707070u, 0xFF717171u, 0xFF727272u, 0xFF737373u, 0xFF747474u, 0xFF757575u, 0xFF767676u, 0xFF7777
  76:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF787878u, 0xFF797979u, 0xFF7A7A7Au, 0xFF7B7B7Bu, 0xFF7C7C7Cu, 0xFF7E7E7Eu, 0xFF7E7E7Eu, 0xFF7F7F
  77:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF808080u, 0xFF818181u, 0xFF828282u, 0xFF838383u, 0xFF848484u, 0xFF858585u, 0xFF868686u, 0xFF8787
  78:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF888888u, 0xFF898989u, 0xFF8A8A8Au, 0xFF8B8B8Bu, 0xFF8C8C8Cu, 0xFF8E8E8Eu, 0xFF8E8E8Eu, 0xFF8F8F
  79:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF909090u, 0xFF919191u, 0xFF929292u, 0xFF939393u, 0xFF949494u, 0xFF959595u, 0xFF969696u, 0xFF9797
  80:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF989898u, 0xFF999999u, 0xFF9A9A9Au, 0xFF9B9B9Bu, 0xFF9C9C9Cu, 0xFF9E9E9Eu, 0xFF9E9E9Eu, 0xFF9F9F
  81:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFA0A0A0u, 0xFFA1A1A1u, 0xFFA2A2A2u, 0xFFA3A3A3u, 0xFFA4A4A4u, 0xFFA5A5A5u, 0xFFA6A6A6u, 0xFFA7A7
  82:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFA8A8A8u, 0xFFA9A9A9u, 0xFFAAAAAAu, 0xFFABABABu, 0xFFACACACu, 0xFFAEAEAEu, 0xFFAEAEAEu, 0xFFAFAF
  83:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFB0B0B0u, 0xFFB1B1B1u, 0xFFB2B2B2u, 0xFFB3B3B3u, 0xFFB4B4B4u, 0xFFB5B5B5u, 0xFFB6B6B6u, 0xFFB7B7
  84:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFB8B8B8u, 0xFFB9B9B9u, 0xFFBABABAu, 0xFFBBBBBBu, 0xFFBCBCBCu, 0xFFBEBEBEu, 0xFFBEBEBEu, 0xFFBFBF
  85:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFC0C0C0u, 0xFFC1C1C1u, 0xFFC2C2C2u, 0xFFC3C3C3u, 0xFFC4C4C4u, 0xFFC5C5C5u, 0xFFC6C6C6u, 0xFFC7C7
  86:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFC8C8C8u, 0xFFC9C9C9u, 0xFFCACACAu, 0xFFCBCBCBu, 0xFFCCCCCCu, 0xFFCECECEu, 0xFFCECECEu, 0xFFCFCF
  87:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFD0D0D0u, 0xFFD1D1D1u, 0xFFD2D2D2u, 0xFFD3D3D3u, 0xFFD4D4D4u, 0xFFD5D5D5u, 0xFFD6D6D6u, 0xFFD7D7
  88:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFD8D8D8u, 0xFFD9D9D9u, 0xFFDADADAu, 0xFFDBDBDBu, 0xFFDCDCDCu, 0xFFDEDEDEu, 0xFFDEDEDEu, 0xFFDFDF
  89:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFE0E0E0u, 0xFFE1E1E1u, 0xFFE2E2E2u, 0xFFE3E3E3u, 0xFFE4E4E4u, 0xFFE5E5E5u, 0xFFE6E6E6u, 0xFFE7E7
  90:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFE8E8E8u, 0xFFE9E9E9u, 0xFFEAEAEAu, 0xFFEBEBEBu, 0xFFECECECu, 0xFFEEEEEEu, 0xFFEEEEEEu, 0xFFEFEF
  91:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFF0F0F0u, 0xFFF1F1F1u, 0xFFF2F2F2u, 0xFFF3F3F3u, 0xFFF4F4F4u, 0xFFF5F5F5u, 0xFFF6F6F6u, 0xFFF7F7
  92:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFF8F8F8u, 0xFFF9F9F9u, 0xFFFAFAFAu, 0xFFFBFBFBu, 0xFFFCFCFCu, 0xFFFEFEFEu, 0xFFFEFEFEu, WHITE /*
  93:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** };
  94:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
  95:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /* Base 16 color ARGB */
  96:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** static const uint32_t color_table16[CLUT4_TABLE_NUM] =
  97:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
  98:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** BLACK,
  99:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFFFF0000u, 0xFF00FF00u, 0xFF00FFFFu, 0xFF0000FFu, 0xFFFF00FFu, 0xFF800000u, 0xFF808000u, 0xFF0080
 100:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 0xFF800080u, 0xFF808080u, 0xFFC0C0C0u, 0xFFFFA500u, WHITE, 0x00FFFFFFu };
 101:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 102:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /* Base 2 color ARGB */
 103:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** static const uint32_t color_table2[CLUT1_TABLE_NUM] =
 104:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 105:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** BLACK,
 106:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** WHITE };
 107:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /******************************************************************************
 108:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  Exported global variables
 109:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 110:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** extern void R_VDC_OnInitialize   
 111:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             ( const uint32_t user_num );
 112:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** extern void R_VDC_OnFinalize   
 113:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             ( const uint32_t user_num );
 114:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 115:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 116:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 117:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_InitializeVDC
 118:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       VDC initialization processing
 119:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 120:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   c_cnf           : Clock setting config
 121:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 122:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 123:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_InitializeVDC
 124:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const clock_config_t * const c_cnf)
 125:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
  26              		.loc 1 125 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
 126:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 127:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_init_t init;
 128:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_lvds_t lvds;
 129:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 130:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* full screen init */
 131:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     full_screen.vs = 0u;
  31              		.loc 1 131 0
  32 0000 002000E3 		movw	r2, #:lower16:full_screen
  33 0004 002040E3 		movt	r2, #:upper16:full_screen
  34 0008 00C0A0E3 		mov	ip, #0
  35 000c B0C0C2E1 		strh	ip, [r2]	@ movhi
 132:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     full_screen.vw = 0u;
  36              		.loc 1 132 0
  37 0010 B2C0C2E1 		strh	ip, [r2, #2]	@ movhi
 133:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     full_screen.hs = 0u;
  38              		.loc 1 133 0
  39 0014 B4C0C2E1 		strh	ip, [r2, #4]	@ movhi
 134:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     full_screen.hw = 0u;
  40              		.loc 1 134 0
  41 0018 B6C0C2E1 		strh	ip, [r2, #6]	@ movhi
 135:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 136:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 137:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == c_cnf)
  42              		.loc 1 137 0
  43 001c 000051E3 		cmp	r1, #0
  44 0020 2400000A 		beq	.L5
 125:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
  45              		.loc 1 125 0
  46 0024 04E02DE5 		str	lr, [sp, #-4]!
  47              		.cfi_def_cfa_offset 4
  48              		.cfi_offset 14, -4
  49 0028 1CD04DE2 		sub	sp, sp, #28
  50              		.cfi_def_cfa_offset 32
 138:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 139:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 140:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 141:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 142:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 143:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Initialization parameter */
 144:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         init.panel_icksel = c_cnf->panel_clk; /* Panel clock select */
  51              		.loc 1 144 0
  52 002c 0030D1E5 		ldrb	r3, [r1]	@ zero_extendqisi2
  53 0030 1030CDE5 		strb	r3, [sp, #16]
 145:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         init.panel_dcdr = c_cnf->panel_clk_div; /* Panel clock frequency division ratio */
  54              		.loc 1 145 0
  55 0034 0130D1E5 		ldrb	r3, [r1, #1]	@ zero_extendqisi2
  56 0038 1130CDE5 		strb	r3, [sp, #17]
 146:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 147:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* lvds */
 148:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (NULL != c_cnf->lvds)
  57              		.loc 1 148 0
  58 003c 043091E5 		ldr	r3, [r1, #4]
  59 0040 0C0053E1 		cmp	r3, ip
  60 0044 1800000A 		beq	.L3
 149:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 150:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvds_idiv_set = c_cnf->lvds->lvds_idiv_set;
  61              		.loc 1 150 0
  62 0048 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
  63 004c 0520CDE5 		strb	r2, [sp, #5]
 151:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvds_in_clk_sel = c_cnf->lvds->lvds_in_clk_sel;
  64              		.loc 1 151 0
  65 0050 0020D3E5 		ldrb	r2, [r3]	@ zero_extendqisi2
  66 0054 0420CDE5 		strb	r2, [sp, #4]
 152:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvds_odiv_set = c_cnf->lvds->lvds_odiv_set;
  67              		.loc 1 152 0
  68 0058 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  69 005c 0830CDE5 		strb	r3, [sp, #8]
 153:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvds_vdc_sel = c_cnf->lvds->lvds_vdc_sel;
  70              		.loc 1 153 0
  71 0060 043091E5 		ldr	r3, [r1, #4]
  72 0064 0520D3E5 		ldrb	r2, [r3, #5]	@ zero_extendqisi2
  73 0068 0920CDE5 		strb	r2, [sp, #9]
 154:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvdspll_fd = c_cnf->lvds->lvdspll_fd;
  74              		.loc 1 154 0
  75 006c B620D3E1 		ldrh	r2, [r3, #6]
  76 0070 BA20CDE1 		strh	r2, [sp, #10]	@ movhi
 155:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvdspll_od = c_cnf->lvds->lvdspll_od;
  77              		.loc 1 155 0
  78 0074 0A20D3E5 		ldrb	r2, [r3, #10]	@ zero_extendqisi2
  79 0078 0E20CDE5 		strb	r2, [sp, #14]
 156:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvdspll_rd = c_cnf->lvds->lvdspll_rd;
  80              		.loc 1 156 0
  81 007c B830D3E1 		ldrh	r3, [r3, #8]
  82 0080 BC30CDE1 		strh	r3, [sp, #12]	@ movhi
 157:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lvds.lvdspll_tst = LVDSPLL_TST;
  83              		.loc 1 157 0
  84 0084 B6C0CDE1 		strh	ip, [sp, #6]	@ movhi
 158:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             init.lvds = &lvds; /* LVDS parameter */
  85              		.loc 1 158 0
  86 0088 04308DE2 		add	r3, sp, #4
  87 008c 14308DE5 		str	r3, [sp, #20]
  88              	.L4:
 159:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 160:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         else
 161:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 162:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             /* Set NULL */
 163:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             init.lvds = NULL;
 164:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 165:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 166:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Initialize */
 167:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_Initialize (ch, &init, &R_VDC_OnInitialize, (uint32_t) ch);
  89              		.loc 1 167 0
  90 0090 0030A0E1 		mov	r3, r0
  91 0094 002000E3 		movw	r2, #:lower16:R_VDC_OnInitialize
  92 0098 002040E3 		movt	r2, #:upper16:R_VDC_OnInitialize
  93 009c 10108DE2 		add	r1, sp, #16
  94              	.LVL1:
  95 00a0 FEFFFFEB 		bl	R_VDC_Initialize
  96              	.LVL2:
 168:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 169:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 170:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 171:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_InitializeVDC() */
  97              		.loc 1 171 0
  98 00a4 1CD08DE2 		add	sp, sp, #28
  99              		.cfi_remember_state
 100              		.cfi_def_cfa_offset 4
 101              		@ sp needed
 102 00a8 04F09DE4 		ldr	pc, [sp], #4
 103              	.LVL3:
 104              	.L3:
 105              		.cfi_restore_state
 163:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 106              		.loc 1 163 0
 107 00ac 0030A0E3 		mov	r3, #0
 108 00b0 14308DE5 		str	r3, [sp, #20]
 109 00b4 F5FFFFEA 		b	.L4
 110              	.L5:
 111              		.cfi_def_cfa_offset 0
 112              		.cfi_restore 14
 139:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 113              		.loc 1 139 0
 114 00b8 0500A0E3 		mov	r0, #5
 115              	.LVL4:
 116 00bc 1EFF2FE1 		bx	lr
 117              		.cfi_endproc
 118              	.LFE0:
 120              		.section	.text.R_RVAPI_TerminateVDC,"ax",%progbits
 121              		.align	2
 122              		.global	R_RVAPI_TerminateVDC
 123              		.syntax unified
 124              		.arm
 125              		.fpu neon
 127              	R_RVAPI_TerminateVDC:
 128              	.LFB1:
 172:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 173:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 174:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_TerminateVDC
 175:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       VDC terminate processing
 176:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 177:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 178:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 179:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_TerminateVDC(const vdc_channel_t ch) 
 180:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 129              		.loc 1 180 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              	.LVL5:
 134 0000 10402DE9 		push	{r4, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 181:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 182:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 183:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* Finalize */
 184:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_Terminate (ch, &R_VDC_OnFinalize, (uint32_t) ch);
 138              		.loc 1 184 0
 139 0004 0020A0E1 		mov	r2, r0
 140 0008 001000E3 		movw	r1, #:lower16:R_VDC_OnFinalize
 141 000c 001040E3 		movt	r1, #:upper16:R_VDC_OnFinalize
 142 0010 FEFFFFEB 		bl	R_VDC_Terminate
 143              	.LVL6:
 185:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 186:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 187:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_TerminateVDC() */
 144              		.loc 1 187 0
 145 0014 1080BDE8 		pop	{r4, pc}
 146              		.cfi_endproc
 147              	.LFE1:
 149              		.section	.text.R_RVAPI_DispControlVDC,"ax",%progbits
 150              		.align	2
 151              		.global	R_RVAPI_DispControlVDC
 152              		.syntax unified
 153              		.arm
 154              		.fpu neon
 156              	R_RVAPI_DispControlVDC:
 157              	.LFB2:
 188:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 189:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 190:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_DispControlVDC
 191:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       VDC display out control processing
 192:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 193:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   res_vs_sel      : Vsync signal output select
 194:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  *                                - VDC_OFF: External input Vsync signal
 195:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  *                                - VDC_ON : Internally generated free-running Vsync signal
 196:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   q_cnf           : LCD setting config (QE for VDC header)
 197:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 198:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 199:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_DispControlVDC  
 200:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_onoff_t res_vs_sel,
 201:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const qe_config_t * const q_cnf)
 202:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 158              		.loc 1 202 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 128
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              	.LVL7:
 163 0000 30402DE9 		push	{r4, r5, lr}
 164              		.cfi_def_cfa_offset 12
 165              		.cfi_offset 4, -12
 166              		.cfi_offset 5, -8
 167              		.cfi_offset 14, -4
 168 0004 84D04DE2 		sub	sp, sp, #132
 169              		.cfi_def_cfa_offset 144
 170 0008 0050A0E1 		mov	r5, r0
 203:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 204:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_sync_ctrl_t sync_ctrl;
 205:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 206:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* Set NULL */
 207:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == q_cnf)
 171              		.loc 1 207 0
 172 000c 004052E2 		subs	r4, r2, #0
 173 0010 2600000A 		beq	.L16
 208:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 209:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 210:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 211:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 212:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 213:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Sync signal control */
 214:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_vs_sel = res_vs_sel; /* Vsync signal output select (free-running Vsync on/off
 174              		.loc 1 214 0
 175 0014 6C10CDE5 		strb	r1, [sp, #108]
 215:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 216:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Sync signal output and full-screen enable signal select */
 217:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_vs_in_sel = VDC_RES_VS_IN_SEL_SC0;
 176              		.loc 1 217 0
 177 0018 0030A0E3 		mov	r3, #0
 178 001c 6D30CDE5 		strb	r3, [sp, #109]
 218:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_fv = q_cnf->vtp; /* Free-running Vsync period setting */
 179              		.loc 1 218 0
 180 0020 B021D4E1 		ldrh	r2, [r4, #16]
 181              	.LVL8:
 182 0024 BE26CDE1 		strh	r2, [sp, #110]	@ movhi
 219:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_fh = q_cnf->htp; /* Hsync period setting */
 183              		.loc 1 219 0
 184 0028 B221D4E1 		ldrh	r2, [r4, #18]
 185 002c B027CDE1 		strh	r2, [sp, #112]	@ movhi
 220:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_vsdly = (uint16_t) 0u; /* Vsync signal delay control */
 186              		.loc 1 220 0
 187 0030 B237CDE1 		strh	r3, [sp, #114]	@ movhi
 221:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 222:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Full-screen enable control */
 223:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_f.vs = q_cnf->vs;
 188              		.loc 1 223 0
 189 0034 B420D4E1 		ldrh	r2, [r4, #4]
 190 0038 B427CDE1 		strh	r2, [sp, #116]	@ movhi
 224:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_f.vw = q_cnf->vdp;
 191              		.loc 1 224 0
 192 003c B620D4E1 		ldrh	r2, [r4, #6]
 193 0040 B627CDE1 		strh	r2, [sp, #118]	@ movhi
 225:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_f.hs = q_cnf->hs;
 194              		.loc 1 225 0
 195 0044 BC20D4E1 		ldrh	r2, [r4, #12]
 196 0048 B827CDE1 		strh	r2, [sp, #120]	@ movhi
 226:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.res_f.hw = q_cnf->hdp;
 197              		.loc 1 226 0
 198 004c BE20D4E1 		ldrh	r2, [r4, #14]
 199 0050 BA27CDE1 		strh	r2, [sp, #122]	@ movhi
 227:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 228:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Set NULL */
 229:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         sync_ctrl.vsync_cpmpe = NULL; /* Vsync signal compensation */
 200              		.loc 1 229 0
 201 0054 7C308DE5 		str	r3, [sp, #124]
 230:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 231:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Sync control */
 232:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_SyncControl (ch, &sync_ctrl);
 202              		.loc 1 232 0
 203 0058 6C108DE2 		add	r1, sp, #108
 204              	.LVL9:
 205 005c FEFFFFEB 		bl	R_VDC_SyncControl
 206              	.LVL10:
 207              	.L13:
 233:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 234:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 235:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 236:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == q_cnf)
 208              		.loc 1 236 0
 209 0060 000054E3 		cmp	r4, #0
 210 0064 1300000A 		beq	.L17
 237:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 238:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 239:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 240:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 241:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 242:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (VDC_OK == error)
 211              		.loc 1 242 0
 212 0068 000050E3 		cmp	r0, #0
 213 006c 0900001A 		bne	.L14
 243:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 244:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             /* full screen vale set */
 245:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             full_screen.vs = q_cnf->vs;
 214              		.loc 1 245 0
 215 0070 B420D4E1 		ldrh	r2, [r4, #4]
 216 0074 003000E3 		movw	r3, #:lower16:full_screen
 217 0078 003040E3 		movt	r3, #:upper16:full_screen
 218 007c B020C3E1 		strh	r2, [r3]	@ movhi
 246:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             full_screen.vw = q_cnf->vdp;
 219              		.loc 1 246 0
 220 0080 B620D4E1 		ldrh	r2, [r4, #6]
 221 0084 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 247:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             full_screen.hs = q_cnf->hs;
 222              		.loc 1 247 0
 223 0088 BC20D4E1 		ldrh	r2, [r4, #12]
 224 008c B420C3E1 		strh	r2, [r3, #4]	@ movhi
 248:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             full_screen.hw = q_cnf->hdp;
 225              		.loc 1 248 0
 226 0090 BE20D4E1 		ldrh	r2, [r4, #14]
 227 0094 B620C3E1 		strh	r2, [r3, #6]	@ movhi
 228              	.LVL11:
 229              	.L14:
 249:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 250:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 251:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 252:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 253:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == q_cnf)
 230              		.loc 1 253 0
 231 0098 000054E3 		cmp	r4, #0
 232 009c 5800000A 		beq	.L18
 254:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 255:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 256:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 257:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 258:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 259:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (VDC_OK == error)
 233              		.loc 1 259 0
 234 00a0 000050E3 		cmp	r0, #0
 235 00a4 0500000A 		beq	.L20
 236              	.LVL12:
 237              	.L15:
 260:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 261:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_output_t output;
 262:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_lcd_tcon_timing_t lcd_tcon_timing_vs;
 263:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_lcd_tcon_timing_t lcd_tcon_timing_hs;
 264:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_lcd_tcon_timing_t lcd_tcon_timing_ve;
 265:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_lcd_tcon_timing_t lcd_tcon_timing_he;
 266:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_lcd_tcon_timing_t lcd_tcon_timing_de;
 267:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 268:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_hsvs = q_cnf->vps; /* Signal pulse start position */
 269:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_hwvw = q_cnf->vpw; /* Pulse width */
 270:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 271:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 272:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_inv = q_cnf->tcon_vsync_inv; /* Polarity inversion control of s
 273:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_pin = q_cnf->tcon_vsync; /* LCD TCON output pin select */
 274:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 275:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 276:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_hsvs = q_cnf->hps; /* Signal pulse start position */
 277:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_hwvw = q_cnf->hpw; /* Pulse width */
 278:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 279:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 280:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_inv = q_cnf->tcon_hsync_inv; /* Polarity inversion control of s
 281:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_pin = q_cnf->tcon_hsync; /* LCD TCON output pin select */
 282:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 283:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 284:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_hsvs = 0u; /* Signal pulse start position */
 285:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_hwvw = 0u; /* Pulse width */
 286:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 287:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 288:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_inv = q_cnf->tcon_de_inv; /* Polarity inversion control of sign
 289:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_pin = q_cnf->tcon_de; /* LCD TCON output pin select */
 290:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 291:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 292:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_hsvs = q_cnf->vs; /* Signal pulse start position */
 293:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_hwvw = q_cnf->vdp; /* Pulse width */
 294:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 295:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 296:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_inv = VDC_SIG_POL_NOT_INVERTED; /* Polarity inversion control o
 297:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_pin = VDC_LCD_TCON_PIN_NON; /* LCD TCON output pin select */
 298:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 299:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 300:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_hsvs = q_cnf->hs; /* Signal pulse start position */
 301:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_hwvw = q_cnf->hdp; /* Pulse width */
 302:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 303:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 304:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_inv = VDC_SIG_POL_NOT_INVERTED; /* Polarity inversion control o
 305:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_pin = VDC_LCD_TCON_PIN_NON; /* LCD TCON output pin select */
 306:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 307:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 308:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STVA_VS] = (&lcd_tcon_timing_vs); /* STVA/VS: Vsync */
 309:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STVB_VE] = (&lcd_tcon_timing_ve); /* STVB/VE: Not used *
 310:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STH_SP_HS] = (&lcd_tcon_timing_hs); /* STH/SP/HS: Hsync 
 311:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STB_LP_HE] = (&lcd_tcon_timing_he); /* STB/LP/HE: Not us
 312:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_CPV_GCK] = NULL; /* CPV/GCK: Not used */
 313:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_POLA] = NULL; /* POLA: Not used */
 314:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_POLB] = NULL; /* POLB: Not used */
 315:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_DE] = (&lcd_tcon_timing_de); /* DE: Not used */
 316:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 317:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             /* Output parameter */
 318:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.tcon_half = q_cnf->tcon_half; /* TCON reference timing, 1/2fH timing */
 319:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.tcon_offset = q_cnf->tcon_ofset; /* TCON reference timing, offset Hsync signal t
 320:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 321:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             /* LCD TCON timing setting */
 322:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outcnt_lcd_edge
 323:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     = q_cnf->lcd_data_out_edge; /* Output phase control of LCD_DATA23 to LCD_DATA0 
 324:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_endian_on = VDC_OFF; /* Bit endian change on/off control */
 325:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_swap_on = VDC_OFF; /* B/R signal swap on/off control */
 326:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_format = q_cnf->lcd_outformat; /* Output format select */
 327:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_frq_sel = VDC_LCD_PARALLEL_CLKFRQ_1; /* Clock frequency control */
 328:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_dir_sel = VDC_LCD_SERIAL_SCAN_FORWARD; /* Scan direction select */
 329:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_phase = VDC_LCD_SERIAL_CLKPHASE_0; /* Clock phase adjustment */
 330:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.bg_color = (uint32_t) 0x00000000u; /* Background color in 24-bit RGB color forma
 331:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 332:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             /* Display output */
 333:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             error = R_VDC_DisplayOutput (ch, &output); /* Green screen */
 334:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 335:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 336:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 337:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 338:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_DispControlVDC() */
 238              		.loc 1 338 0
 239 00a8 84D08DE2 		add	sp, sp, #132
 240              		.cfi_remember_state
 241              		.cfi_def_cfa_offset 12
 242              		@ sp needed
 243 00ac 3080BDE8 		pop	{r4, r5, pc}
 244              	.LVL13:
 245              	.L16:
 246              		.cfi_restore_state
 209:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 247              		.loc 1 209 0
 248 00b0 0500A0E3 		mov	r0, #5
 249              	.LVL14:
 250 00b4 E9FFFFEA 		b	.L13
 251              	.LVL15:
 252              	.L17:
 238:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 253              		.loc 1 238 0
 254 00b8 0500A0E3 		mov	r0, #5
 255              	.LVL16:
 256 00bc F5FFFFEA 		b	.L14
 257              	.LVL17:
 258              	.L20:
 259              	.LBB2:
 268:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_hwvw = q_cnf->vpw; /* Pulse width */
 260              		.loc 1 268 0
 261 00c0 B030D4E1 		ldrh	r3, [r4]
 262 00c4 B030CDE1 		strh	r3, [sp]	@ movhi
 269:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 263              		.loc 1 269 0
 264 00c8 B230D4E1 		ldrh	r3, [r4, #2]
 265 00cc B230CDE1 		strh	r3, [sp, #2]	@ movhi
 270:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 266              		.loc 1 270 0
 267 00d0 0030A0E3 		mov	r3, #0
 268 00d4 0430CDE5 		strb	r3, [sp, #4]
 271:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_inv = q_cnf->tcon_vsync_inv; /* Polarity inversion control of s
 269              		.loc 1 271 0
 270 00d8 0530CDE5 		strb	r3, [sp, #5]
 272:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.tcon_pin = q_cnf->tcon_vsync; /* LCD TCON output pin select */
 271              		.loc 1 272 0
 272 00dc 1720D4E5 		ldrb	r2, [r4, #23]	@ zero_extendqisi2
 273 00e0 0620CDE5 		strb	r2, [sp, #6]
 273:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_vs.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 274              		.loc 1 273 0
 275 00e4 D421D4E1 		ldrsb	r2, [r4, #20]
 276 00e8 0720CDE5 		strb	r2, [sp, #7]
 274:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 277              		.loc 1 274 0
 278 00ec 0830CDE5 		strb	r3, [sp, #8]
 276:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_hwvw = q_cnf->hpw; /* Pulse width */
 279              		.loc 1 276 0
 280 00f0 B820D4E1 		ldrh	r2, [r4, #8]
 281 00f4 BC20CDE1 		strh	r2, [sp, #12]	@ movhi
 277:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 282              		.loc 1 277 0
 283 00f8 BA20D4E1 		ldrh	r2, [r4, #10]
 284 00fc BE20CDE1 		strh	r2, [sp, #14]	@ movhi
 278:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 285              		.loc 1 278 0
 286 0100 1030CDE5 		strb	r3, [sp, #16]
 279:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_inv = q_cnf->tcon_hsync_inv; /* Polarity inversion control of s
 287              		.loc 1 279 0
 288 0104 1130CDE5 		strb	r3, [sp, #17]
 280:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.tcon_pin = q_cnf->tcon_hsync; /* LCD TCON output pin select */
 289              		.loc 1 280 0
 290 0108 1820D4E5 		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 291 010c 1220CDE5 		strb	r2, [sp, #18]
 281:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_hs.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 292              		.loc 1 281 0
 293 0110 D521D4E1 		ldrsb	r2, [r4, #21]
 294 0114 1320CDE5 		strb	r2, [sp, #19]
 282:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 295              		.loc 1 282 0
 296 0118 1430CDE5 		strb	r3, [sp, #20]
 284:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_hwvw = 0u; /* Pulse width */
 297              		.loc 1 284 0
 298 011c B033CDE1 		strh	r3, [sp, #48]	@ movhi
 285:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 299              		.loc 1 285 0
 300 0120 B233CDE1 		strh	r3, [sp, #50]	@ movhi
 286:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 301              		.loc 1 286 0
 302 0124 3430CDE5 		strb	r3, [sp, #52]
 287:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_inv = q_cnf->tcon_de_inv; /* Polarity inversion control of sign
 303              		.loc 1 287 0
 304 0128 3530CDE5 		strb	r3, [sp, #53]
 288:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.tcon_pin = q_cnf->tcon_de; /* LCD TCON output pin select */
 305              		.loc 1 288 0
 306 012c 1920D4E5 		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 307 0130 3620CDE5 		strb	r2, [sp, #54]
 289:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_de.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 308              		.loc 1 289 0
 309 0134 D621D4E1 		ldrsb	r2, [r4, #22]
 310 0138 3720CDE5 		strb	r2, [sp, #55]
 290:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 311              		.loc 1 290 0
 312 013c 3830CDE5 		strb	r3, [sp, #56]
 292:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_hwvw = q_cnf->vdp; /* Pulse width */
 313              		.loc 1 292 0
 314 0140 B420D4E1 		ldrh	r2, [r4, #4]
 315 0144 B821CDE1 		strh	r2, [sp, #24]	@ movhi
 293:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 316              		.loc 1 293 0
 317 0148 B620D4E1 		ldrh	r2, [r4, #6]
 318 014c BA21CDE1 		strh	r2, [sp, #26]	@ movhi
 294:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 319              		.loc 1 294 0
 320 0150 1C30CDE5 		strb	r3, [sp, #28]
 295:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_inv = VDC_SIG_POL_NOT_INVERTED; /* Polarity inversion control o
 321              		.loc 1 295 0
 322 0154 1D30CDE5 		strb	r3, [sp, #29]
 296:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.tcon_pin = VDC_LCD_TCON_PIN_NON; /* LCD TCON output pin select */
 323              		.loc 1 296 0
 324 0158 1E30CDE5 		strb	r3, [sp, #30]
 297:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_ve.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 325              		.loc 1 297 0
 326 015c 0020E0E3 		mvn	r2, #0
 327 0160 1F20CDE5 		strb	r2, [sp, #31]
 298:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 328              		.loc 1 298 0
 329 0164 2030CDE5 		strb	r3, [sp, #32]
 300:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_hwvw = q_cnf->hdp; /* Pulse width */
 330              		.loc 1 300 0
 331 0168 BC10D4E1 		ldrh	r1, [r4, #12]
 332 016c B412CDE1 		strh	r1, [sp, #36]	@ movhi
 301:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_md = VDC_LCD_TCON_POLMD_NORMAL; /* POLA/POLB signal generation 
 333              		.loc 1 301 0
 334 0170 BE10D4E1 		ldrh	r1, [r4, #14]
 335 0174 B612CDE1 		strh	r1, [sp, #38]	@ movhi
 302:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_hs_sel = VDC_LCD_TCON_REFSEL_HSYNC; /* Signal operating referen
 336              		.loc 1 302 0
 337 0178 2830CDE5 		strb	r3, [sp, #40]
 303:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_inv = VDC_SIG_POL_NOT_INVERTED; /* Polarity inversion control o
 338              		.loc 1 303 0
 339 017c 2930CDE5 		strb	r3, [sp, #41]
 304:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.tcon_pin = VDC_LCD_TCON_PIN_NON; /* LCD TCON output pin select */
 340              		.loc 1 304 0
 341 0180 2A30CDE5 		strb	r3, [sp, #42]
 305:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             lcd_tcon_timing_he.outcnt_edge = VDC_EDGE_RISING; /* Output phase control of signal */
 342              		.loc 1 305 0
 343 0184 2B20CDE5 		strb	r2, [sp, #43]
 306:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 344              		.loc 1 306 0
 345 0188 2C30CDE5 		strb	r3, [sp, #44]
 308:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STVB_VE] = (&lcd_tcon_timing_ve); /* STVB/VE: Not used *
 346              		.loc 1 308 0
 347 018c 40D08DE5 		str	sp, [sp, #64]
 309:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STH_SP_HS] = (&lcd_tcon_timing_hs); /* STH/SP/HS: Hsync 
 348              		.loc 1 309 0
 349 0190 18208DE2 		add	r2, sp, #24
 350 0194 44208DE5 		str	r2, [sp, #68]
 310:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_STB_LP_HE] = (&lcd_tcon_timing_he); /* STB/LP/HE: Not us
 351              		.loc 1 310 0
 352 0198 0C208DE2 		add	r2, sp, #12
 353 019c 48208DE5 		str	r2, [sp, #72]
 311:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_CPV_GCK] = NULL; /* CPV/GCK: Not used */
 354              		.loc 1 311 0
 355 01a0 24208DE2 		add	r2, sp, #36
 356 01a4 4C208DE5 		str	r2, [sp, #76]
 312:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_POLA] = NULL; /* POLA: Not used */
 357              		.loc 1 312 0
 358 01a8 50308DE5 		str	r3, [sp, #80]
 313:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_POLB] = NULL; /* POLB: Not used */
 359              		.loc 1 313 0
 360 01ac 54308DE5 		str	r3, [sp, #84]
 314:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.outctrl[VDC_LCD_TCONSIG_DE] = (&lcd_tcon_timing_de); /* DE: Not used */
 361              		.loc 1 314 0
 362 01b0 58308DE5 		str	r3, [sp, #88]
 315:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 363              		.loc 1 315 0
 364 01b4 30208DE2 		add	r2, sp, #48
 365 01b8 5C208DE5 		str	r2, [sp, #92]
 318:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.tcon_offset = q_cnf->tcon_ofset; /* TCON reference timing, offset Hsync signal t
 366              		.loc 1 318 0
 367 01bc BA21D4E1 		ldrh	r2, [r4, #26]
 368 01c0 BC23CDE1 		strh	r2, [sp, #60]	@ movhi
 319:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 369              		.loc 1 319 0
 370 01c4 BC21D4E1 		ldrh	r2, [r4, #28]
 371 01c8 BE23CDE1 		strh	r2, [sp, #62]	@ movhi
 323:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_endian_on = VDC_OFF; /* Bit endian change on/off control */
 372              		.loc 1 323 0
 373 01cc 1E20D4E5 		ldrb	r2, [r4, #30]	@ zero_extendqisi2
 374 01d0 6020CDE5 		strb	r2, [sp, #96]
 324:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_swap_on = VDC_OFF; /* B/R signal swap on/off control */
 375              		.loc 1 324 0
 376 01d4 6130CDE5 		strb	r3, [sp, #97]
 325:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_format = q_cnf->lcd_outformat; /* Output format select */
 377              		.loc 1 325 0
 378 01d8 6230CDE5 		strb	r3, [sp, #98]
 326:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_frq_sel = VDC_LCD_PARALLEL_CLKFRQ_1; /* Clock frequency control */
 379              		.loc 1 326 0
 380 01dc 1F20D4E5 		ldrb	r2, [r4, #31]	@ zero_extendqisi2
 381 01e0 6320CDE5 		strb	r2, [sp, #99]
 327:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_dir_sel = VDC_LCD_SERIAL_SCAN_FORWARD; /* Scan direction select */
 382              		.loc 1 327 0
 383 01e4 6430CDE5 		strb	r3, [sp, #100]
 328:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.out_phase = VDC_LCD_SERIAL_CLKPHASE_0; /* Clock phase adjustment */
 384              		.loc 1 328 0
 385 01e8 6530CDE5 		strb	r3, [sp, #101]
 329:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             output.bg_color = (uint32_t) 0x00000000u; /* Background color in 24-bit RGB color forma
 386              		.loc 1 329 0
 387 01ec 6630CDE5 		strb	r3, [sp, #102]
 330:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 388              		.loc 1 330 0
 389 01f0 68308DE5 		str	r3, [sp, #104]
 333:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 390              		.loc 1 333 0
 391 01f4 3C108DE2 		add	r1, sp, #60
 392 01f8 0500A0E1 		mov	r0, r5
 393              	.LVL18:
 394 01fc FEFFFFEB 		bl	R_VDC_DisplayOutput
 395              	.LVL19:
 396 0200 A8FFFFEA 		b	.L15
 397              	.L18:
 398              	.LBE2:
 255:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 399              		.loc 1 255 0
 400 0204 0500A0E3 		mov	r0, #5
 401              	.LVL20:
 402 0208 A6FFFFEA 		b	.L15
 403              		.cfi_endproc
 404              	.LFE2:
 406              		.section	.text.R_RVAPI_GraphCreateSurfaceVDC,"ax",%progbits
 407              		.align	2
 408              		.global	R_RVAPI_GraphCreateSurfaceVDC
 409              		.syntax unified
 410              		.arm
 411              		.fpu neon
 413              	R_RVAPI_GraphCreateSurfaceVDC:
 414              	.LFB3:
 339:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 340:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 341:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_GraphCreateSurfaceVDC
 342:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Graphics create surface processing
 343:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch            : Channel
 344:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gr_disp_cnf   : Graphics surface read config
 345:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 346:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 347:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_GraphCreateSurfaceVDC 
 348:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const gr_surface_disp_config_t * const gr_disp_cnf)
 349:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 415              		.loc 1 349 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 40
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              	.LVL21:
 420 0000 30402DE9 		push	{r4, r5, lr}
 421              		.cfi_def_cfa_offset 12
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 5, -8
 424              		.cfi_offset 14, -4
 425 0004 2CD04DE2 		sub	sp, sp, #44
 426              		.cfi_def_cfa_offset 56
 427 0008 0050A0E1 		mov	r5, r0
 350:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 351:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_read_t read_cfg;
 352:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 353:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 354:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == gr_disp_cnf)
 428              		.loc 1 354 0
 429 000c 004051E2 		subs	r4, r1, #0
 430 0010 3D00000A 		beq	.L31
 355:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 356:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 357:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 358:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 359:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 360:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Read data parameter */
 361:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_ln_off_dir = VDC_GR_LN_OFF_DIR_INC; /* Line offset address direction of the fra
 431              		.loc 1 361 0
 432 0014 0030A0E3 		mov	r3, #0
 433 0018 0C30CDE5 		strb	r3, [sp, #12]
 362:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_flm_sel = VDC_GR_FLM_SEL_FLM_NUM; /* Selects a frame buffer address setting sig
 434              		.loc 1 362 0
 435 001c 0120A0E3 		mov	r2, #1
 436 0020 0D20CDE5 		strb	r2, [sp, #13]
 363:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_imr_flm_inv = VDC_OFF; /* Frame buffer number for distortion correction */
 437              		.loc 1 363 0
 438 0024 0E30CDE5 		strb	r3, [sp, #14]
 364:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_bst_md = VDC_BST_MD_32BYTE; /* Frame buffer burst transfer mode */
 439              		.loc 1 364 0
 440 0028 0F30CDE5 		strb	r3, [sp, #15]
 365:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_base = gr_disp_cnf->fb_buff; /* Frame buffer base address */
 441              		.loc 1 365 0
 442 002c 0C1094E5 		ldr	r1, [r4, #12]
 443              	.LVL22:
 444 0030 10108DE5 		str	r1, [sp, #16]
 366:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_ln_off = gr_disp_cnf->fb_stride; /* Frame buffer line offset address */
 445              		.loc 1 366 0
 446 0034 101094E5 		ldr	r1, [r4, #16]
 447 0038 14108DE5 		str	r1, [sp, #20]
 367:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.width_read_fb = NULL; /* Width of the image read from frame buffer */
 448              		.loc 1 367 0
 449 003c 18308DE5 		str	r3, [sp, #24]
 368:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.adj_sel = VDC_ON; /* Measures to decrease the influence by folding pixels/lines (o
 450              		.loc 1 368 0
 451 0040 1C20CDE5 		strb	r2, [sp, #28]
 369:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_format = gr_disp_cnf->read_format; /* Format of the frame buffer read signal */
 452              		.loc 1 369 0
 453 0044 1430D4E5 		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 454 0048 1D30CDE5 		strb	r3, [sp, #29]
 370:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_ycc_swap = gr_disp_cnf->read_ycc_swap; /* Controls swapping of data read from b
 455              		.loc 1 370 0
 456 004c 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 457 0050 1E30CDE5 		strb	r3, [sp, #30]
 371:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****          in the YCbCr422 format */
 372:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_rdswa = gr_disp_cnf->read_swap; /* Frame buffer swap setting */
 458              		.loc 1 372 0
 459 0054 1D30D4E5 		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 460 0058 1F30CDE5 		strb	r3, [sp, #31]
 373:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 374:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Display area */
 375:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* vertical start position */
 376:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_grc.vs = (uint16_t) (gr_disp_cnf->disp_area.vs_rel + full_screen.vs);
 461              		.loc 1 376 0
 462 005c B210D4E1 		ldrh	r1, [r4, #2]
 463 0060 003000E3 		movw	r3, #:lower16:full_screen
 464 0064 003040E3 		movt	r3, #:upper16:full_screen
 465 0068 B020D3E1 		ldrh	r2, [r3]
 466 006c 012082E0 		add	r2, r2, r1
 467 0070 B022CDE1 		strh	r2, [sp, #32]	@ movhi
 377:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 378:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* vertical display size */
 379:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_grc.vw = (uint16_t) gr_disp_cnf->disp_area.vw_rel;
 468              		.loc 1 379 0
 469 0074 B420D4E1 		ldrh	r2, [r4, #4]
 470 0078 B222CDE1 		strh	r2, [sp, #34]	@ movhi
 380:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 381:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* horizontal start position */
 382:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_grc.hs = (uint16_t) (gr_disp_cnf->disp_area.hs_rel + full_screen.hs);
 471              		.loc 1 382 0
 472 007c B620D4E1 		ldrh	r2, [r4, #6]
 473 0080 B430D3E1 		ldrh	r3, [r3, #4]
 474 0084 023083E0 		add	r3, r3, r2
 475 0088 B432CDE1 		strh	r3, [sp, #36]	@ movhi
 383:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 384:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* horizontal display size */
 385:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_cfg.gr_grc.hw = (uint16_t) gr_disp_cnf->disp_area.hw_rel;
 476              		.loc 1 385 0
 477 008c B830D4E1 		ldrh	r3, [r4, #8]
 478 0090 B632CDE1 		strh	r3, [sp, #38]	@ movhi
 386:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 387:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Read data control */
 388:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_ReadDataControl (ch, gr_disp_cnf->layer_id, &read_cfg);
 479              		.loc 1 388 0
 480 0094 0C208DE2 		add	r2, sp, #12
 481 0098 D010D4E1 		ldrsb	r1, [r4]
 482 009c FEFFFFEB 		bl	R_VDC_ReadDataControl
 483              	.LVL23:
 484              	.L22:
 389:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 390:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 391:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 392:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == gr_disp_cnf)
 485              		.loc 1 392 0
 486 00a0 000054E3 		cmp	r4, #0
 487 00a4 3200000A 		beq	.L32
 393:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 394:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 395:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 396:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 397:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 398:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (((VDC_GR_FORMAT_CLUT8 == gr_disp_cnf->read_format) || (VDC_GR_FORMAT_CLUT4 == gr_disp_c
 488              		.loc 1 398 0
 489 00a8 1420D4E5 		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 399:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 || (VDC_GR_FORMAT_CLUT1 == gr_disp_cnf->read_format))
 490              		.loc 1 399 0
 491 00ac 053042E2 		sub	r3, r2, #5
 492 00b0 7330EFE6 		uxtb	r3, r3
 398:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 || (VDC_GR_FORMAT_CLUT1 == gr_disp_cnf->read_format))
 493              		.loc 1 398 0
 494 00b4 020053E3 		cmp	r3, #2
 495 00b8 0D00008A 		bhi	.L23
 496              	.LBB3:
 400:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 401:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_clut_t clut_conf;
 402:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 403:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             if (VDC_GR_FORMAT_CLUT8 == gr_disp_cnf->read_format)
 497              		.loc 1 403 0
 498 00bc 050052E3 		cmp	r2, #5
 499 00c0 1300000A 		beq	.L35
 404:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
 405:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 clut_conf.color_num = CLUT8_TABLE_NUM;
 406:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 407:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* pointer NULL check */
 408:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if (NULL == gr_disp_cnf->clut_table)
 409:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 410:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     clut_conf.clut = &color_table256[0u];
 411:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 412:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 else
 413:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 414:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     clut_conf.clut = gr_disp_cnf->clut_table;
 415:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 416:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 417:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             else if (VDC_GR_FORMAT_CLUT4 == gr_disp_cnf->read_format)
 500              		.loc 1 417 0
 501 00c4 060052E3 		cmp	r2, #6
 502 00c8 1B00000A 		beq	.L36
 418:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
 419:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 clut_conf.color_num = CLUT4_TABLE_NUM;
 420:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 421:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* pointer NULL check */
 422:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if (NULL == gr_disp_cnf->clut_table)
 423:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 424:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     clut_conf.clut = &color_table16[0u];
 425:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 426:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 else
 427:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 428:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     clut_conf.clut = gr_disp_cnf->clut_table;
 429:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 430:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 431:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             else
 432:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
 433:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 clut_conf.color_num = CLUT1_TABLE_NUM;
 503              		.loc 1 433 0
 504 00cc 0230A0E3 		mov	r3, #2
 505 00d0 04308DE5 		str	r3, [sp, #4]
 434:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 435:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* pointer NULL check */
 436:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if (NULL == gr_disp_cnf->clut_table)
 506              		.loc 1 436 0
 507 00d4 183094E5 		ldr	r3, [r4, #24]
 508 00d8 000053E3 		cmp	r3, #0
 509 00dc 2000000A 		beq	.L37
 437:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 438:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     clut_conf.clut = &color_table2[0u];
 439:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 440:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 else
 441:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 442:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     clut_conf.clut = gr_disp_cnf->clut_table;
 510              		.loc 1 442 0
 511 00e0 08308DE5 		str	r3, [sp, #8]
 512              	.L26:
 443:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 444:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 445:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             error = R_VDC_CLUT (ch, gr_disp_cnf->layer_id, &clut_conf);
 513              		.loc 1 445 0 discriminator 1
 514 00e4 04208DE2 		add	r2, sp, #4
 515 00e8 D010D4E1 		ldrsb	r1, [r4]
 516 00ec 0500A0E1 		mov	r0, r5
 517              	.LVL24:
 518 00f0 FEFFFFEB 		bl	R_VDC_CLUT
 519              	.LVL25:
 520              	.L23:
 521              	.LBE3:
 446:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 447:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 448:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 449:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 450:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == gr_disp_cnf)
 522              		.loc 1 450 0
 523 00f4 000054E3 		cmp	r4, #0
 524 00f8 2800000A 		beq	.L33
 451:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 452:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_UNDEFINED;
 453:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 454:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 455:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 456:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (VDC_OK == error)
 525              		.loc 1 456 0
 526 00fc 000050E3 		cmp	r0, #0
 527 0100 1D00000A 		beq	.L38
 528              	.LVL26:
 529              	.L30:
 457:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 458:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_start_t start;
 459:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_gr_disp_sel_t disp_mode;
 460:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 461:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             disp_mode = gr_disp_cnf->disp_mode;
 462:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             start.gr_disp_sel = &disp_mode;
 463:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             error = R_VDC_StartProcess (ch, gr_disp_cnf->layer_id, &start);
 464:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 465:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 466:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 467:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_GraphCreateSurfaceVDC() */
 530              		.loc 1 467 0
 531 0104 2CD08DE2 		add	sp, sp, #44
 532              		.cfi_remember_state
 533              		.cfi_def_cfa_offset 12
 534              		@ sp needed
 535 0108 3080BDE8 		pop	{r4, r5, pc}
 536              	.LVL27:
 537              	.L31:
 538              		.cfi_restore_state
 356:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 539              		.loc 1 356 0
 540 010c 0500A0E3 		mov	r0, #5
 541              	.LVL28:
 542 0110 E2FFFFEA 		b	.L22
 543              	.LVL29:
 544              	.L35:
 545              	.LBB4:
 405:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 546              		.loc 1 405 0
 547 0114 013CA0E3 		mov	r3, #256
 548 0118 04308DE5 		str	r3, [sp, #4]
 408:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 549              		.loc 1 408 0
 550 011c 183094E5 		ldr	r3, [r4, #24]
 551 0120 000053E3 		cmp	r3, #0
 414:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 552              		.loc 1 414 0
 553 0124 08308D15 		strne	r3, [sp, #8]
 554 0128 EDFFFF1A 		bne	.L26
 555              	.L39:
 410:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 556              		.loc 1 410 0
 557 012c 003000E3 		movw	r3, #:lower16:.LANCHOR0
 558 0130 003040E3 		movt	r3, #:upper16:.LANCHOR0
 559 0134 08308DE5 		str	r3, [sp, #8]
 560 0138 E9FFFFEA 		b	.L26
 561              	.L36:
 419:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 562              		.loc 1 419 0
 563 013c 1030A0E3 		mov	r3, #16
 564 0140 04308DE5 		str	r3, [sp, #4]
 422:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 565              		.loc 1 422 0
 566 0144 183094E5 		ldr	r3, [r4, #24]
 567 0148 000053E3 		cmp	r3, #0
 428:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 568              		.loc 1 428 0
 569 014c 08308D15 		strne	r3, [sp, #8]
 570 0150 E3FFFF1A 		bne	.L26
 571              	.L40:
 424:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 572              		.loc 1 424 0
 573 0154 003000E3 		movw	r3, #:lower16:.LANCHOR1
 574 0158 003040E3 		movt	r3, #:upper16:.LANCHOR1
 575 015c 08308DE5 		str	r3, [sp, #8]
 576 0160 DFFFFFEA 		b	.L26
 577              	.L37:
 438:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 578              		.loc 1 438 0
 579 0164 003000E3 		movw	r3, #:lower16:.LANCHOR2
 580 0168 003040E3 		movt	r3, #:upper16:.LANCHOR2
 581 016c 08308DE5 		str	r3, [sp, #8]
 582 0170 DBFFFFEA 		b	.L26
 583              	.L32:
 584              	.LBE4:
 394:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 585              		.loc 1 394 0
 586 0174 0500A0E3 		mov	r0, #5
 587              	.LVL30:
 588 0178 DDFFFFEA 		b	.L23
 589              	.LVL31:
 590              	.L38:
 591              	.LBB5:
 461:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             start.gr_disp_sel = &disp_mode;
 592              		.loc 1 461 0
 593 017c DE21D4E1 		ldrsb	r2, [r4, #30]
 594 0180 28308DE2 		add	r3, sp, #40
 595 0184 252063E5 		strb	r2, [r3, #-37]!
 462:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             error = R_VDC_StartProcess (ch, gr_disp_cnf->layer_id, &start);
 596              		.loc 1 462 0
 597 0188 28208DE2 		add	r2, sp, #40
 598 018c 243022E5 		str	r3, [r2, #-36]!
 463:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 599              		.loc 1 463 0
 600 0190 D010D4E1 		ldrsb	r1, [r4]
 601 0194 0500A0E1 		mov	r0, r5
 602              	.LVL32:
 603 0198 FEFFFFEB 		bl	R_VDC_StartProcess
 604              	.LVL33:
 605 019c D8FFFFEA 		b	.L30
 606              	.L33:
 607              	.LBE5:
 452:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 608              		.loc 1 452 0
 609 01a0 0500A0E3 		mov	r0, #5
 610              	.LVL34:
 611 01a4 D6FFFFEA 		b	.L30
 612              		.cfi_endproc
 613              	.LFE3:
 615              		.section	.text.R_RVAPI_GraphChangeSurfaceVDC,"ax",%progbits
 616              		.align	2
 617              		.global	R_RVAPI_GraphChangeSurfaceVDC
 618              		.syntax unified
 619              		.arm
 620              		.fpu neon
 622              	R_RVAPI_GraphChangeSurfaceVDC:
 623              	.LFB4:
 468:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 469:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 470:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_GraphChangeSurfaceVDC
 471:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Graphics change surface processing
 472:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 473:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 474:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   fb_buff       : Base address of the frame buffer
 475:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 476:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 477:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_GraphChangeSurfaceVDC
 478:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_layer_id_t layer_id, void * const fb_buff)
 479:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 624              		.loc 1 479 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 16
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              	.LVL35:
 629 0000 04E02DE5 		str	lr, [sp, #-4]!
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 14, -4
 632 0004 14D04DE2 		sub	sp, sp, #20
 633              		.cfi_def_cfa_offset 24
 480:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 481:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_read_chg_t read_chg;
 482:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 483:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.gr_base = fb_buff;     /* Set buffer */
 634              		.loc 1 483 0
 635 0008 00208DE5 		str	r2, [sp]
 484:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.gr_disp_sel = NULL;    /* Set NULL */
 636              		.loc 1 484 0
 637 000c 0030A0E3 		mov	r3, #0
 638 0010 0C308DE5 		str	r3, [sp, #12]
 485:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.gr_grc = NULL;         /* Set NULL */
 639              		.loc 1 485 0
 640 0014 08308DE5 		str	r3, [sp, #8]
 486:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.width_read_fb = NULL;  /* Set NULL */
 641              		.loc 1 486 0
 642 0018 04308DE5 		str	r3, [sp, #4]
 487:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_ChangeReadProcess (ch, layer_id, &read_chg);
 643              		.loc 1 487 0
 644 001c 0D20A0E1 		mov	r2, sp
 645              	.LVL36:
 646 0020 FEFFFFEB 		bl	R_VDC_ChangeReadProcess
 647              	.LVL37:
 488:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 489:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 490:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_GraphChangeSurfaceVDC() */
 648              		.loc 1 490 0
 649 0024 14D08DE2 		add	sp, sp, #20
 650              		.cfi_def_cfa_offset 4
 651              		@ sp needed
 652 0028 04F09DE4 		ldr	pc, [sp], #4
 653              		.cfi_endproc
 654              	.LFE4:
 656              		.section	.text.R_RVAPI_GraphChangeSurfaceConfigVDC,"ax",%progbits
 657              		.align	2
 658              		.global	R_RVAPI_GraphChangeSurfaceConfigVDC
 659              		.syntax unified
 660              		.arm
 661              		.fpu neon
 663              	R_RVAPI_GraphChangeSurfaceConfigVDC:
 664              	.LFB5:
 491:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 492:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 493:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_GraphChangeSurfaceConfigVDC
 494:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Graphics change surface processing
 495:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 496:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 497:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   fb_buff         : Base address of the frame buffer
 498:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gr_grc          : Disp area
 499:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   width_read_fb   : VRAM Read size
 500:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gr_disp_sel     : disp sel
 501:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 502:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 503:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t
 504:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         R_RVAPI_GraphChangeSurfaceConfigVDC  
 505:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_layer_id_t layer_id,
 506:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         void * const fb_buff, vdc_period_rect_t * const gr_grc,
 507:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         vdc_width_read_fb_t * const width_read_fb, vdc_gr_disp_sel_t * const gr_disp_sel)
 508:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 665              		.loc 1 508 0
 666              		.cfi_startproc
 667              		@ args = 8, pretend = 0, frame = 24
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              	.LVL38:
 670 0000 10402DE9 		push	{r4, lr}
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
 673              		.cfi_offset 14, -4
 674 0004 18D04DE2 		sub	sp, sp, #24
 675              		.cfi_def_cfa_offset 32
 509:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t         error;
 510:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_period_rect_t   change_area;
 511:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_read_chg_t      read_chg;
 512:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 513:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 514:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if( NULL != gr_grc )
 676              		.loc 1 514 0
 677 0008 000053E3 		cmp	r3, #0
 678 000c 1800000A 		beq	.L44
 515:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 516:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Display area */
 517:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         change_area.hs = (uint16_t)(gr_grc->hs + full_screen.hs);  /* horizontal start position */
 679              		.loc 1 517 0
 680 0010 B440D3E1 		ldrh	r4, [r3, #4]
 681 0014 00C000E3 		movw	ip, #:lower16:full_screen
 682 0018 00C040E3 		movt	ip, #:upper16:full_screen
 683 001c B4E0DCE1 		ldrh	lr, [ip, #4]
 684 0020 04E08EE0 		add	lr, lr, r4
 685 0024 B4E1CDE1 		strh	lr, [sp, #20]	@ movhi
 518:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         change_area.hw = (uint16_t)gr_grc->hw;                     /* horizontal display size */
 686              		.loc 1 518 0
 687 0028 B6E0D3E1 		ldrh	lr, [r3, #6]
 688 002c B6E1CDE1 		strh	lr, [sp, #22]	@ movhi
 519:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         change_area.vs = (uint16_t)(gr_grc->vs + full_screen.vs);  /* vertical start position */
 689              		.loc 1 519 0
 690 0030 B0E0D3E1 		ldrh	lr, [r3]
 691 0034 B0C0DCE1 		ldrh	ip, [ip]
 692 0038 0EC08CE0 		add	ip, ip, lr
 693 003c B0C1CDE1 		strh	ip, [sp, #16]	@ movhi
 520:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         change_area.vw = gr_grc->vw;                               /* vertical display size */
 694              		.loc 1 520 0
 695 0040 B230D3E1 		ldrh	r3, [r3, #2]
 696              	.LVL39:
 697 0044 B231CDE1 		strh	r3, [sp, #18]	@ movhi
 521:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_chg.gr_grc = &change_area;
 698              		.loc 1 521 0
 699 0048 10308DE2 		add	r3, sp, #16
 700 004c 08308DE5 		str	r3, [sp, #8]
 701              	.L45:
 522:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 523:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 524:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 525:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Set NULL*/
 526:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         read_chg.gr_grc = NULL;
 527:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 528:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 529:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.gr_base = fb_buff;
 702              		.loc 1 529 0
 703 0050 00208DE5 		str	r2, [sp]
 530:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.gr_disp_sel = gr_disp_sel;
 704              		.loc 1 530 0
 705 0054 24309DE5 		ldr	r3, [sp, #36]
 706 0058 0C308DE5 		str	r3, [sp, #12]
 531:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     read_chg.width_read_fb = width_read_fb;
 707              		.loc 1 531 0
 708 005c 20309DE5 		ldr	r3, [sp, #32]
 709 0060 04308DE5 		str	r3, [sp, #4]
 532:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 533:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_ChangeReadProcess (ch, layer_id, &read_chg);
 710              		.loc 1 533 0
 711 0064 0D20A0E1 		mov	r2, sp
 712              	.LVL40:
 713 0068 FEFFFFEB 		bl	R_VDC_ChangeReadProcess
 714              	.LVL41:
 534:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 535:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 536:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_GraphChangeSurfaceConfigVDC() */
 715              		.loc 1 536 0
 716 006c 18D08DE2 		add	sp, sp, #24
 717              		.cfi_remember_state
 718              		.cfi_def_cfa_offset 8
 719              		@ sp needed
 720 0070 1080BDE8 		pop	{r4, pc}
 721              	.LVL42:
 722              	.L44:
 723              		.cfi_restore_state
 526:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 724              		.loc 1 526 0
 725 0074 0030A0E3 		mov	r3, #0
 726              	.LVL43:
 727 0078 08308DE5 		str	r3, [sp, #8]
 728 007c F3FFFFEA 		b	.L45
 729              		.cfi_endproc
 730              	.LFE5:
 732              		.section	.text.R_RVAPI_GraphDestroySurfaceVDC,"ax",%progbits
 733              		.align	2
 734              		.global	R_RVAPI_GraphDestroySurfaceVDC
 735              		.syntax unified
 736              		.arm
 737              		.fpu neon
 739              	R_RVAPI_GraphDestroySurfaceVDC:
 740              	.LFB6:
 537:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 538:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 539:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_GraphDestroySurfaceVDC
 540:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Graphics destroy surface processing
 541:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 542:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 543:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 544:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 545:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t
 546:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         R_RVAPI_GraphDestroySurfaceVDC 
 547:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const vdc_layer_id_t layer_id)
 548:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 741              		.loc 1 548 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              	.LVL44:
 746 0000 70402DE9 		push	{r4, r5, r6, lr}
 747              		.cfi_def_cfa_offset 16
 748              		.cfi_offset 4, -16
 749              		.cfi_offset 5, -12
 750              		.cfi_offset 6, -8
 751              		.cfi_offset 14, -4
 752 0004 0040A0E1 		mov	r4, r0
 753 0008 0150A0E1 		mov	r5, r1
 549:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 550:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 551:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* Stop process */
 552:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_StopProcess (ch, layer_id);
 754              		.loc 1 552 0
 755 000c FEFFFFEB 		bl	R_VDC_StopProcess
 756              	.LVL45:
 553:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 554:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (VDC_OK == error)
 757              		.loc 1 554 0
 758 0010 000050E3 		cmp	r0, #0
 759              	.LVL46:
 760 0014 7080BD18 		popne	{r4, r5, r6, pc}
 555:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 556:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Release data control */
 557:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_ReleaseDataControl (ch, layer_id);
 761              		.loc 1 557 0
 762 0018 0510A0E1 		mov	r1, r5
 763 001c 0400A0E1 		mov	r0, r4
 764 0020 FEFFFFEB 		bl	R_VDC_ReleaseDataControl
 765              	.LVL47:
 558:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 559:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 560:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 561:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_GraphDestroySurfaceVDC() */
 766              		.loc 1 561 0
 767 0024 7080BDE8 		pop	{r4, r5, r6, pc}
 768              		.cfi_endproc
 769              	.LFE6:
 771              		.section	.text.R_RVAPI_DispPortSettingVDC,"ax",%progbits
 772              		.align	2
 773              		.global	R_RVAPI_DispPortSettingVDC
 774              		.syntax unified
 775              		.arm
 776              		.fpu neon
 778              	R_RVAPI_DispPortSettingVDC:
 779              	.LFB7:
 562:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 563:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 564:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_DispPortSettingVDC
 565:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Graphics display port setting
 566:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 567:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   port_func       : Callback function for port setting
 568:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      none
 569:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 570:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** void R_RVAPI_DispPortSettingVDC 
 571:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, void (* const port_func)(uint32_t))
 572:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 780              		.loc 1 572 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              	.LVL48:
 573:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 574:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if( NULL != port_func )
 785              		.loc 1 574 0
 786 0000 000051E3 		cmp	r1, #0
 787 0004 1EFF2F01 		bxeq	lr
 572:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 788              		.loc 1 572 0
 789 0008 10402DE9 		push	{r4, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 4, -8
 792              		.cfi_offset 14, -4
 575:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 576:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /*Port Setting */
 577:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         port_func ((uint32_t) ch);
 793              		.loc 1 577 0
 794 000c 31FF2FE1 		blx	r1
 795              	.LVL49:
 796 0010 1080BDE8 		pop	{r4, pc}
 797              		.cfi_endproc
 798              	.LFE7:
 800              		.section	.text.R_RVAPI_VideoControlVDC,"ax",%progbits
 801              		.align	2
 802              		.global	R_RVAPI_VideoControlVDC
 803              		.syntax unified
 804              		.arm
 805              		.fpu neon
 807              	R_RVAPI_VideoControlVDC:
 808              	.LFB8:
 578:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 579:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_DispPortSettingVDC() */
 580:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 581:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 582:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoControlVDC
 583:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video input control
 584:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 585:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   digital         : Digital Video input config
 586:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 587:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 588:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_VideoControlVDC
 589:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const digital_in_t * const digital)
 590:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 809              		.loc 1 590 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 32
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              	.LVL50:
 591:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 592:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_input_t input;
 593:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_ext_in_sig_t ext_sig_param; /* External input signal parameter */
 594:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 595:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 596:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL != digital)
 814              		.loc 1 596 0
 815 0000 000051E3 		cmp	r1, #0
 816 0004 2300000A 		beq	.L58
 590:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 817              		.loc 1 590 0
 818 0008 04E02DE5 		str	lr, [sp, #-4]!
 819              		.cfi_def_cfa_offset 4
 820              		.cfi_offset 14, -4
 821 000c 24D04DE2 		sub	sp, sp, #36
 822              		.cfi_def_cfa_offset 40
 597:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 598:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Input parameter */
 599:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         input.inp_sel = VDC_INPUT_SEL_EXT; /* Input select */
 823              		.loc 1 599 0
 824 0010 0130A0E3 		mov	r3, #1
 825 0014 1030CDE5 		strb	r3, [sp, #16]
 600:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         input.inp_fh50 = (uint16_t) VSYNC_1_2_FH_TIMING; /* Vsync signal 1/2fH phase timing */
 826              		.loc 1 600 0
 827 0018 5A3300E3 		movw	r3, #858
 828 001c B231CDE1 		strh	r3, [sp, #18]	@ movhi
 601:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         input.inp_fh25 = (uint16_t) VSYNC_1_4_FH_TIMING; /* Vsync signal 1/4fH phase timing */
 829              		.loc 1 601 0
 830 0020 AD3100E3 		movw	r3, #429
 831 0024 B431CDE1 		strh	r3, [sp, #20]	@ movhi
 602:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         input.dly = NULL; /* Sync signal delay adjustment */
 832              		.loc 1 602 0
 833 0028 0030A0E3 		mov	r3, #0
 834 002c 18308DE5 		str	r3, [sp, #24]
 603:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 604:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_format = digital->inp_format; /* External input format select */
 835              		.loc 1 604 0
 836 0030 0020D1E5 		ldrb	r2, [r1]	@ zero_extendqisi2
 837 0034 0420CDE5 		strb	r2, [sp, #4]
 605:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_pxd_edge  /* Clock edge select for capturing external input video image s
 606:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                         = digital->inp_pxd_edge;
 838              		.loc 1 606 0
 839 0038 0120D1E5 		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 840 003c 0520CDE5 		strb	r2, [sp, #5]
 607:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_vs_edge = VDC_EDGE_RISING; /* Clock edge select for capturing external in
 841              		.loc 1 607 0
 842 0040 0630CDE5 		strb	r3, [sp, #6]
 608:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_hs_edge = VDC_EDGE_RISING; /* Clock edge select for capturing external in
 843              		.loc 1 608 0
 844 0044 0730CDE5 		strb	r3, [sp, #7]
 609:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_endian_on = digital->inp_endian_on; /* External input bit endian change o
 845              		.loc 1 609 0
 846 0048 0230D1E5 		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 847 004c 0830CDE5 		strb	r3, [sp, #8]
 610:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_swap_on = digital->inp_swap_on; /* External input B/R signal swap on/off 
 848              		.loc 1 610 0
 849 0050 0330D1E5 		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 850 0054 0930CDE5 		strb	r3, [sp, #9]
 611:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_vs_inv = digital->inp_vs_inv; /* External input Vsync signal DV_VSYNC inv
 851              		.loc 1 611 0
 852 0058 0430D1E5 		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 853 005c 0A30CDE5 		strb	r3, [sp, #10]
 612:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_hs_inv = digital->inp_hs_inv; /* External input Hsync signal DV_HSYNC inv
 854              		.loc 1 612 0
 855 0060 0530D1E5 		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 856 0064 0B30CDE5 		strb	r3, [sp, #11]
 613:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_h_edge_sel/* Reference select for external input BT.656 Hsync signal */
 614:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                         = digital->inp_h_edge_sel;
 857              		.loc 1 614 0
 858 0068 0630D1E5 		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 859 006c 0C30CDE5 		strb	r3, [sp, #12]
 615:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_f525_625 = digital->inp_f525_625; /* Number of lines for BT.656 external 
 860              		.loc 1 615 0
 861 0070 0730D1E5 		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 862 0074 0D30CDE5 		strb	r3, [sp, #13]
 616:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         ext_sig_param.inp_h_pos = digital->inp_h_pos; /* Y/Cb/Y/Cr data string start timing to Hsyn
 863              		.loc 1 616 0
 864 0078 0830D1E5 		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 865 007c 0E30CDE5 		strb	r3, [sp, #14]
 617:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         input.ext_sig = &ext_sig_param; /* External input signal */
 866              		.loc 1 617 0
 867 0080 04308DE2 		add	r3, sp, #4
 868 0084 1C308DE5 		str	r3, [sp, #28]
 618:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 619:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_VideoInput (ch, &input);
 869              		.loc 1 619 0
 870 0088 10108DE2 		add	r1, sp, #16
 871              	.LVL51:
 872 008c FEFFFFEB 		bl	R_VDC_VideoInput
 873              	.LVL52:
 620:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 621:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 622:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 623:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_RESOURCE_INPUT;
 624:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 625:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 626:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 627:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoControlVDC() */
 874              		.loc 1 627 0
 875 0090 24D08DE2 		add	sp, sp, #36
 876              		.cfi_def_cfa_offset 4
 877              		@ sp needed
 878 0094 04F09DE4 		ldr	pc, [sp], #4
 879              	.LVL53:
 880              	.L58:
 881              		.cfi_def_cfa_offset 0
 882              		.cfi_restore 14
 623:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 883              		.loc 1 623 0
 884 0098 0B00A0E3 		mov	r0, #11
 885              	.LVL54:
 886 009c 1EFF2FE1 		bx	lr
 887              		.cfi_endproc
 888              	.LFE8:
 890              		.section	.text.R_RVAPI_VideoCreateSurfaceVDC,"ax",%progbits
 891              		.align	2
 892              		.global	R_RVAPI_VideoCreateSurfaceVDC
 893              		.syntax unified
 894              		.arm
 895              		.fpu neon
 897              	R_RVAPI_VideoCreateSurfaceVDC:
 898              	.LFB9:
 628:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 629:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 630:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoCreateSurfaceVDC
 631:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video create surface processing
 632:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 633:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   v_cnf           : Video surface write config
 634:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   v_disp_cnf      : Video surface read config
 635:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 636:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 637:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_VideoCreateSurfaceVDC  
 638:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const v_surface_config_t * const v_cnf,
 639:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const v_surface_disp_config_t * const v_disp_cnf)
 640:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 899              		.loc 1 640 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 88
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              	.LVL55:
 904 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 905              		.cfi_def_cfa_offset 20
 906              		.cfi_offset 4, -20
 907              		.cfi_offset 5, -16
 908              		.cfi_offset 6, -12
 909              		.cfi_offset 7, -8
 910              		.cfi_offset 14, -4
 911 0004 5CD04DE2 		sub	sp, sp, #92
 912              		.cfi_def_cfa_offset 112
 641:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 642:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_write_t write_cfg;
 643:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_scalingdown_rot_t * pscldw_rot; 
 644:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_read_t read_cfg;
 645:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 646:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     const vdc_gr_format_t
 647:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     gr_format_tmp[VDC_RES_MD_NUM] = 
 913              		.loc 1 647 0
 914 0008 003000E3 		movw	r3, #:lower16:.LANCHOR3
 915 000c 003040E3 		movt	r3, #:upper16:.LANCHOR3
 916 0010 003093E5 		ldr	r3, [r3]
 917 0014 0C308DE5 		str	r3, [sp, #12]
 648:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     { VDC_GR_FORMAT_YCBCR422, VDC_GR_FORMAT_RGB565, VDC_GR_FORMAT_RGB888, VDC_GR_FORMAT_YCBCR444 };
 649:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 650:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 651:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == v_cnf)
 918              		.loc 1 651 0
 919 0018 004051E2 		subs	r4, r1, #0
 920 001c 8300000A 		beq	.L71
 921 0020 0250A0E1 		mov	r5, r2
 922 0024 0060A0E1 		mov	r6, r0
 923              	.LVL56:
 652:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 653:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_NULL;
 654:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 655:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 656:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 657:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Scaling-down and rotation parameter */
 658:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot = (&write_cfg.scalingdown_rot);
 659:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 660:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Image area to be captured */
 661:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Video capture is 1 delay */
 662:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.vs = (uint16_t) ((uint32_t) v_cnf->cap_area.vs - 1u);
 924              		.loc 1 662 0
 925 0028 B230D4E1 		ldrh	r3, [r4, #2]
 926 002c 013043E2 		sub	r3, r3, #1
 927 0030 BC32CDE1 		strh	r3, [sp, #44]	@ movhi
 663:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.vw = v_cnf->cap_area.vw;
 928              		.loc 1 663 0
 929 0034 B430D4E1 		ldrh	r3, [r4, #4]
 930 0038 BE32CDE1 		strh	r3, [sp, #46]	@ movhi
 664:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.hs = v_cnf->cap_area.hs;
 931              		.loc 1 664 0
 932 003c B630D4E1 		ldrh	r3, [r4, #6]
 933 0040 B033CDE1 		strh	r3, [sp, #48]	@ movhi
 665:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.hw = v_cnf->cap_area.hw;
 934              		.loc 1 665 0
 935 0044 B830D4E1 		ldrh	r3, [r4, #8]
 936 0048 B233CDE1 		strh	r3, [sp, #50]	@ movhi
 666:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 667:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Write data parameter */
 668:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_pfil_sel = VDC_ON; /* Prefilter mode select for brightness signals (on/off)
 937              		.loc 1 668 0
 938 004c 0120A0E3 		mov	r2, #1
 939              	.LVL57:
 940 0050 3420CDE5 		strb	r2, [sp, #52]
 669:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 670:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_out_vw = v_cnf->write_fb_vw; /* scaling output vw */
 941              		.loc 1 670 0
 942 0054 BE31D4E1 		ldrh	r3, [r4, #30]
 943 0058 B633CDE1 		strh	r3, [sp, #54]	@ movhi
 671:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_out_hw = v_cnf->write_fb_hw; /* scaling output hw */
 944              		.loc 1 671 0
 945 005c B032D4E1 		ldrh	r3, [r4, #32]
 946 0060 B833CDE1 		strh	r3, [sp, #56]	@ movhi
 672:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 673:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->adj_sel = VDC_ON; /* lack of last-input line (on/off) */
 947              		.loc 1 673 0
 948 0064 3A20CDE5 		strb	r2, [sp, #58]
 674:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->adj_sel = VDC_ON; /* lack of last-input line (on/off) */
 675:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_ds_wr_md = v_cnf->write_rot; /* Frame buffer writing mode */
 949              		.loc 1 675 0
 950 0068 2430D4E5 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 951 006c 3B30CDE5 		strb	r3, [sp, #59]
 676:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 677:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_wrswa = v_cnf->write_swap; /* Frame buffer swap setting */
 952              		.loc 1 677 0
 953 0070 2230D4E5 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 954 0074 3C30CDE5 		strb	r3, [sp, #60]
 678:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_md = v_cnf->write_format; /* Frame buffer video-signal writing format */
 955              		.loc 1 678 0
 956 0078 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 957 007c 3D30CDE5 		strb	r3, [sp, #61]
 679:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_bst_md = VDC_BST_MD_32BYTE; /* Transfer burst length for frame buffer */
 958              		.loc 1 679 0
 959 0080 0030A0E3 		mov	r3, #0
 960 0084 3E30CDE5 		strb	r3, [sp, #62]
 680:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_inter = v_cnf->res_inter; /* Field operating mode select */
 961              		.loc 1 680 0
 962 0088 2310D4E5 		ldrb	r1, [r4, #35]	@ zero_extendqisi2
 963              	.LVL58:
 964 008c 3F10CDE5 		strb	r1, [sp, #63]
 681:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_fs_rate = VDC_RES_FS_RATE_PER1; /* Writing rate */
 965              		.loc 1 681 0
 966 0090 4030CDE5 		strb	r3, [sp, #64]
 682:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_fld_sel = VDC_RES_FLD_SEL_TOP; /* Write field select */
 967              		.loc 1 682 0
 968 0094 4130CDE5 		strb	r3, [sp, #65]
 683:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_dth_on = VDC_ON; /* Dither correction on/off */
 969              		.loc 1 683 0
 970 0098 4220CDE5 		strb	r2, [sp, #66]
 684:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.base = v_cnf->fb_buff; /* Frame buffer base address */
 971              		.loc 1 684 0
 972 009c 0C2094E5 		ldr	r2, [r4, #12]
 973 00a0 44208DE5 		str	r2, [sp, #68]
 685:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.ln_off = v_cnf->fb_stride; /* Frame buffer line offset address [byte] */
 974              		.loc 1 685 0
 975 00a4 102094E5 		ldr	r2, [r4, #16]
 976 00a8 48208DE5 		str	r2, [sp, #72]
 686:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.flm_num = (uint32_t) (v_cnf->fb_num - 1u); /* Number of frames of buffer (res_fb_
 977              		.loc 1 686 0
 978 00ac 182094E5 		ldr	r2, [r4, #24]
 979 00b0 012042E2 		sub	r2, r2, #1
 980 00b4 4C208DE5 		str	r2, [sp, #76]
 687:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.flm_off = v_cnf->fb_offset; /* Write buffer fb offset[byte]   */
 981              		.loc 1 687 0
 982 00b8 142094E5 		ldr	r2, [r4, #20]
 983 00bc 50208DE5 		str	r2, [sp, #80]
 688:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.btm_base = NULL; /* Frame buffer base address for bottom */
 984              		.loc 1 688 0
 985 00c0 54308DE5 		str	r3, [sp, #84]
 689:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 690:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Write data control */
 691:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_WriteDataControl (ch, v_cnf->layer_id, &write_cfg);
 986              		.loc 1 691 0
 987 00c4 2C208DE2 		add	r2, sp, #44
 988              	.LVL59:
 989 00c8 D010D4E1 		ldrsb	r1, [r4]
 990 00cc FEFFFFEB 		bl	R_VDC_WriteDataControl
 991              	.LVL60:
 692:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 693:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (VDC_OK == error)
 992              		.loc 1 693 0
 993 00d0 000050E3 		cmp	r0, #0
 994              	.LVL61:
 995 00d4 4600000A 		beq	.L74
 996              	.L65:
 997              	.LVL62:
 694:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 695:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_start_t start;
 696:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_gr_disp_sel_t disp_mode;
 697:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 698:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             disp_mode = VDC_DISPSEL_LOWER;
 699:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             start.gr_disp_sel = &disp_mode;
 700:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             error = R_VDC_StartProcess (ch, v_cnf->layer_id, &start);
 701:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 702:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 703:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* pointer NULL check */
 704:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (NULL != v_disp_cnf)
 998              		.loc 1 704 0
 999 00d8 000055E3 		cmp	r5, #0
 1000 00dc 5400000A 		beq	.L64
 1001              	.LBB6:
 705:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 706:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_layer_id_t read_layer_id;
 707:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 708:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             if (VDC_LAYER_ID_0_WR == v_cnf->layer_id)
 1002              		.loc 1 708 0
 1003 00e0 D030D4E1 		ldrsb	r3, [r4]
 1004 00e4 000053E3 		cmp	r3, #0
 1005 00e8 4A00001A 		bne	.L72
 709:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
 710:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_layer_id = VDC_LAYER_ID_0_RD;
 1006              		.loc 1 710 0
 1007 00ec 0170A0E3 		mov	r7, #1
 1008              	.LVL63:
 1009              	.L66:
 711:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 712:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             else
 713:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
 714:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_layer_id = VDC_LAYER_ID_ALL;
 715:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 error = VDC_ERR_PARAM_LAYER_ID;
 716:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 717:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 718:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             if (VDC_OK == error)
 1010              		.loc 1 718 0
 1011 00f0 000050E3 		cmp	r0, #0
 1012 00f4 4E00001A 		bne	.L64
 1013              	.LBB7:
 719:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
 720:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 int32_t format;
 721:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 vdc_width_read_fb_t width_read_fb;
 722:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 723:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Read data parameter */
 724:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_ln_off_dir = VDC_GR_LN_OFF_DIR_INC; /* Line offset address direction of
 1014              		.loc 1 724 0
 1015 00f8 0030A0E3 		mov	r3, #0
 1016 00fc 1030CDE5 		strb	r3, [sp, #16]
 725:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_flm_sel = VDC_GR_FLM_SEL_POINTER_BUFF;
 1017              		.loc 1 725 0
 1018 0100 0320A0E3 		mov	r2, #3
 1019 0104 1120CDE5 		strb	r2, [sp, #17]
 726:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_imr_flm_inv = VDC_OFF; /* Frame buffer number for distortion correction
 1020              		.loc 1 726 0
 1021 0108 1230CDE5 		strb	r3, [sp, #18]
 727:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_bst_md = VDC_BST_MD_32BYTE; /* Frame buffer burst transfer mode */
 1022              		.loc 1 727 0
 1023 010c 1330CDE5 		strb	r3, [sp, #19]
 728:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_base = v_cnf->fb_buff; /* Frame buffer base address */
 1024              		.loc 1 728 0
 1025 0110 0C2094E5 		ldr	r2, [r4, #12]
 1026 0114 14208DE5 		str	r2, [sp, #20]
 729:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_ln_off = v_cnf->fb_stride; /* Frame buffer line offset address */
 1027              		.loc 1 729 0
 1028 0118 102094E5 		ldr	r2, [r4, #16]
 1029 011c 18208DE5 		str	r2, [sp, #24]
 730:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.width_read_fb = NULL; /* Width of the image read from frame buffer */
 1030              		.loc 1 730 0
 1031 0120 1C308DE5 		str	r3, [sp, #28]
 731:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.adj_sel = VDC_ON; /* Measures to decrease the influence by folding pixels/
 1032              		.loc 1 731 0
 1033 0124 0130A0E3 		mov	r3, #1
 1034 0128 2030CDE5 		strb	r3, [sp, #32]
 732:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 733:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if((v_cnf->write_rot == VDC_WR_MD_ROT_90DEG) || (v_cnf->write_rot == VDC_WR_MD_ROT_
 1035              		.loc 1 733 0
 1036 012c 2430D4E5 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 1037 0130 040053E3 		cmp	r3, #4
 1038 0134 02005313 		cmpne	r3, #2
 1039 0138 0500001A 		bne	.L67
 734:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 735:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     width_read_fb.in_hw = v_cnf->write_fb_vw;
 1040              		.loc 1 735 0
 1041 013c BE31D4E1 		ldrh	r3, [r4, #30]
 1042 0140 B630CDE1 		strh	r3, [sp, #6]	@ movhi
 736:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     width_read_fb.in_vw = v_cnf->write_fb_hw;
 1043              		.loc 1 736 0
 1044 0144 B022D4E1 		ldrh	r2, [r4, #32]
 1045 0148 58308DE2 		add	r3, sp, #88
 1046 014c B42563E1 		strh	r2, [r3, #-84]!	@ movhi
 737:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     read_cfg.width_read_fb = &width_read_fb;
 1047              		.loc 1 737 0
 1048 0150 1C308DE5 		str	r3, [sp, #28]
 1049              	.L67:
 738:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 739:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 
 740:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Set write format */
 741:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 format = (int32_t) v_cnf->write_format;
 1050              		.loc 1 741 0
 1051 0154 1C30D4E5 		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 1052              	.LVL64:
 742:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if (VDC_RES_MD_NUM > format)
 1053              		.loc 1 742 0
 1054 0158 030053E3 		cmp	r3, #3
 1055 015c 300000CA 		bgt	.L68
 743:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 744:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     read_cfg.gr_format = gr_format_tmp[format]; /* Format of the frame buffer read 
 1056              		.loc 1 744 0
 1057 0160 58208DE2 		add	r2, sp, #88
 1058 0164 033082E0 		add	r3, r2, r3
 1059              	.LVL65:
 1060 0168 4C3053E5 		ldrb	r3, [r3, #-76]	@ zero_extendqisi2
 1061 016c 2130CDE5 		strb	r3, [sp, #33]
 1062              	.L69:
 745:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 746:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 else
 747:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 748:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     read_cfg.gr_format = VDC_GR_FORMAT_NUM;
 749:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 750:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_ycc_swap  /* Controls swapping of data read from buffer in the YCbCr422
 751:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                             = v_disp_cnf->read_ycc_swap;
 1063              		.loc 1 751 0
 1064 0170 0830D5E5 		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 1065 0174 2230CDE5 		strb	r3, [sp, #34]
 752:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_rdswa = v_disp_cnf->read_swap;
 1066              		.loc 1 752 0
 1067 0178 0930D5E5 		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 1068 017c 2330CDE5 		strb	r3, [sp, #35]
 753:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 754:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Display area */
 755:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.vs /* vertical start position */
 756:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     = (uint16_t)(v_disp_cnf->disp_area.vs_rel + full_screen.vs);
 1069              		.loc 1 756 0
 1070 0180 B010D5E1 		ldrh	r1, [r5]
 1071 0184 003000E3 		movw	r3, #:lower16:full_screen
 1072 0188 003040E3 		movt	r3, #:upper16:full_screen
 1073 018c B020D3E1 		ldrh	r2, [r3]
 1074 0190 012082E0 		add	r2, r2, r1
 1075 0194 B422CDE1 		strh	r2, [sp, #36]	@ movhi
 757:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.vw /* vertical display size */
 758:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     = v_disp_cnf->disp_area.vw_rel;
 1076              		.loc 1 758 0
 1077 0198 B220D5E1 		ldrh	r2, [r5, #2]
 1078 019c B622CDE1 		strh	r2, [sp, #38]	@ movhi
 759:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.hs /* horizontal start position */
 760:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     = (uint16_t)(v_disp_cnf->disp_area.hs_rel + full_screen.hs);
 1079              		.loc 1 760 0
 1080 01a0 B420D5E1 		ldrh	r2, [r5, #4]
 1081 01a4 B430D3E1 		ldrh	r3, [r3, #4]
 1082 01a8 023083E0 		add	r3, r3, r2
 1083 01ac B832CDE1 		strh	r3, [sp, #40]	@ movhi
 761:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.hw /* horizontal display size */
 762:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     = v_disp_cnf->disp_area.hw_rel;
 1084              		.loc 1 762 0
 1085 01b0 B630D5E1 		ldrh	r3, [r5, #6]
 1086 01b4 BA32CDE1 		strh	r3, [sp, #42]	@ movhi
 763:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 764:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Read data control */
 765:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 error = R_VDC_ReadDataControl (ch, read_layer_id, &read_cfg);
 1087              		.loc 1 765 0
 1088 01b8 10208DE2 		add	r2, sp, #16
 1089 01bc 0710A0E1 		mov	r1, r7
 1090 01c0 0600A0E1 		mov	r0, r6
 1091              	.LVL66:
 1092 01c4 FEFFFFEB 		bl	R_VDC_ReadDataControl
 1093              	.LVL67:
 766:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 767:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if (VDC_OK == error)
 1094              		.loc 1 767 0
 1095 01c8 000050E3 		cmp	r0, #0
 1096              	.LVL68:
 1097 01cc 1800001A 		bne	.L64
 1098              	.LBB8:
 768:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
 769:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     vdc_start_t start;
 770:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     vdc_gr_disp_sel_t disp_mode;
 771:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 772:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     disp_mode = VDC_DISPSEL_LOWER;
 1099              		.loc 1 772 0
 1100 01d0 58308DE2 		add	r3, sp, #88
 1101 01d4 0120A0E3 		mov	r2, #1
 1102 01d8 552063E5 		strb	r2, [r3, #-85]!
 773:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     start.gr_disp_sel = &disp_mode;
 1103              		.loc 1 773 0
 1104 01dc 58208DE2 		add	r2, sp, #88
 1105 01e0 503022E5 		str	r3, [r2, #-80]!
 774:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     error = R_VDC_StartProcess (ch, read_layer_id, &start);
 1106              		.loc 1 774 0
 1107 01e4 0710A0E1 		mov	r1, r7
 1108 01e8 0600A0E1 		mov	r0, r6
 1109 01ec FEFFFFEB 		bl	R_VDC_StartProcess
 1110              	.LVL69:
 1111 01f0 0F0000EA 		b	.L64
 1112              	.LVL70:
 1113              	.L74:
 1114              	.LBE8:
 1115              	.LBE7:
 1116              	.LBE6:
 1117              	.LBB10:
 698:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             start.gr_disp_sel = &disp_mode;
 1118              		.loc 1 698 0
 1119 01f4 58308DE2 		add	r3, sp, #88
 1120 01f8 0120A0E3 		mov	r2, #1
 1121 01fc 542063E5 		strb	r2, [r3, #-84]!
 699:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             error = R_VDC_StartProcess (ch, v_cnf->layer_id, &start);
 1122              		.loc 1 699 0
 1123 0200 58208DE2 		add	r2, sp, #88
 1124 0204 503022E5 		str	r3, [r2, #-80]!
 700:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 1125              		.loc 1 700 0
 1126 0208 D010D4E1 		ldrsb	r1, [r4]
 1127 020c 0600A0E1 		mov	r0, r6
 1128 0210 FEFFFFEB 		bl	R_VDC_StartProcess
 1129              	.LVL71:
 1130 0214 AFFFFFEA 		b	.L65
 1131              	.L72:
 1132              	.LBE10:
 1133              	.LBB11:
 714:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 error = VDC_ERR_PARAM_LAYER_ID;
 1134              		.loc 1 714 0
 1135 0218 0070E0E3 		mvn	r7, #0
 715:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 1136              		.loc 1 715 0
 1137 021c 0200A0E3 		mov	r0, #2
 1138              	.LVL72:
 1139 0220 B2FFFFEA 		b	.L66
 1140              	.LVL73:
 1141              	.L68:
 1142              	.LBB9:
 748:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 1143              		.loc 1 748 0
 1144 0224 0C30A0E3 		mov	r3, #12
 1145              	.LVL74:
 1146 0228 2130CDE5 		strb	r3, [sp, #33]
 1147 022c CFFFFFEA 		b	.L69
 1148              	.LVL75:
 1149              	.L71:
 1150              	.LBE9:
 1151              	.LBE11:
 653:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 1152              		.loc 1 653 0
 1153 0230 0300A0E3 		mov	r0, #3
 1154              	.LVL76:
 1155              	.L64:
 775:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
 776:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 777:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 778:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 779:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 780:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 781:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoCreateSurfaceVDC() */
 1156              		.loc 1 781 0
 1157 0234 5CD08DE2 		add	sp, sp, #92
 1158              		.cfi_def_cfa_offset 20
 1159              		@ sp needed
 1160 0238 F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1161              		.cfi_endproc
 1162              	.LFE9:
 1164              		.section	.text.R_RVAPI_VideoDestroySurfaceVDC,"ax",%progbits
 1165              		.align	2
 1166              		.global	R_RVAPI_VideoDestroySurfaceVDC
 1167              		.syntax unified
 1168              		.arm
 1169              		.fpu neon
 1171              	R_RVAPI_VideoDestroySurfaceVDC:
 1172              	.LFB10:
 782:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 783:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 784:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoDestroySurfaceVDC
 785:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video destroy surface processing
 786:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 787:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 788:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 789:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 790:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_VideoDestroySurfaceVDC 
 791:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const vdc_layer_id_t layer_id)
 792:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1173              		.loc 1 792 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              	.LVL77:
 1178 0000 70402DE9 		push	{r4, r5, r6, lr}
 1179              		.cfi_def_cfa_offset 16
 1180              		.cfi_offset 4, -16
 1181              		.cfi_offset 5, -12
 1182              		.cfi_offset 6, -8
 1183              		.cfi_offset 14, -4
 793:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 794:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 795:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (VDC_LAYER_ID_0_WR == layer_id)
 1184              		.loc 1 795 0
 1185 0004 006051E2 		subs	r6, r1, #0
 1186 0008 0200000A 		beq	.L79
 796:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 797:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_StopProcess (ch, layer_id);
 798:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (VDC_OK == error)
 799:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 800:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             R_VDC_ReleaseDataControl (ch, layer_id);
 801:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             R_VDC_StopProcess (ch, VDC_LAYER_ID_0_RD);
 802:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             R_VDC_ReleaseDataControl (ch, VDC_LAYER_ID_0_RD);
 803:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 804:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 805:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
 806:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 807:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_LAYER_ID;
 1187              		.loc 1 807 0
 1188 000c 0240A0E3 		mov	r4, #2
 1189              	.LVL78:
 1190              	.L76:
 808:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 809:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 810:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 811:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoDestroySurfaceVDC() */
 1191              		.loc 1 811 0
 1192 0010 0400A0E1 		mov	r0, r4
 1193 0014 7080BDE8 		pop	{r4, r5, r6, pc}
 1194              	.LVL79:
 1195              	.L79:
 1196 0018 0050A0E1 		mov	r5, r0
 797:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (VDC_OK == error)
 1197              		.loc 1 797 0
 1198 001c 0610A0E1 		mov	r1, r6
 1199              	.LVL80:
 1200 0020 FEFFFFEB 		bl	R_VDC_StopProcess
 1201              	.LVL81:
 798:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
 1202              		.loc 1 798 0
 1203 0024 004050E2 		subs	r4, r0, #0
 1204 0028 F8FFFF1A 		bne	.L76
 800:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             R_VDC_StopProcess (ch, VDC_LAYER_ID_0_RD);
 1205              		.loc 1 800 0
 1206 002c 0610A0E1 		mov	r1, r6
 1207 0030 0500A0E1 		mov	r0, r5
 1208              	.LVL82:
 1209 0034 FEFFFFEB 		bl	R_VDC_ReleaseDataControl
 1210              	.LVL83:
 801:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             R_VDC_ReleaseDataControl (ch, VDC_LAYER_ID_0_RD);
 1211              		.loc 1 801 0
 1212 0038 0110A0E3 		mov	r1, #1
 1213 003c 0500A0E1 		mov	r0, r5
 1214 0040 FEFFFFEB 		bl	R_VDC_StopProcess
 1215              	.LVL84:
 802:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
 1216              		.loc 1 802 0
 1217 0044 0110A0E3 		mov	r1, #1
 1218 0048 0500A0E1 		mov	r0, r5
 1219 004c FEFFFFEB 		bl	R_VDC_ReleaseDataControl
 1220              	.LVL85:
 1221 0050 EEFFFFEA 		b	.L76
 1222              		.cfi_endproc
 1223              	.LFE10:
 1225              		.section	.text.R_RVAPI_VideoPortSettingVDC,"ax",%progbits
 1226              		.align	2
 1227              		.global	R_RVAPI_VideoPortSettingVDC
 1228              		.syntax unified
 1229              		.arm
 1230              		.fpu neon
 1232              	R_RVAPI_VideoPortSettingVDC:
 1233              	.LFB11:
 812:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 813:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 814:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoPortSettingVDC
 815:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video port setting
 816:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 817:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   port_func       : Callback function for port setting
 818:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      none
 819:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 820:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** void R_RVAPI_VideoPortSettingVDC 
 821:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, void (* const port_func)(uint32_t))
 822:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1234              		.loc 1 822 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              	.LVL86:
 823:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 824:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if( NULL != port_func )
 1239              		.loc 1 824 0
 1240 0000 000051E3 		cmp	r1, #0
 1241 0004 1EFF2F01 		bxeq	lr
 822:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
 1242              		.loc 1 822 0
 1243 0008 10402DE9 		push	{r4, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 4, -8
 1246              		.cfi_offset 14, -4
 825:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
 826:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /*Port Setting */
 827:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         port_func ((uint32_t) ch);
 1247              		.loc 1 827 0
 1248 000c 31FF2FE1 		blx	r1
 1249              	.LVL87:
 1250 0010 1080BDE8 		pop	{r4, pc}
 1251              		.cfi_endproc
 1252              	.LFE11:
 1254              		.section	.text.R_RVAPI_InterruptEnableVDC,"ax",%progbits
 1255              		.align	2
 1256              		.global	R_RVAPI_InterruptEnableVDC
 1257              		.syntax unified
 1258              		.arm
 1259              		.fpu neon
 1261              	R_RVAPI_InterruptEnableVDC:
 1262              	.LFB12:
 828:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 829:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoPortSettingVDC() */
 830:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 831:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 832:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_InterruptEnableVDC
 833:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Interrupt Enable
 834:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 835:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   flag            : VDC interrupt type
 836:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   line_num        : Line num
 837:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   callback        : Callback function for VDC interruput
 838:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 839:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 840:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_InterruptEnableVDC 
 841:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_int_type_t flag, const uint16_t line_num,
 842:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         void (* const callback)(vdc_int_type_t int_type))
 843:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1263              		.loc 1 843 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 16
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL88:
 1268 0000 04E02DE5 		str	lr, [sp, #-4]!
 1269              		.cfi_def_cfa_offset 4
 1270              		.cfi_offset 14, -4
 1271 0004 14D04DE2 		sub	sp, sp, #20
 1272              		.cfi_def_cfa_offset 24
 844:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 845:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_int_t param;
 846:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 847:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.type = flag;
 1273              		.loc 1 847 0
 1274 0008 0410CDE5 		strb	r1, [sp, #4]
 848:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.line_num = line_num;
 1275              		.loc 1 848 0
 1276 000c BC20CDE1 		strh	r2, [sp, #12]	@ movhi
 849:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.callback = callback;
 1277              		.loc 1 849 0
 1278 0010 08308DE5 		str	r3, [sp, #8]
 850:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_CallbackISR (ch, &param);
 1279              		.loc 1 850 0
 1280 0014 04108DE2 		add	r1, sp, #4
 1281              	.LVL89:
 1282 0018 FEFFFFEB 		bl	R_VDC_CallbackISR
 1283              	.LVL90:
 851:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 852:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 853:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_InterruptEnableVDC() */
 1284              		.loc 1 853 0
 1285 001c 14D08DE2 		add	sp, sp, #20
 1286              		.cfi_def_cfa_offset 4
 1287              		@ sp needed
 1288 0020 04F09DE4 		ldr	pc, [sp], #4
 1289              		.cfi_endproc
 1290              	.LFE12:
 1292              		.section	.text.R_RVAPI_InterruptDisableVDC,"ax",%progbits
 1293              		.align	2
 1294              		.global	R_RVAPI_InterruptDisableVDC
 1295              		.syntax unified
 1296              		.arm
 1297              		.fpu neon
 1299              	R_RVAPI_InterruptDisableVDC:
 1300              	.LFB13:
 854:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 855:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 856:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_InterruptDisableVDC
 857:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Interrupt disable
 858:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 859:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   flag            : VDC interrupt type
 860:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 861:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 862:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_InterruptDisableVDC 
 863:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const vdc_int_type_t flag)
 864:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1301              		.loc 1 864 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 16
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              	.LVL91:
 1306 0000 04E02DE5 		str	lr, [sp, #-4]!
 1307              		.cfi_def_cfa_offset 4
 1308              		.cfi_offset 14, -4
 1309 0004 14D04DE2 		sub	sp, sp, #20
 1310              		.cfi_def_cfa_offset 24
 865:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 866:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_int_t param;
 867:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 868:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.type = flag;      /* Set VDC interrupt type */
 1311              		.loc 1 868 0
 1312 0008 0410CDE5 		strb	r1, [sp, #4]
 869:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.callback = NULL;  /* Set NULL */
 1313              		.loc 1 869 0
 1314 000c 0030A0E3 		mov	r3, #0
 1315 0010 08308DE5 		str	r3, [sp, #8]
 870:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.line_num = 0;     /* Set Line interrupt set */
 1316              		.loc 1 870 0
 1317 0014 BC30CDE1 		strh	r3, [sp, #12]	@ movhi
 871:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_CallbackISR (ch, &param);
 1318              		.loc 1 871 0
 1319 0018 04108DE2 		add	r1, sp, #4
 1320              	.LVL92:
 1321 001c FEFFFFEB 		bl	R_VDC_CallbackISR
 1322              	.LVL93:
 872:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 873:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 874:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_InterruptDisableVDC() */
 1323              		.loc 1 874 0
 1324 0020 14D08DE2 		add	sp, sp, #20
 1325              		.cfi_def_cfa_offset 4
 1326              		@ sp needed
 1327 0024 04F09DE4 		ldr	pc, [sp], #4
 1328              		.cfi_endproc
 1329              	.LFE13:
 1331              		.section	.text.R_RVAPI_AlphablendingRectVDC,"ax",%progbits
 1332              		.align	2
 1333              		.global	R_RVAPI_AlphablendingRectVDC
 1334              		.syntax unified
 1335              		.arm
 1336              		.fpu neon
 1338              	R_RVAPI_AlphablendingRectVDC:
 1339              	.LFB14:
 875:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 876:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 877:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_AlphablendingRectVDC
 878:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Alpha Blending Rect processing
 879:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 880:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 881:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   alpha_onoff     : ON/OFF setting for alpha blending in a rectangular area
 882:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   alpha_area      : Parameter for alpha blending in a rectangular area
 883:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   alpha_value     : Alpha value0 (0 - 255)
 884:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 885:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 886:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_AlphablendingRectVDC 
 887:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_layer_id_t layer_id,
 888:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const vdc_onoff_t alpha_onoff, const vdc_pd_disp_rect_t * const alpha_area, const uint8_t a
 889:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1340              		.loc 1 889 0
 1341              		.cfi_startproc
 1342              		@ args = 4, pretend = 0, frame = 24
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL94:
 1345 0000 04E02DE5 		str	lr, [sp, #-4]!
 1346              		.cfi_def_cfa_offset 4
 1347              		.cfi_offset 14, -4
 1348 0004 1CD04DE2 		sub	sp, sp, #28
 1349              		.cfi_def_cfa_offset 32
 890:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 891:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_alpha_blending_rect_t alpha_blending_rect;
 892:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_alpha_rect_t alpha_config;
 893:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 894:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* rect alpha config */
 895:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_config.gr_arc_coef = 0u;
 1350              		.loc 1 895 0
 1351 0008 00C0A0E3 		mov	ip, #0
 1352 000c B4C0CDE1 		strh	ip, [sp, #4]	@ movhi
 896:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_config.gr_arc_def = alpha_value;
 1353              		.loc 1 896 0
 1354 0010 20E0DDE5 		ldrb	lr, [sp, #32]	@ zero_extendqisi2
 1355 0014 07E0CDE5 		strb	lr, [sp, #7]
 897:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_config.gr_arc_mul = VDC_OFF;
 1356              		.loc 1 897 0
 1357 0018 08C0CDE5 		strb	ip, [sp, #8]
 898:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_config.gr_arc_rate = 0u;
 1358              		.loc 1 898 0
 1359 001c 06C0CDE5 		strb	ip, [sp, #6]
 899:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 900:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* rect alpha area */
 901:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_blending_rect.scl_und_sel = NULL;
 1360              		.loc 1 901 0
 1361 0020 14C08DE5 		str	ip, [sp, #20]
 902:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_blending_rect.gr_arc = alpha_area;
 1362              		.loc 1 902 0
 1363 0024 0C308DE5 		str	r3, [sp, #12]
 903:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_blending_rect.alpha_rect = &alpha_config;
 1364              		.loc 1 903 0
 1365 0028 04308DE2 		add	r3, sp, #4
 1366              	.LVL95:
 1367 002c 10308DE5 		str	r3, [sp, #16]
 904:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 905:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_AlphaBlendingRect (ch, layer_id, alpha_onoff, &alpha_blending_rect);
 1368              		.loc 1 905 0
 1369 0030 0C308DE2 		add	r3, sp, #12
 1370              	.LVL96:
 1371 0034 FEFFFFEB 		bl	R_VDC_AlphaBlendingRect
 1372              	.LVL97:
 906:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 907:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_AlphablendingRectVDC() */
 1373              		.loc 1 907 0
 1374 0038 1CD08DE2 		add	sp, sp, #28
 1375              		.cfi_def_cfa_offset 4
 1376              		@ sp needed
 1377 003c 04F09DE4 		ldr	pc, [sp], #4
 1378              		.cfi_endproc
 1379              	.LFE14:
 1381              		.section	.text.R_RVAPI_AlphablendingVDC,"ax",%progbits
 1382              		.align	2
 1383              		.global	R_RVAPI_AlphablendingVDC
 1384              		.syntax unified
 1385              		.arm
 1386              		.fpu neon
 1388              	R_RVAPI_AlphablendingVDC:
 1389              	.LFB15:
 908:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 909:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 910:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_AlphablendingVDC
 911:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Alpha Blending Rect processing
 912:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 913:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 914:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   alpha_value     : Alpha value0 (0 - 255) ARGB1555 alpha value A=0
 915:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   alpha_value     : Alpha value1 (0 - 255) ARGB1555 alpha value A=1
 916:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 917:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 918:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_AlphablendingVDC 
 919:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_layer_id_t layer_id,
 920:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         uint8_t alpha_value0, uint8_t alpha_value1 )
 921:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1390              		.loc 1 921 0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 16
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              	.LVL98:
 1395 0000 04E02DE5 		str	lr, [sp, #-4]!
 1396              		.cfi_def_cfa_offset 4
 1397              		.cfi_offset 14, -4
 1398 0004 14D04DE2 		sub	sp, sp, #20
 1399              		.cfi_def_cfa_offset 24
 922:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t            error;
 923:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_alpha_argb1555_t   alpha_1bit;
 924:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_alpha_pixel_t      alpha_pixel;
 925:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_alpha_blending_t   param;
 926:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 927:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_1bit.gr_a0        = alpha_value0; /* Alpha signal when alpha is set to '0' */
 1400              		.loc 1 927 0
 1401 0008 0C20CDE5 		strb	r2, [sp, #12]
 928:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_1bit.gr_a1        = alpha_value1; /* Alpha signal when alpha is set to '1' */
 1402              		.loc 1 928 0
 1403 000c 0D30CDE5 		strb	r3, [sp, #13]
 929:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.alpha_1bit        = &alpha_1bit;
 1404              		.loc 1 929 0
 1405 0010 0C308DE2 		add	r3, sp, #12
 1406              	.LVL99:
 1407 0014 00308DE5 		str	r3, [sp]
 930:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     alpha_pixel.gr_acalc_md = VDC_OFF;      /* Pre-multiplication processing at alpha blending */
 1408              		.loc 1 930 0
 1409 0018 10308DE2 		add	r3, sp, #16
 1410 001c 0020A0E3 		mov	r2, #0
 1411              	.LVL100:
 1412 0020 082063E5 		strb	r2, [r3, #-8]!
 931:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.alpha_pixel       = &alpha_pixel;
 1413              		.loc 1 931 0
 1414 0024 04308DE5 		str	r3, [sp, #4]
 932:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 933:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_AlphaBlending (ch, layer_id, &param);
 1415              		.loc 1 933 0
 1416 0028 0D20A0E1 		mov	r2, sp
 1417 002c FEFFFFEB 		bl	R_VDC_AlphaBlending
 1418              	.LVL101:
 934:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 935:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_AlphablendingVDC() */
 1419              		.loc 1 935 0
 1420 0030 14D08DE2 		add	sp, sp, #20
 1421              		.cfi_def_cfa_offset 4
 1422              		@ sp needed
 1423 0034 04F09DE4 		ldr	pc, [sp], #4
 1424              		.cfi_endproc
 1425              	.LFE15:
 1427              		.section	.text.R_RVAPI_ChromakeyVDC,"ax",%progbits
 1428              		.align	2
 1429              		.global	R_RVAPI_ChromakeyVDC
 1430              		.syntax unified
 1431              		.arm
 1432              		.fpu neon
 1434              	R_RVAPI_ChromakeyVDC:
 1435              	.LFB16:
 936:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 937:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 938:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_ChromakeyVDC
 939:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Chromakey processing
 940:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 941:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   layer_id        : Layer ID
 942:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gr_ck_on        : Chroma-key ON/OFF setting
 943:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ck_color        : Replaced color
 944:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   rep_alpha       : Replaced alpha (0 - 255)
 945:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 946:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 947:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_ChromakeyVDC 
 948:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_layer_id_t layer_id, const vdc_onoff_t gr_ck_on,
 949:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const uint32_t ck_color, const uint8_t rep_alpha)
 950:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1436              		.loc 1 950 0
 1437              		.cfi_startproc
 1438              		@ args = 4, pretend = 0, frame = 16
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              	.LVL102:
 1441 0000 04E02DE5 		str	lr, [sp, #-4]!
 1442              		.cfi_def_cfa_offset 4
 1443              		.cfi_offset 14, -4
 1444 0004 14D04DE2 		sub	sp, sp, #20
 1445              		.cfi_def_cfa_offset 24
 951:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 952:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_chromakey_t chromakey;
 953:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 954:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* Chromakey config */
 955:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     chromakey.ck_color = ck_color;
 1446              		.loc 1 955 0
 1447 0008 04308DE5 		str	r3, [sp, #4]
 956:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     chromakey.rep_color = ck_color;
 1448              		.loc 1 956 0
 1449 000c 08308DE5 		str	r3, [sp, #8]
 957:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     chromakey.rep_alpha = rep_alpha;
 1450              		.loc 1 957 0
 1451 0010 1830DDE5 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 1452              	.LVL103:
 1453 0014 0C30CDE5 		strb	r3, [sp, #12]
 958:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 959:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_Chromakey (ch, layer_id, gr_ck_on, &chromakey);
 1454              		.loc 1 959 0
 1455 0018 04308DE2 		add	r3, sp, #4
 1456              	.LVL104:
 1457 001c FEFFFFEB 		bl	R_VDC_Chromakey
 1458              	.LVL105:
 960:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 961:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 962:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_ChromakeyVDC() */
 1459              		.loc 1 962 0
 1460 0020 14D08DE2 		add	sp, sp, #20
 1461              		.cfi_def_cfa_offset 4
 1462              		@ sp needed
 1463 0024 04F09DE4 		ldr	pc, [sp], #4
 1464              		.cfi_endproc
 1465              	.LFE16:
 1467              		.section	.text.R_RVAPI_DispCalibrationVDC,"ax",%progbits
 1468              		.align	2
 1469              		.global	R_RVAPI_DispCalibrationVDC
 1470              		.syntax unified
 1471              		.arm
 1472              		.fpu neon
 1474              	R_RVAPI_DispCalibrationVDC:
 1475              	.LFB17:
 963:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 964:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 965:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_DispCalibrationVDC
 966:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Display out calibration initialization processing
 967:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 968:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   route           : Correction circuit sequence control
 969:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   bright          : Brightness (DC) adjustment parameter
 970:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   contrast        : Contrast (gain) adjustment parameter
 971:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   panel_dither    : Panel dithering parameter
 972:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
 973:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
 974:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_DispCalibrationVDC
 975:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_calibr_route_t route,
 976:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const vdc_calibr_bright_t * const bright, const vdc_calibr_contrast_t * const contrast,
 977:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const vdc_calibr_dither_t * const panel_dither)
 978:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1476              		.loc 1 978 0
 1477              		.cfi_startproc
 1478              		@ args = 4, pretend = 0, frame = 16
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480              	.LVL106:
 1481 0000 04E02DE5 		str	lr, [sp, #-4]!
 1482              		.cfi_def_cfa_offset 4
 1483              		.cfi_offset 14, -4
 1484 0004 14D04DE2 		sub	sp, sp, #20
 1485              		.cfi_def_cfa_offset 24
 979:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
 980:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_disp_calibration_t disp_calibration;
 981:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 982:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     disp_calibration.route = route;
 1486              		.loc 1 982 0
 1487 0008 0010CDE5 		strb	r1, [sp]
 983:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     disp_calibration.panel_dither = panel_dither;
 1488              		.loc 1 983 0
 1489 000c 18109DE5 		ldr	r1, [sp, #24]
 1490              	.LVL107:
 1491 0010 0C108DE5 		str	r1, [sp, #12]
 984:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     disp_calibration.bright = bright;
 1492              		.loc 1 984 0
 1493 0014 04208DE5 		str	r2, [sp, #4]
 985:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     disp_calibration.contrast = contrast;
 1494              		.loc 1 985 0
 1495 0018 08308DE5 		str	r3, [sp, #8]
 986:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 987:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_DisplayCalibration (ch, &disp_calibration);
 1496              		.loc 1 987 0
 1497 001c 0D10A0E1 		mov	r1, sp
 1498 0020 FEFFFFEB 		bl	R_VDC_DisplayCalibration
 1499              	.LVL108:
 988:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 989:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
 990:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_DispCalibrationVDC() */
 1500              		.loc 1 990 0
 1501 0024 14D08DE2 		add	sp, sp, #20
 1502              		.cfi_def_cfa_offset 4
 1503              		@ sp needed
 1504 0028 04F09DE4 		ldr	pc, [sp], #4
 1505              		.cfi_endproc
 1506              	.LFE17:
 1508              		.section	.text.R_RVAPI_DispGammaVDC,"ax",%progbits
 1509              		.align	2
 1510              		.global	R_RVAPI_DispGammaVDC
 1511              		.syntax unified
 1512              		.arm
 1513              		.fpu neon
 1515              	R_RVAPI_DispGammaVDC:
 1516              	.LFB18:
 991:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
 992:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
 993:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_DispGammaVDC
 994:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Display Gamma initialization processing
 995:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
 996:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_on          : Gamma correction ON/OFF setting
 997:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_r_gain      : Gain adjustment of area 0 to 31 of R signal
 998:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_r_th        : Start threshold of area 1 to 31 of R signal
 999:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_g_gain      : Gain adjustment of area 0 to 31 of G signal
1000:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_g_th        : Start threshold of area 1 to 31 of G signal
1001:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_b_gain      : Gain adjustment of area 0 to 31 of B signal
1002:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   gam_b_th        : Start threshold of area 1 to 31 of B signal
1003:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
1004:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
1005:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_DispGammaVDC 
1006:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_onoff_t gam_on,
1007:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const uint16_t * const gam_r_gain, const uint8_t * const gam_r_th, const uint16_t * const g
1008:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const uint8_t * const gam_g_th, const uint16_t * const gam_b_gain, const uint8_t * const ga
1009:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1517              		.loc 1 1009 0
 1518              		.cfi_startproc
 1519              		@ args = 16, pretend = 0, frame = 24
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              	.LVL109:
 1522 0000 04E02DE5 		str	lr, [sp, #-4]!
 1523              		.cfi_def_cfa_offset 4
 1524              		.cfi_offset 14, -4
 1525 0004 1CD04DE2 		sub	sp, sp, #28
 1526              		.cfi_def_cfa_offset 32
1010:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
1011:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_gamma_correction_t param;
1012:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1013:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.gam_b_gain = gam_b_gain;
 1527              		.loc 1 1013 0
 1528 0008 28C09DE5 		ldr	ip, [sp, #40]
 1529 000c 08C08DE5 		str	ip, [sp, #8]
1014:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.gam_b_th = gam_b_th;
 1530              		.loc 1 1014 0
 1531 0010 2CC09DE5 		ldr	ip, [sp, #44]
 1532 0014 0CC08DE5 		str	ip, [sp, #12]
1015:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.gam_g_gain = gam_g_gain;
 1533              		.loc 1 1015 0
 1534 0018 20C09DE5 		ldr	ip, [sp, #32]
 1535 001c 00C08DE5 		str	ip, [sp]
1016:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.gam_g_th = gam_g_th;
 1536              		.loc 1 1016 0
 1537 0020 24C09DE5 		ldr	ip, [sp, #36]
 1538 0024 04C08DE5 		str	ip, [sp, #4]
1017:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.gam_r_gain = gam_r_gain;
 1539              		.loc 1 1017 0
 1540 0028 10208DE5 		str	r2, [sp, #16]
1018:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     param.gam_r_th = gam_r_th;
 1541              		.loc 1 1018 0
 1542 002c 14308DE5 		str	r3, [sp, #20]
1019:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1020:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_GammaCorrection (ch, gam_on, &param);
 1543              		.loc 1 1020 0
 1544 0030 0D20A0E1 		mov	r2, sp
 1545              	.LVL110:
 1546 0034 FEFFFFEB 		bl	R_VDC_GammaCorrection
 1547              	.LVL111:
1021:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1022:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
1023:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_DispGammaVDC() */
 1548              		.loc 1 1023 0
 1549 0038 1CD08DE2 		add	sp, sp, #28
 1550              		.cfi_def_cfa_offset 4
 1551              		@ sp needed
 1552 003c 04F09DE4 		ldr	pc, [sp], #4
 1553              		.cfi_endproc
 1554              	.LFE18:
 1556              		.section	.text.R_RVAPI_VideoCalibrationVDC,"ax",%progbits
 1557              		.align	2
 1558              		.global	R_RVAPI_VideoCalibrationVDC
 1559              		.syntax unified
 1560              		.arm
 1561              		.fpu neon
 1563              	R_RVAPI_VideoCalibrationVDC:
 1564              	.LFB19:
1024:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1025:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
1026:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoCalibrationVDC
1027:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video Contrast and Brightness initialization processing
1028:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch                   : Channel
1029:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   color_matrix         : Color matrix setup parameter
1030:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
1031:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
1032:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_VideoCalibrationVDC 
1033:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             (const vdc_channel_t ch, const vdc_color_matrix_t * const color_matrix)
1034:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1565              		.loc 1 1034 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
 1568              		@ frame_needed = 0, uses_anonymous_args = 0
 1569              	.LVL112:
 1570 0000 10402DE9 		push	{r4, lr}
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 4, -8
 1573              		.cfi_offset 14, -4
1035:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
1036:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1037:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_ImageColorMatrix (ch, color_matrix);
 1574              		.loc 1 1037 0
 1575 0004 FEFFFFEB 		bl	R_VDC_ImageColorMatrix
 1576              	.LVL113:
1038:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1039:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
1040:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoCalibrationVDC() */
 1577              		.loc 1 1040 0
 1578 0008 1080BDE8 		pop	{r4, pc}
 1579              		.cfi_endproc
 1580              	.LFE19:
 1582              		.section	.text.R_RVAPI_VideoSharpnessLtiVDC,"ax",%progbits
 1583              		.align	2
 1584              		.global	R_RVAPI_VideoSharpnessLtiVDC
 1585              		.syntax unified
 1586              		.arm
 1587              		.fpu neon
 1589              	R_RVAPI_VideoSharpnessLtiVDC:
 1590              	.LFB20:
1041:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1042:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
1043:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoSharpnessLtiVDC
1044:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video Sharpness and LTI initialization processing
1045:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
1046:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   imgimprv_id     : Image quality improver ID
1047:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   shp_h_on        : Sharpness ON/OFF setting
1048:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   sharp_param     : Sharpness setup parameter
1049:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   lti_h_on        : LTI ON/OFF setting
1050:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   lti_param       : LTI setup parameter
1051:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   enh_area        : Enhancer-enabled area setup parameter
1052:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
1053:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
1054:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_VideoSharpnessLtiVDC 
1055:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const vdc_imgimprv_id_t imgimprv_id,
1056:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const vdc_onoff_t shp_h_on, const vdc_enhance_sharp_t * const sharp_param, const vdc_onoff_
1057:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const vdc_enhance_lti_t * const lti_param, const vdc_period_rect_t * const enh_area)
1058:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1591              		.loc 1 1058 0
 1592              		.cfi_startproc
 1593              		@ args = 12, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              	.LVL114:
 1596 0000 04E02DE5 		str	lr, [sp, #-4]!
 1597              		.cfi_def_cfa_offset 4
 1598              		.cfi_offset 14, -4
 1599 0004 14D04DE2 		sub	sp, sp, #20
 1600              		.cfi_def_cfa_offset 24
1059:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
1060:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1061:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     error = R_VDC_ImageEnhancement (ch, imgimprv_id, shp_h_on, sharp_param, lti_h_on, lti_param, en
 1601              		.loc 1 1061 0
 1602 0008 20C09DE5 		ldr	ip, [sp, #32]
 1603 000c 08C08DE5 		str	ip, [sp, #8]
 1604 0010 1CC09DE5 		ldr	ip, [sp, #28]
 1605 0014 04C08DE5 		str	ip, [sp, #4]
 1606 0018 18C0DDE5 		ldrb	ip, [sp, #24]	@ zero_extendqisi2
 1607 001c 00C08DE5 		str	ip, [sp]
 1608 0020 FEFFFFEB 		bl	R_VDC_ImageEnhancement
 1609              	.LVL115:
1062:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1063:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
1064:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoSharpnessLtiVDC() */
 1610              		.loc 1 1064 0
 1611 0024 14D08DE2 		add	sp, sp, #20
 1612              		.cfi_def_cfa_offset 4
 1613              		@ sp needed
 1614 0028 04F09DE4 		ldr	pc, [sp], #4
 1615              		.cfi_endproc
 1616              	.LFE20:
 1618              		.section	.text.R_RVAPI_VideoCreateSurfaceIMRL2,"ax",%progbits
 1619              		.align	2
 1620              		.global	R_RVAPI_VideoCreateSurfaceIMRL2
 1621              		.syntax unified
 1622              		.arm
 1623              		.fpu neon
 1625              	R_RVAPI_VideoCreateSurfaceIMRL2:
 1626              	.LFB21:
1065:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1066:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** /**************************************************************************//**
1067:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * Function Name : R_RVAPI_VideoCreateSurfaceIMRL2
1068:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @brief       Video create surface processing
1069:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   ch              : Channel
1070:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   v_cnf           : Video surface write config
1071:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @param[in]   v_disp_cnf      : Video surface read config
1072:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  * @retval      VDC driver error code
1073:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****  ******************************************************************************/
1074:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** vdc_error_t R_RVAPI_VideoCreateSurfaceIMRL2 
1075:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         (const vdc_channel_t ch, const v_surface_config_t * const v_cnf,
1076:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         const v_surface_disp_config_t * const v_disp_cnf)
1077:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** {
 1627              		.loc 1 1077 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 88
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631              	.LVL116:
 1632 0000 F0402DE9 		push	{r4, r5, r6, r7, lr}
 1633              		.cfi_def_cfa_offset 20
 1634              		.cfi_offset 4, -20
 1635              		.cfi_offset 5, -16
 1636              		.cfi_offset 6, -12
 1637              		.cfi_offset 7, -8
 1638              		.cfi_offset 14, -4
 1639 0004 5CD04DE2 		sub	sp, sp, #92
 1640              		.cfi_def_cfa_offset 112
1078:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_error_t error;
1079:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_write_t write_cfg;
1080:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_scalingdown_rot_t * pscldw_rot; 
1081:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_read_t read_cfg;
1082:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     vdc_width_read_fb_t width_read_fb;
1083:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1084:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     /* pointer NULL check */
1085:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     if (NULL == v_cnf)
 1641              		.loc 1 1085 0
 1642 0008 004051E2 		subs	r4, r1, #0
 1643 000c 6800000A 		beq	.L107
 1644 0010 0250A0E1 		mov	r5, r2
 1645 0014 0060A0E1 		mov	r6, r0
 1646              	.LVL117:
1086:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
1087:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = VDC_ERR_PARAM_NULL;
1088:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
1089:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     else
1090:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     {
1091:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Scaling-down and rotation parameter */
1092:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot = (&write_cfg.scalingdown_rot);
1093:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1094:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Image area to be captured */
1095:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Video capture is 1 delay */
1096:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.vs = (uint16_t) ((uint32_t) v_cnf->cap_area.vs - 1u);
 1647              		.loc 1 1096 0
 1648 0018 B230D4E1 		ldrh	r3, [r4, #2]
 1649 001c 013043E2 		sub	r3, r3, #1
 1650 0020 BC32CDE1 		strh	r3, [sp, #44]	@ movhi
1097:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.vw = v_cnf->cap_area.vw + 4u;
 1651              		.loc 1 1097 0
 1652 0024 B430D4E1 		ldrh	r3, [r4, #4]
 1653 0028 043083E2 		add	r3, r3, #4
 1654 002c BE32CDE1 		strh	r3, [sp, #46]	@ movhi
1098:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.hs = v_cnf->cap_area.hs;
 1655              		.loc 1 1098 0
 1656 0030 B630D4E1 		ldrh	r3, [r4, #6]
 1657 0034 B033CDE1 		strh	r3, [sp, #48]	@ movhi
1099:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res.hw = v_cnf->cap_area.hw;
 1658              		.loc 1 1099 0
 1659 0038 B830D4E1 		ldrh	r3, [r4, #8]
 1660 003c B233CDE1 		strh	r3, [sp, #50]	@ movhi
1100:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1101:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Write data parameter */
1102:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_pfil_sel = VDC_ON; /* Prefilter mode select for brightness signals (on/off)
 1661              		.loc 1 1102 0
 1662 0040 0120A0E3 		mov	r2, #1
 1663              	.LVL118:
 1664 0044 3420CDE5 		strb	r2, [sp, #52]
1103:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1104:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_out_vw = v_cnf->write_fb_vw + 4u; /* scaling output vw */
 1665              		.loc 1 1104 0
 1666 0048 BE31D4E1 		ldrh	r3, [r4, #30]
 1667 004c 043083E2 		add	r3, r3, #4
 1668 0050 B633CDE1 		strh	r3, [sp, #54]	@ movhi
1105:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_out_hw = v_cnf->write_fb_hw; /* scaling output hw */
 1669              		.loc 1 1105 0
 1670 0054 B032D4E1 		ldrh	r3, [r4, #32]
 1671 0058 B833CDE1 		strh	r3, [sp, #56]	@ movhi
1106:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1107:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->adj_sel = VDC_ON; /* lack of last-input line (on/off) */
 1672              		.loc 1 1107 0
 1673 005c 3A20CDE5 		strb	r2, [sp, #58]
1108:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         pscldw_rot->res_ds_wr_md = VDC_WR_MD_NORMAL; /* Frame buffer writing mode */
 1674              		.loc 1 1108 0
 1675 0060 0030A0E3 		mov	r3, #0
 1676 0064 3B30CDE5 		strb	r3, [sp, #59]
1109:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1110:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_wrswa = VDC_WR_RD_WRSWA_NON; /* Frame buffer swap setting */
 1677              		.loc 1 1110 0
 1678 0068 3C30CDE5 		strb	r3, [sp, #60]
1111:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_md = VDC_RES_MD_YCBCR422; /* Frame buffer video-signal writing format */
 1679              		.loc 1 1111 0
 1680 006c 3D30CDE5 		strb	r3, [sp, #61]
1112:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_bst_md = VDC_BST_MD_32BYTE; /* Transfer burst length for frame buffer */
 1681              		.loc 1 1112 0
 1682 0070 3E30CDE5 		strb	r3, [sp, #62]
1113:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_inter = v_cnf->res_inter; /* Field operating mode select */
 1683              		.loc 1 1113 0
 1684 0074 2310D4E5 		ldrb	r1, [r4, #35]	@ zero_extendqisi2
 1685              	.LVL119:
 1686 0078 3F10CDE5 		strb	r1, [sp, #63]
1114:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_fs_rate = VDC_RES_FS_RATE_PER1; /* Writing rate */
 1687              		.loc 1 1114 0
 1688 007c 4030CDE5 		strb	r3, [sp, #64]
1115:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_fld_sel = VDC_RES_FLD_SEL_TOP; /* Write field select */
 1689              		.loc 1 1115 0
 1690 0080 4130CDE5 		strb	r3, [sp, #65]
1116:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.res_dth_on = VDC_ON; /* Dither correction on/off */
 1691              		.loc 1 1116 0
 1692 0084 4220CDE5 		strb	r2, [sp, #66]
1117:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.base = v_cnf->fb_buff; /* Frame buffer base address */
 1693              		.loc 1 1117 0
 1694 0088 0C2094E5 		ldr	r2, [r4, #12]
 1695 008c 44208DE5 		str	r2, [sp, #68]
1118:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.ln_off = v_cnf->fb_stride; /* Frame buffer line offset address [byte] */
 1696              		.loc 1 1118 0
 1697 0090 102094E5 		ldr	r2, [r4, #16]
 1698 0094 48208DE5 		str	r2, [sp, #72]
1119:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.flm_num = (uint32_t) (v_cnf->fb_num - 1u);
 1699              		.loc 1 1119 0
 1700 0098 182094E5 		ldr	r2, [r4, #24]
 1701 009c 012042E2 		sub	r2, r2, #1
 1702 00a0 4C208DE5 		str	r2, [sp, #76]
1120:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.flm_off = v_cnf->fb_offset; /* Write buffer fb offset[byte]   */
 1703              		.loc 1 1120 0
 1704 00a4 142094E5 		ldr	r2, [r4, #20]
 1705 00a8 50208DE5 		str	r2, [sp, #80]
1121:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         write_cfg.btm_base = NULL; /* Frame buffer base address for bottom */
 1706              		.loc 1 1121 0
 1707 00ac 54308DE5 		str	r3, [sp, #84]
1122:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1123:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* Write data control */
1124:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         error = R_VDC_WriteDataControl (ch, v_cnf->layer_id, &write_cfg);
 1708              		.loc 1 1124 0
 1709 00b0 2C208DE2 		add	r2, sp, #44
 1710              	.LVL120:
 1711 00b4 D010D4E1 		ldrsb	r1, [r4]
 1712 00b8 FEFFFFEB 		bl	R_VDC_WriteDataControl
 1713              	.LVL121:
1125:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1126:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         /* pointer NULL check */
1127:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         if (NULL != v_disp_cnf)
 1714              		.loc 1 1127 0
 1715 00bc 000055E3 		cmp	r5, #0
 1716 00c0 3C00000A 		beq	.L105
 1717              	.LBB12:
1128:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         {
1129:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             vdc_layer_id_t read_layer_id;
1130:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1131:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             if (VDC_LAYER_ID_0_WR == v_cnf->layer_id)
 1718              		.loc 1 1131 0
 1719 00c4 D030D4E1 		ldrsb	r3, [r4]
 1720 00c8 000053E3 		cmp	r3, #0
 1721 00cc 3500001A 		bne	.L108
1132:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
1133:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_layer_id = VDC_LAYER_ID_0_RD;
 1722              		.loc 1 1133 0
 1723 00d0 0170A0E3 		mov	r7, #1
 1724              	.LVL122:
 1725              	.L106:
1134:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
1135:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             else
1136:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
1137:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_layer_id = VDC_LAYER_ID_ALL;
1138:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 error = VDC_ERR_PARAM_LAYER_ID;
1139:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
1140:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1141:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             if (VDC_OK == error)
 1726              		.loc 1 1141 0
 1727 00d4 000050E3 		cmp	r0, #0
 1728 00d8 3600001A 		bne	.L105
1142:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             {
1143:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Read data parameter */
1144:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_ln_off_dir = VDC_GR_LN_OFF_DIR_INC; /* Line offset address direction of
 1729              		.loc 1 1144 0
 1730 00dc 0030A0E3 		mov	r3, #0
 1731 00e0 1030CDE5 		strb	r3, [sp, #16]
1145:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_flm_sel = VDC_GR_FLM_SEL_DISTORTION;
 1732              		.loc 1 1145 0
 1733 00e4 0220A0E3 		mov	r2, #2
 1734 00e8 1120CDE5 		strb	r2, [sp, #17]
1146:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_imr_flm_inv = VDC_ON; /* Frame buffer number for distortion correction 
 1735              		.loc 1 1146 0
 1736 00ec 0120A0E3 		mov	r2, #1
 1737 00f0 1220CDE5 		strb	r2, [sp, #18]
1147:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_bst_md = VDC_BST_MD_32BYTE; /* Frame buffer burst transfer mode */
 1738              		.loc 1 1147 0
 1739 00f4 1330CDE5 		strb	r3, [sp, #19]
1148:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_base = v_cnf->fb_buff; /* Frame buffer base address */
 1740              		.loc 1 1148 0
 1741 00f8 0C3094E5 		ldr	r3, [r4, #12]
 1742 00fc 14308DE5 		str	r3, [sp, #20]
1149:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_ln_off = v_cnf->fb_stride; /* Frame buffer line offset address */
 1743              		.loc 1 1149 0
 1744 0100 103094E5 		ldr	r3, [r4, #16]
 1745 0104 18308DE5 		str	r3, [sp, #24]
1150:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1151:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 width_read_fb.in_hw = v_disp_cnf->disp_area.hw_rel;
 1746              		.loc 1 1151 0
 1747 0108 B610D5E1 		ldrh	r1, [r5, #6]
 1748 010c BE10CDE1 		strh	r1, [sp, #14]	@ movhi
1152:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 width_read_fb.in_vw = v_disp_cnf->disp_area.vw_rel;
 1749              		.loc 1 1152 0
 1750 0110 B200D5E1 		ldrh	r0, [r5, #2]
 1751              	.LVL123:
 1752 0114 58308DE2 		add	r3, sp, #88
 1753 0118 BC0463E1 		strh	r0, [r3, #-76]!	@ movhi
1153:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.width_read_fb = &width_read_fb; /* Width of the image read from frame buff
 1754              		.loc 1 1153 0
 1755 011c 1C308DE5 		str	r3, [sp, #28]
1154:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.adj_sel = VDC_ON; /* Measures to decrease the influence by folding pixels/
 1756              		.loc 1 1154 0
 1757 0120 2020CDE5 		strb	r2, [sp, #32]
1155:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1156:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_format = VDC_GR_FORMAT_YCBCR422; /* Format of the frame buffer read sig
 1758              		.loc 1 1156 0
 1759 0124 0830A0E3 		mov	r3, #8
 1760 0128 2130CDE5 		strb	r3, [sp, #33]
1157:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1158:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_ycc_swap /* Controls swapping of data read from buffer in the YCbCr422 
1159:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     = v_disp_cnf->read_ycc_swap;
 1761              		.loc 1 1159 0
 1762 012c 0830D5E5 		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 1763 0130 2230CDE5 		strb	r3, [sp, #34]
1160:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_rdswa = v_disp_cnf->read_swap;
 1764              		.loc 1 1160 0
 1765 0134 0930D5E5 		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 1766 0138 2330CDE5 		strb	r3, [sp, #35]
1161:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1162:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Display area */
1163:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.vs = v_disp_cnf->disp_area.vs_rel + full_screen.vs;
 1767              		.loc 1 1163 0
 1768 013c B0C0D5E1 		ldrh	ip, [r5]
 1769 0140 003000E3 		movw	r3, #:lower16:full_screen
 1770 0144 003040E3 		movt	r3, #:upper16:full_screen
 1771 0148 B020D3E1 		ldrh	r2, [r3]
 1772 014c 0C2082E0 		add	r2, r2, ip
 1773 0150 B422CDE1 		strh	r2, [sp, #36]	@ movhi
1164:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.vw = v_disp_cnf->disp_area.vw_rel;
 1774              		.loc 1 1164 0
 1775 0154 B602CDE1 		strh	r0, [sp, #38]	@ movhi
1165:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.hs = v_disp_cnf->disp_area.hs_rel + full_screen.hs;
 1776              		.loc 1 1165 0
 1777 0158 B420D5E1 		ldrh	r2, [r5, #4]
 1778 015c B430D3E1 		ldrh	r3, [r3, #4]
 1779 0160 023083E0 		add	r3, r3, r2
 1780 0164 B832CDE1 		strh	r3, [sp, #40]	@ movhi
1166:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 read_cfg.gr_grc.hw = v_disp_cnf->disp_area.hw_rel;
 1781              		.loc 1 1166 0
 1782 0168 BA12CDE1 		strh	r1, [sp, #42]	@ movhi
1167:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1168:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 /* Read data control */
1169:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 error = R_VDC_ReadDataControl (ch, read_layer_id, &read_cfg);
 1783              		.loc 1 1169 0
 1784 016c 10208DE2 		add	r2, sp, #16
 1785 0170 0710A0E1 		mov	r1, r7
 1786 0174 0600A0E1 		mov	r0, r6
 1787 0178 FEFFFFEB 		bl	R_VDC_ReadDataControl
 1788              	.LVL124:
1170:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1171:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 if (VDC_OK == error)
 1789              		.loc 1 1171 0
 1790 017c 000050E3 		cmp	r0, #0
 1791              	.LVL125:
 1792 0180 0C00001A 		bne	.L105
 1793              	.LBB13:
1172:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 {
1173:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     vdc_start_t start;
1174:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     vdc_gr_disp_sel_t disp_mode;
1175:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1176:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     disp_mode = VDC_DISPSEL_LOWER;
 1794              		.loc 1 1176 0
 1795 0184 58308DE2 		add	r3, sp, #88
 1796 0188 0120A0E3 		mov	r2, #1
 1797 018c 512063E5 		strb	r2, [r3, #-81]!
1177:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     start.gr_disp_sel = &disp_mode;
 1798              		.loc 1 1177 0
 1799 0190 58208DE2 		add	r2, sp, #88
 1800 0194 503022E5 		str	r3, [r2, #-80]!
1178:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                     error = R_VDC_StartProcess (ch, read_layer_id, &start);
 1801              		.loc 1 1178 0
 1802 0198 0710A0E1 		mov	r1, r7
 1803 019c 0600A0E1 		mov	r0, r6
 1804 01a0 FEFFFFEB 		bl	R_VDC_StartProcess
 1805              	.LVL126:
 1806 01a4 030000EA 		b	.L105
 1807              	.LVL127:
 1808              	.L108:
 1809              	.LBE13:
1137:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 error = VDC_ERR_PARAM_LAYER_ID;
 1810              		.loc 1 1137 0
 1811 01a8 0070E0E3 		mvn	r7, #0
1138:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
 1812              		.loc 1 1138 0
 1813 01ac 0200A0E3 		mov	r0, #2
 1814              	.LVL128:
 1815 01b0 C7FFFFEA 		b	.L106
 1816              	.LVL129:
 1817              	.L107:
 1818              	.LBE12:
1087:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
 1819              		.loc 1 1087 0
 1820 01b4 0300A0E3 		mov	r0, #3
 1821              	.LVL130:
 1822              	.L105:
1179:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****                 }
1180:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****             }
1181:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****         }
1182:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     }
1183:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** 
1184:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c ****     return error;
1185:../generate/sc_drivers/r_rvapi/src/r_rvapi_vdc.c **** } /* End of function R_RVAPI_VideoCreateSurfaceIMRL2() */
 1823              		.loc 1 1185 0
 1824 01b8 5CD08DE2 		add	sp, sp, #92
 1825              		.cfi_def_cfa_offset 20
 1826              		@ sp needed
 1827 01bc F080BDE8 		pop	{r4, r5, r6, r7, pc}
 1828              		.cfi_endproc
 1829              	.LFE21:
 1831              		.comm	full_screen,8,4
 1832              		.section	.rodata
 1833              		.align	2
 1834              		.set	.LANCHOR3,. + 0
 1835              	.LC0:
 1836 0000 08       		.byte	8
 1837 0001 00       		.byte	0
 1838 0002 01       		.byte	1
 1839 0003 09       		.byte	9
 1840              		.section	.rodata.color_table16,"a",%progbits
 1841              		.align	2
 1842              		.set	.LANCHOR1,. + 0
 1845              	color_table16:
 1846 0000 000000FF 		.word	-16777216
 1847 0004 0000FFFF 		.word	-65536
 1848 0008 00FF00FF 		.word	-16711936
 1849 000c FFFF00FF 		.word	-16711681
 1850 0010 FF0000FF 		.word	-16776961
 1851 0014 FF00FFFF 		.word	-65281
 1852 0018 000080FF 		.word	-8388608
 1853 001c 008080FF 		.word	-8355840
 1854 0020 808000FF 		.word	-16744320
 1855 0024 800000FF 		.word	-16777088
 1856 0028 800080FF 		.word	-8388480
 1857 002c 808080FF 		.word	-8355712
 1858 0030 C0C0C0FF 		.word	-4144960
 1859 0034 00A5FFFF 		.word	-23296
 1860 0038 FFFFFFFF 		.word	-1
 1861 003c FFFFFF00 		.word	16777215
 1862              		.section	.rodata.color_table2,"a",%progbits
 1863              		.align	2
 1864              		.set	.LANCHOR2,. + 0
 1867              	color_table2:
 1868 0000 000000FF 		.word	-16777216
 1869 0004 FFFFFFFF 		.word	-1
 1870              		.section	.rodata.color_table256,"a",%progbits
 1871              		.align	2
 1872              		.set	.LANCHOR0,. + 0
 1875              	color_table256:
 1876 0000 000000FF 		.word	-16777216
 1877 0004 010101FF 		.word	-16711423
 1878 0008 020202FF 		.word	-16645630
 1879 000c 030303FF 		.word	-16579837
 1880 0010 040404FF 		.word	-16514044
 1881 0014 050505FF 		.word	-16448251
 1882 0018 060606FF 		.word	-16382458
 1883 001c 070707FF 		.word	-16316665
 1884 0020 080808FF 		.word	-16250872
 1885 0024 090909FF 		.word	-16185079
 1886 0028 0A0A0AFF 		.word	-16119286
 1887 002c 0B0B0BFF 		.word	-16053493
 1888 0030 0C0C0CFF 		.word	-15987700
 1889 0034 0D0D0DFF 		.word	-15921907
 1890 0038 0E0E0EFF 		.word	-15856114
 1891 003c 0F0F0FFF 		.word	-15790321
 1892 0040 101010FF 		.word	-15724528
 1893 0044 111111FF 		.word	-15658735
 1894 0048 121212FF 		.word	-15592942
 1895 004c 131313FF 		.word	-15527149
 1896 0050 141414FF 		.word	-15461356
 1897 0054 151515FF 		.word	-15395563
 1898 0058 161616FF 		.word	-15329770
 1899 005c 171717FF 		.word	-15263977
 1900 0060 181818FF 		.word	-15198184
 1901 0064 191919FF 		.word	-15132391
 1902 0068 1A1A1AFF 		.word	-15066598
 1903 006c 1B1B1BFF 		.word	-15000805
 1904 0070 1C1C1CFF 		.word	-14935012
 1905 0074 1E1E1EFF 		.word	-14803426
 1906 0078 1E1E1EFF 		.word	-14803426
 1907 007c 1F1F1FFF 		.word	-14737633
 1908 0080 202020FF 		.word	-14671840
 1909 0084 212121FF 		.word	-14606047
 1910 0088 222222FF 		.word	-14540254
 1911 008c 232323FF 		.word	-14474461
 1912 0090 242424FF 		.word	-14408668
 1913 0094 252525FF 		.word	-14342875
 1914 0098 262626FF 		.word	-14277082
 1915 009c 272727FF 		.word	-14211289
 1916 00a0 282828FF 		.word	-14145496
 1917 00a4 292929FF 		.word	-14079703
 1918 00a8 2A2A2AFF 		.word	-14013910
 1919 00ac 2B2B2BFF 		.word	-13948117
 1920 00b0 2C2C2CFF 		.word	-13882324
 1921 00b4 2E2E2EFF 		.word	-13750738
 1922 00b8 2E2E2EFF 		.word	-13750738
 1923 00bc 2F2F2FFF 		.word	-13684945
 1924 00c0 303030FF 		.word	-13619152
 1925 00c4 313131FF 		.word	-13553359
 1926 00c8 323232FF 		.word	-13487566
 1927 00cc 333333FF 		.word	-13421773
 1928 00d0 343434FF 		.word	-13355980
 1929 00d4 353535FF 		.word	-13290187
 1930 00d8 363636FF 		.word	-13224394
 1931 00dc 373737FF 		.word	-13158601
 1932 00e0 383838FF 		.word	-13092808
 1933 00e4 393939FF 		.word	-13027015
 1934 00e8 3A3A3AFF 		.word	-12961222
 1935 00ec 3B3B3BFF 		.word	-12895429
 1936 00f0 3C3C3CFF 		.word	-12829636
 1937 00f4 3E3E3EFF 		.word	-12698050
 1938 00f8 3E3E3EFF 		.word	-12698050
 1939 00fc 3F3F3FFF 		.word	-12632257
 1940 0100 404040FF 		.word	-12566464
 1941 0104 414141FF 		.word	-12500671
 1942 0108 424242FF 		.word	-12434878
 1943 010c 434343FF 		.word	-12369085
 1944 0110 444444FF 		.word	-12303292
 1945 0114 454545FF 		.word	-12237499
 1946 0118 464646FF 		.word	-12171706
 1947 011c 474747FF 		.word	-12105913
 1948 0120 484848FF 		.word	-12040120
 1949 0124 494949FF 		.word	-11974327
 1950 0128 4A4A4AFF 		.word	-11908534
 1951 012c 4B4B4BFF 		.word	-11842741
 1952 0130 4C4C4CFF 		.word	-11776948
 1953 0134 4E4E4EFF 		.word	-11645362
 1954 0138 4E4E4EFF 		.word	-11645362
 1955 013c 4F4F4FFF 		.word	-11579569
 1956 0140 505050FF 		.word	-11513776
 1957 0144 515151FF 		.word	-11447983
 1958 0148 525252FF 		.word	-11382190
 1959 014c 535353FF 		.word	-11316397
 1960 0150 545454FF 		.word	-11250604
 1961 0154 555555FF 		.word	-11184811
 1962 0158 565656FF 		.word	-11119018
 1963 015c 575757FF 		.word	-11053225
 1964 0160 585858FF 		.word	-10987432
 1965 0164 595959FF 		.word	-10921639
 1966 0168 5A5A5AFF 		.word	-10855846
 1967 016c 5B5B5BFF 		.word	-10790053
 1968 0170 5C5C5CFF 		.word	-10724260
 1969 0174 5E5E5EFF 		.word	-10592674
 1970 0178 5E5E5EFF 		.word	-10592674
 1971 017c 5F5F5FFF 		.word	-10526881
 1972 0180 606060FF 		.word	-10461088
 1973 0184 616161FF 		.word	-10395295
 1974 0188 626262FF 		.word	-10329502
 1975 018c 636363FF 		.word	-10263709
 1976 0190 646464FF 		.word	-10197916
 1977 0194 656565FF 		.word	-10132123
 1978 0198 666666FF 		.word	-10066330
 1979 019c 676767FF 		.word	-10000537
 1980 01a0 686868FF 		.word	-9934744
 1981 01a4 696969FF 		.word	-9868951
 1982 01a8 6A6A6AFF 		.word	-9803158
 1983 01ac 6B6B6BFF 		.word	-9737365
 1984 01b0 6C6C6CFF 		.word	-9671572
 1985 01b4 6E6E6EFF 		.word	-9539986
 1986 01b8 6E6E6EFF 		.word	-9539986
 1987 01bc 6F6F6FFF 		.word	-9474193
 1988 01c0 707070FF 		.word	-9408400
 1989 01c4 717171FF 		.word	-9342607
 1990 01c8 727272FF 		.word	-9276814
 1991 01cc 737373FF 		.word	-9211021
 1992 01d0 747474FF 		.word	-9145228
 1993 01d4 757575FF 		.word	-9079435
 1994 01d8 767676FF 		.word	-9013642
 1995 01dc 777777FF 		.word	-8947849
 1996 01e0 787878FF 		.word	-8882056
 1997 01e4 797979FF 		.word	-8816263
 1998 01e8 7A7A7AFF 		.word	-8750470
 1999 01ec 7B7B7BFF 		.word	-8684677
 2000 01f0 7C7C7CFF 		.word	-8618884
 2001 01f4 7E7E7EFF 		.word	-8487298
 2002 01f8 7E7E7EFF 		.word	-8487298
 2003 01fc 7F7F7FFF 		.word	-8421505
 2004 0200 808080FF 		.word	-8355712
 2005 0204 818181FF 		.word	-8289919
 2006 0208 828282FF 		.word	-8224126
 2007 020c 838383FF 		.word	-8158333
 2008 0210 848484FF 		.word	-8092540
 2009 0214 858585FF 		.word	-8026747
 2010 0218 868686FF 		.word	-7960954
 2011 021c 878787FF 		.word	-7895161
 2012 0220 888888FF 		.word	-7829368
 2013 0224 898989FF 		.word	-7763575
 2014 0228 8A8A8AFF 		.word	-7697782
 2015 022c 8B8B8BFF 		.word	-7631989
 2016 0230 8C8C8CFF 		.word	-7566196
 2017 0234 8E8E8EFF 		.word	-7434610
 2018 0238 8E8E8EFF 		.word	-7434610
 2019 023c 8F8F8FFF 		.word	-7368817
 2020 0240 909090FF 		.word	-7303024
 2021 0244 919191FF 		.word	-7237231
 2022 0248 929292FF 		.word	-7171438
 2023 024c 939393FF 		.word	-7105645
 2024 0250 949494FF 		.word	-7039852
 2025 0254 959595FF 		.word	-6974059
 2026 0258 969696FF 		.word	-6908266
 2027 025c 979797FF 		.word	-6842473
 2028 0260 989898FF 		.word	-6776680
 2029 0264 999999FF 		.word	-6710887
 2030 0268 9A9A9AFF 		.word	-6645094
 2031 026c 9B9B9BFF 		.word	-6579301
 2032 0270 9C9C9CFF 		.word	-6513508
 2033 0274 9E9E9EFF 		.word	-6381922
 2034 0278 9E9E9EFF 		.word	-6381922
 2035 027c 9F9F9FFF 		.word	-6316129
 2036 0280 A0A0A0FF 		.word	-6250336
 2037 0284 A1A1A1FF 		.word	-6184543
 2038 0288 A2A2A2FF 		.word	-6118750
 2039 028c A3A3A3FF 		.word	-6052957
 2040 0290 A4A4A4FF 		.word	-5987164
 2041 0294 A5A5A5FF 		.word	-5921371
 2042 0298 A6A6A6FF 		.word	-5855578
 2043 029c A7A7A7FF 		.word	-5789785
 2044 02a0 A8A8A8FF 		.word	-5723992
 2045 02a4 A9A9A9FF 		.word	-5658199
 2046 02a8 AAAAAAFF 		.word	-5592406
 2047 02ac ABABABFF 		.word	-5526613
 2048 02b0 ACACACFF 		.word	-5460820
 2049 02b4 AEAEAEFF 		.word	-5329234
 2050 02b8 AEAEAEFF 		.word	-5329234
 2051 02bc AFAFAFFF 		.word	-5263441
 2052 02c0 B0B0B0FF 		.word	-5197648
 2053 02c4 B1B1B1FF 		.word	-5131855
 2054 02c8 B2B2B2FF 		.word	-5066062
 2055 02cc B3B3B3FF 		.word	-5000269
 2056 02d0 B4B4B4FF 		.word	-4934476
 2057 02d4 B5B5B5FF 		.word	-4868683
 2058 02d8 B6B6B6FF 		.word	-4802890
 2059 02dc B7B7B7FF 		.word	-4737097
 2060 02e0 B8B8B8FF 		.word	-4671304
 2061 02e4 B9B9B9FF 		.word	-4605511
 2062 02e8 BABABAFF 		.word	-4539718
 2063 02ec BBBBBBFF 		.word	-4473925
 2064 02f0 BCBCBCFF 		.word	-4408132
 2065 02f4 BEBEBEFF 		.word	-4276546
 2066 02f8 BEBEBEFF 		.word	-4276546
 2067 02fc BFBFBFFF 		.word	-4210753
 2068 0300 C0C0C0FF 		.word	-4144960
 2069 0304 C1C1C1FF 		.word	-4079167
 2070 0308 C2C2C2FF 		.word	-4013374
 2071 030c C3C3C3FF 		.word	-3947581
 2072 0310 C4C4C4FF 		.word	-3881788
 2073 0314 C5C5C5FF 		.word	-3815995
 2074 0318 C6C6C6FF 		.word	-3750202
 2075 031c C7C7C7FF 		.word	-3684409
 2076 0320 C8C8C8FF 		.word	-3618616
 2077 0324 C9C9C9FF 		.word	-3552823
 2078 0328 CACACAFF 		.word	-3487030
 2079 032c CBCBCBFF 		.word	-3421237
 2080 0330 CCCCCCFF 		.word	-3355444
 2081 0334 CECECEFF 		.word	-3223858
 2082 0338 CECECEFF 		.word	-3223858
 2083 033c CFCFCFFF 		.word	-3158065
 2084 0340 D0D0D0FF 		.word	-3092272
 2085 0344 D1D1D1FF 		.word	-3026479
 2086 0348 D2D2D2FF 		.word	-2960686
 2087 034c D3D3D3FF 		.word	-2894893
 2088 0350 D4D4D4FF 		.word	-2829100
 2089 0354 D5D5D5FF 		.word	-2763307
 2090 0358 D6D6D6FF 		.word	-2697514
 2091 035c D7D7D7FF 		.word	-2631721
 2092 0360 D8D8D8FF 		.word	-2565928
 2093 0364 D9D9D9FF 		.word	-2500135
 2094 0368 DADADAFF 		.word	-2434342
 2095 036c DBDBDBFF 		.word	-2368549
 2096 0370 DCDCDCFF 		.word	-2302756
 2097 0374 DEDEDEFF 		.word	-2171170
 2098 0378 DEDEDEFF 		.word	-2171170
 2099 037c DFDFDFFF 		.word	-2105377
 2100 0380 E0E0E0FF 		.word	-2039584
 2101 0384 E1E1E1FF 		.word	-1973791
 2102 0388 E2E2E2FF 		.word	-1907998
 2103 038c E3E3E3FF 		.word	-1842205
 2104 0390 E4E4E4FF 		.word	-1776412
 2105 0394 E5E5E5FF 		.word	-1710619
 2106 0398 E6E6E6FF 		.word	-1644826
 2107 039c E7E7E7FF 		.word	-1579033
 2108 03a0 E8E8E8FF 		.word	-1513240
 2109 03a4 E9E9E9FF 		.word	-1447447
 2110 03a8 EAEAEAFF 		.word	-1381654
 2111 03ac EBEBEBFF 		.word	-1315861
 2112 03b0 ECECECFF 		.word	-1250068
 2113 03b4 EEEEEEFF 		.word	-1118482
 2114 03b8 EEEEEEFF 		.word	-1118482
 2115 03bc EFEFEFFF 		.word	-1052689
 2116 03c0 F0F0F0FF 		.word	-986896
 2117 03c4 F1F1F1FF 		.word	-921103
 2118 03c8 F2F2F2FF 		.word	-855310
 2119 03cc F3F3F3FF 		.word	-789517
 2120 03d0 F4F4F4FF 		.word	-723724
 2121 03d4 F5F5F5FF 		.word	-657931
 2122 03d8 F6F6F6FF 		.word	-592138
 2123 03dc F7F7F7FF 		.word	-526345
 2124 03e0 F8F8F8FF 		.word	-460552
 2125 03e4 F9F9F9FF 		.word	-394759
 2126 03e8 FAFAFAFF 		.word	-328966
 2127 03ec FBFBFBFF 		.word	-263173
 2128 03f0 FCFCFCFF 		.word	-197380
 2129 03f4 FEFEFEFF 		.word	-65794
 2130 03f8 FEFEFEFF 		.word	-65794
 2131 03fc FFFFFFFF 		.word	-1
 2132              		.text
 2133              	.Letext0:
 2134              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2135              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2136              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2137              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2138              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 2139              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2140              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 2141              		.file 9 "C:/Users/tle/e2_studio/workspace/rza2m_cam_and_disp_sample_freertos_gcc/generate/sc_drive
 2142              		.file 10 "C:/Users/tle/e2_studio/workspace/rza2m_cam_and_disp_sample_freertos_gcc/generate/sc_driv
DEFINED SYMBOLS
                            *ABS*:00000000 r_rvapi_vdc.c
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:17     .text.R_RVAPI_InitializeVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:23     .text.R_RVAPI_InitializeVDC:00000000 R_RVAPI_InitializeVDC
                            *COM*:00000008 full_screen
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:121    .text.R_RVAPI_TerminateVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:127    .text.R_RVAPI_TerminateVDC:00000000 R_RVAPI_TerminateVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:150    .text.R_RVAPI_DispControlVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:156    .text.R_RVAPI_DispControlVDC:00000000 R_RVAPI_DispControlVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:407    .text.R_RVAPI_GraphCreateSurfaceVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:413    .text.R_RVAPI_GraphCreateSurfaceVDC:00000000 R_RVAPI_GraphCreateSurfaceVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1872   .rodata.color_table256:00000000 .LANCHOR0
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1842   .rodata.color_table16:00000000 .LANCHOR1
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1864   .rodata.color_table2:00000000 .LANCHOR2
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:616    .text.R_RVAPI_GraphChangeSurfaceVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:622    .text.R_RVAPI_GraphChangeSurfaceVDC:00000000 R_RVAPI_GraphChangeSurfaceVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:657    .text.R_RVAPI_GraphChangeSurfaceConfigVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:663    .text.R_RVAPI_GraphChangeSurfaceConfigVDC:00000000 R_RVAPI_GraphChangeSurfaceConfigVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:733    .text.R_RVAPI_GraphDestroySurfaceVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:739    .text.R_RVAPI_GraphDestroySurfaceVDC:00000000 R_RVAPI_GraphDestroySurfaceVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:772    .text.R_RVAPI_DispPortSettingVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:778    .text.R_RVAPI_DispPortSettingVDC:00000000 R_RVAPI_DispPortSettingVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:801    .text.R_RVAPI_VideoControlVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:807    .text.R_RVAPI_VideoControlVDC:00000000 R_RVAPI_VideoControlVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:891    .text.R_RVAPI_VideoCreateSurfaceVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:897    .text.R_RVAPI_VideoCreateSurfaceVDC:00000000 R_RVAPI_VideoCreateSurfaceVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1834   .rodata:00000000 .LANCHOR3
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1165   .text.R_RVAPI_VideoDestroySurfaceVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1171   .text.R_RVAPI_VideoDestroySurfaceVDC:00000000 R_RVAPI_VideoDestroySurfaceVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1226   .text.R_RVAPI_VideoPortSettingVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1232   .text.R_RVAPI_VideoPortSettingVDC:00000000 R_RVAPI_VideoPortSettingVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1255   .text.R_RVAPI_InterruptEnableVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1261   .text.R_RVAPI_InterruptEnableVDC:00000000 R_RVAPI_InterruptEnableVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1293   .text.R_RVAPI_InterruptDisableVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1299   .text.R_RVAPI_InterruptDisableVDC:00000000 R_RVAPI_InterruptDisableVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1332   .text.R_RVAPI_AlphablendingRectVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1338   .text.R_RVAPI_AlphablendingRectVDC:00000000 R_RVAPI_AlphablendingRectVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1382   .text.R_RVAPI_AlphablendingVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1388   .text.R_RVAPI_AlphablendingVDC:00000000 R_RVAPI_AlphablendingVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1428   .text.R_RVAPI_ChromakeyVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1434   .text.R_RVAPI_ChromakeyVDC:00000000 R_RVAPI_ChromakeyVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1468   .text.R_RVAPI_DispCalibrationVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1474   .text.R_RVAPI_DispCalibrationVDC:00000000 R_RVAPI_DispCalibrationVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1509   .text.R_RVAPI_DispGammaVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1515   .text.R_RVAPI_DispGammaVDC:00000000 R_RVAPI_DispGammaVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1557   .text.R_RVAPI_VideoCalibrationVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1563   .text.R_RVAPI_VideoCalibrationVDC:00000000 R_RVAPI_VideoCalibrationVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1583   .text.R_RVAPI_VideoSharpnessLtiVDC:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1589   .text.R_RVAPI_VideoSharpnessLtiVDC:00000000 R_RVAPI_VideoSharpnessLtiVDC
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1619   .text.R_RVAPI_VideoCreateSurfaceIMRL2:00000000 $a
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1625   .text.R_RVAPI_VideoCreateSurfaceIMRL2:00000000 R_RVAPI_VideoCreateSurfaceIMRL2
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1833   .rodata:00000000 $d
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1841   .rodata.color_table16:00000000 $d
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1845   .rodata.color_table16:00000000 color_table16
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1863   .rodata.color_table2:00000000 $d
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1867   .rodata.color_table2:00000000 color_table2
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1871   .rodata.color_table256:00000000 $d
C:\Users\tle\AppData\Local\Temp\cc1gdD2j.s:1875   .rodata.color_table256:00000000 color_table256
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.14fc17be114e5a2cba0959c511ea2aaf
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:00000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.adc_iodefine.h.29.14c6f50dce37432a7d004e4b1ce33da7
                           .group:00000000 wm4.bsc_iodefine.h.29.9281d1f3639266933964d6d0c2d42c4f
                           .group:00000000 wm4.ceu_iodefine.h.29.2a669d0b46fdde030a50db9e3c307fbf
                           .group:00000000 wm4.cpg_iodefine.h.29.d6fdc9cb4798723afd88b251d64c2ce2
                           .group:00000000 wm4.csi2link_iodefine.h.29.221c4531636a409f24d307b16341ada8
                           .group:00000000 wm4.dmac_iodefine.h.29.578fccc2cc1da886ec95a029bf874f01
                           .group:00000000 wm4.drpk_iodefine.h.29.580eb8588a2b2d43d2726fbe791e513f
                           .group:00000000 wm4.drw_iodefine.h.29.df30f4a4a34a79f6a86c4df91353dffe
                           .group:00000000 wm4.edmac_iodefine.h.29.33e8759349004a722f42f5429c1353f6
                           .group:00000000 wm4.eptpc_iodefine.h.29.74d8f9fab0f5549b56097fb9e937dde8
                           .group:00000000 wm4.etherc_iodefine.h.29.14602750383a574f1c21f994ad33a366
                           .group:00000000 wm4.gpio_iodefine.h.29.3d0b021c56839cee4ae5149903684e4b
                           .group:00000000 wm4.gpt_iodefine.h.29.557ead75d7b0585b898d3898b64c7f87
                           .group:00000000 wm4.hyper_iodefine.h.29.000caadbb74d881e97db55b39b432154
                           .group:00000000 wm4.imr_iodefine.h.29.77c022f017e711c4d51cc0145db1dad3
                           .group:00000000 wm4.intc_iodefine.h.29.b68f5799a35a7495d63b4cd458e1ba57
                           .group:00000000 wm4.irda_iodefine.h.29.37e67bd2005173d68a74d1cc937d8444
                           .group:00000000 wm4.jcu_iodefine.h.29.3aca452908962e7a7ccf26164751feda
                           .group:00000000 wm4.lvds_iodefine.h.29.c11cbe1900e5209c8dcc76c2336c16bc
                           .group:00000000 wm4.mtu_iodefine.h.29.5498fb974bb53caf05aa143c2deec781
                           .group:00000000 wm4.nandc_iodefine.h.29.e0b343306750f017ee86e169ad98efe9
                           .group:00000000 wm4.octa_iodefine.h.29.4cb0d62e4b9633e173858000dc1c626c
                           .group:00000000 wm4.ostm_iodefine.h.29.6914f7e330a1cf0008b34219adcdfed4
                           .group:00000000 wm4.pl_iodefine.h.29.abbb6d725aed990aa8343242bfe31416
                           .group:00000000 wm4.pmg_iodefine.h.29.8bcfbc4771a6f9b7dd4d6f504427219e
                           .group:00000000 wm4.poeg_iodefine.h.29.0d8e258d10986260cbc70cfb8c0ef273
                           .group:00000000 wm4.poe_iodefine.h.29.fe74e55e7b6b4afbe3596c74ba035e98
                           .group:00000000 wm4.prr_iodefine.h.29.c1f15576f7a27b9c83aa3b40f5b2f988
                           .group:00000000 wm4.ptpedmac_iodefine.h.29.cd24a93374ce35cebc41e26889d619ef
                           .group:00000000 wm4.rcanfd_iodefine.h.29.532dd48b82fcb61d63538aba4b6f1289
                           .group:00000000 wm4.rcan_iodefine.h.29.a47a89db1b35c12b54af48fa1956acba
                           .group:00000000 wm4.riic_iodefine.h.29.f96943d49800d297612c4af3bba5c943
                           .group:00000000 wm4.rspi_iodefine.h.29.7efa041fe34a7d27db66a7b337879dfe
                           .group:00000000 wm4.rtc_iodefine.h.29.6dc76be5ca3df69cecb5a81d06cc46b5
                           .group:00000000 wm4.scifa_iodefine.h.29.b04ccd664d71baaf31c75761c45b9c4d
                           .group:00000000 wm4.scim_iodefine.h.29.87d0760abf94446b00d826c797bf0ff2
                           .group:00000000 wm4.sdmmc_iodefine.h.29.e67e9815445e8057a3262d1566bea0db
                           .group:00000000 wm4.spdif_iodefine.h.29.59f5d70150fa200a4d8ee50be1ee34c8
                           .group:00000000 wm4.spibsc_iodefine.h.29.f4930f8b8da1140200204513a363c76f
                           .group:00000000 wm4.sprite_iodefine.h.29.55796d1fa083a2457fea4ece974a192e
                           .group:00000000 wm4.ssif_iodefine.h.29.054ec6d95f487f631f16aee39c85c47a
                           .group:00000000 wm4.usb_iodefine.h.29.6dc44ea388ba227e8fdcfb33c315887b
                           .group:00000000 wm4.vdc_iodefine.h.29.db282ded1f052d8567fbbd3b61ce8f7a
                           .group:00000000 wm4.vin_iodefine.h.29.9b392e5601347d53e64be3272934e170
                           .group:00000000 wm4.wdt_iodefine.h.29.ed07bb44b797072f8c28b41c64fdca30
                           .group:00000000 wm4.r_vdc_user.h.32.3f3db05b07a24f5c3abdea3809348418
                           .group:00000000 wm4.r_vdc.h.31.7a8e28d4a80bfb6c6b4be0ab3890da8f
                           .group:00000000 wm4.r_rvapi_vdc.h.56.5c61db780dd0e78fd0dc60ae6029256c

UNDEFINED SYMBOLS
R_VDC_OnInitialize
R_VDC_Initialize
R_VDC_OnFinalize
R_VDC_Terminate
R_VDC_SyncControl
R_VDC_DisplayOutput
R_VDC_ReadDataControl
R_VDC_CLUT
R_VDC_StartProcess
R_VDC_ChangeReadProcess
R_VDC_StopProcess
R_VDC_ReleaseDataControl
R_VDC_VideoInput
R_VDC_WriteDataControl
R_VDC_CallbackISR
R_VDC_AlphaBlendingRect
R_VDC_AlphaBlending
R_VDC_Chromakey
R_VDC_DisplayCalibration
R_VDC_GammaCorrection
R_VDC_ImageColorMatrix
R_VDC_ImageEnhancement
