   1              		.cpu cortex-a9
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.file	"r_memory_map.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.gs_ChangeToOtherVirtualAddress,"ax",%progbits
  17              		.align	2
  18              		.syntax unified
  19              		.arm
  20              		.fpu neon
  22              	gs_ChangeToOtherVirtualAddress:
  23              	.LFB0:
  24              		.file 1 "../generate/sc_drivers/r_jcu/porting/r_memory_map.c"
   1:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /**************************************************************************************************
   2:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * DISCLAIMER
   3:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * This software is supplied by Renesas Electronics Corporation and is only intended for use with R
   4:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * other uses are authorized. This software is owned by Renesas Electronics Corporation and is prot
   5:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * applicable laws, including copyright laws.
   6:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
   7:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
   8:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAI
   9:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS A
  10:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY R
  11:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DA
  12:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * Renesas reserves the right, without notice, to make changes to this software and to discontinue 
  13:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * this software. By using this software, you agree to the additional terms and conditions found by
  14:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * following link:
  15:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * http://www.renesas.com/disclaimer
  16:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  *
  17:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  * Copyright (C) 2019 Renesas Electronics Corporation. All rights reserved.
  18:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****  **************************************************************************************************
  19:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  20:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * File         : r_memory_map.c
  21:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Description:
  22:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *    "gs_shared_memory_areas" variable must be changed by the setting of MMU.
  23:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Version      : 1.12
  24:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  25:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  26:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  27:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** Includes   <System Includes> , "Project Includes"
  28:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  29:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #include  <stdint.h>
  30:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #include  "r_mmu_lld_rza2m.h"
  31:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #include  "rz_co.h"
  32:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #include  "r_memory_map.h"
  33:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #include  "r_mmu_drv_sc_cfg.h"
  34:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  35:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  36:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  37:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** Macro definitions
  38:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  39:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  40:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /***********************************************************************
  41:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Defines: Macros in this file scope. Global static defines (GS)
  42:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ************************************************************************/
  43:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  44:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /* Constant: GS_NOT_SHARE */
  45:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #define  GS_NOT_SHARE  ((uintptr_t)  1u  )
  46:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  47:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /* Constant: GS_TTB_ATTR_TEX_C_B
  48:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *    TEX, C and B bit in translation table entry (MMU) */
  49:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #define  GS_TTB_ATTR_TEX_C_B  (  0x0000700Cu  )
  50:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  51:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /* Constant: GS_PAGE_SIZE */
  52:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #define  GS_PAGE_SIZE  (  0x00100000u  )
  53:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  54:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /* Constant: GS_INDEX_ERROR */
  55:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** #define  GS_INDEX_ERROR  (  -1  )
  56:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  57:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  58:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  59:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** Typedef definitions
  60:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  61:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  62:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  63:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** Imported global variables and functions (from other files)
  64:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  65:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  66:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  67:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** Exported global variables and functions (to be accessed by other files)
  68:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  69:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  70:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  71:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** Private global variables and functions
  72:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  73:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /* Section: Global */
  74:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  75:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
  76:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Function Name: gs_ChangeToOtherVirtualAddress
  77:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *    Get the other virtual address sharing the physical address
  78:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *
  79:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Arguments:
  80:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *   in_VirtualAddress - A virtual address
  81:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *
  82:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Return Value:
  83:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *   The other virtual address  or  GS_NOT_SHARE
  84:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
  85:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** static uintptr_t  gs_ChangeToOtherVirtualAddress 
  86:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( const volatile void* const  in_VirtualAddress )
  87:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** {
  25              		.loc 1 87 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 04E02DE5 		str	lr, [sp, #-4]!
  31              		.cfi_def_cfa_offset 4
  32              		.cfi_offset 14, -4
  33              	.LVL1:
  88:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     static const int_fast32_t  count_of_area = R_COUNT_OF( MMU_SC_TABLE );
  89:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     static const uint32_t      size_of_32bit_address_area = 0u;  /* 0x100000000 */
  90:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  91:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     /* Cast to an appropriate type */
  92:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uintptr_t     input_virtual_address = (uintptr_t) in_VirtualAddress;
  93:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  94:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     /* Cast to an appropriate type */
  95:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uintptr_t     other_virtual_address = GS_NOT_SHARE;
  96:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uint32_t      physical_address;
  97:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     int_fast32_t  area_index;
  98:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     int_fast32_t  input_area_index = GS_INDEX_ERROR;
  99:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 100:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 101:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     /* physical_address = ... */
 102:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     for ( area_index = 0;  area_index < count_of_area;  area_index += 1 )
  34              		.loc 1 102 0
  35 0004 0020A0E3 		mov	r2, #0
  36 0008 000000EA 		b	.L2
  37              	.LVL2:
  38              	.L3:
  39              		.loc 1 102 0 is_stmt 0 discriminator 2
  40 000c 012082E2 		add	r2, r2, #1
  41              	.LVL3:
  42              	.L2:
  43              		.loc 1 102 0 discriminator 1
  44 0010 1E0052E3 		cmp	r2, #30
  45 0014 190000CA 		bgt	.L12
  46              	.LBB2:
 103:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 104:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         uintptr_t  start_virtual_address = MMU_SC_TABLE[ area_index ].virtual_address;
  47              		.loc 1 104 0 is_stmt 1
  48 0018 003000E3 		movw	r3, #:lower16:.LANCHOR0
  49 001c 003040E3 		movt	r3, #:upper16:.LANCHOR0
  50 0020 021293E7 		ldr	r1, [r3, r2, lsl #4]
  51              	.LVL4:
 105:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 106:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         if ( input_virtual_address >= start_virtual_address )
  52              		.loc 1 106 0
  53 0024 010050E1 		cmp	r0, r1
  54 0028 F7FFFF3A 		bcc	.L3
  55              	.LBB3:
 107:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         {
 108:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uint32_t   area_size = MMU_SC_TABLE[ area_index ].page_count * GS_PAGE_SIZE;
  56              		.loc 1 108 0
  57 002c 003000E3 		movw	r3, #:lower16:.LANCHOR0
  58 0030 003040E3 		movt	r3, #:upper16:.LANCHOR0
  59 0034 023283E0 		add	r3, r3, r2, lsl #4
  60 0038 B8E0D3E1 		ldrh	lr, [r3, #8]
  61 003c 0EEAA0E1 		lsl	lr, lr, #20
  62              	.LVL5:
 109:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uintptr_t  last_virtual_address = (start_virtual_address + area_size) - 1;
  63              		.loc 1 109 0
  64 0040 0E3081E0 		add	r3, r1, lr
  65 0044 013043E2 		sub	r3, r3, #1
  66              	.LVL6:
 110:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 111:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( (input_virtual_address <= last_virtual_address)  &&  (area_size != size_of_32bit_a
  67              		.loc 1 111 0
  68 0048 030050E1 		cmp	r0, r3
  69 004c 0030A083 		movhi	r3, #0
  70              	.LVL7:
  71 0050 0130A093 		movls	r3, #1
  72 0054 00005EE3 		cmp	lr, #0
  73 0058 0030A003 		moveq	r3, #0
  74 005c 000053E3 		cmp	r3, #0
  75 0060 E9FFFF0A 		beq	.L3
  76              	.LBB4:
 112:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 113:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 uint32_t  offset = input_virtual_address - start_virtual_address;
  77              		.loc 1 113 0
  78 0064 011040E0 		sub	r1, r0, r1
  79              	.LVL8:
 114:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 115:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 physical_address = MMU_SC_TABLE[ area_index ].physical_address + offset;
  80              		.loc 1 115 0
  81 0068 003000E3 		movw	r3, #:lower16:.LANCHOR0
  82              	.LVL9:
  83 006c 003040E3 		movt	r3, #:upper16:.LANCHOR0
  84              	.LVL10:
  85 0070 023283E0 		add	r3, r3, r2, lsl #4
  86              	.LVL11:
  87 0074 04C093E5 		ldr	ip, [r3, #4]
  88 0078 0CC081E0 		add	ip, r1, ip
  89              	.LVL12:
 116:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 input_area_index = area_index;
 117:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 break;
  90              		.loc 1 117 0
  91 007c 000000EA 		b	.L4
  92              	.LVL13:
  93              	.L12:
  94              	.LBE4:
  95              	.LBE3:
  96              	.LBE2:
  98:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
  97              		.loc 1 98 0
  98 0080 0020E0E3 		mvn	r2, #0
  99              	.LVL14:
 100              	.L4:
 118:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 119:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         }
 120:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 121:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 122:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 123:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     /* other_virtual_address = ... */
 124:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     if ( input_area_index != GS_INDEX_ERROR )
 101              		.loc 1 124 0
 102 0084 010072E3 		cmn	r2, #1
 103 0088 0010A013 		movne	r1, #0
 104 008c 0200001A 		bne	.L6
 105              	.L13:
  95:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uint32_t      physical_address;
 106              		.loc 1 95 0
 107 0090 0100A0E3 		mov	r0, #1
 108              	.LVL15:
 109 0094 04F09DE4 		ldr	pc, [sp], #4
 110              	.LVL16:
 111              	.L8:
 125:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 126:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         for ( area_index = 0;  area_index < count_of_area;  area_index += 1 )
 112              		.loc 1 126 0 discriminator 2
 113 0098 011081E2 		add	r1, r1, #1
 114              	.LVL17:
 115              	.L6:
 116              		.loc 1 126 0 is_stmt 0 discriminator 1
 117 009c 1E0051E3 		cmp	r1, #30
 118 00a0 1B0000CA 		bgt	.L14
 119              	.LBB5:
 127:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         {
 128:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uint32_t  start_physical_address = MMU_SC_TABLE[ area_index ].physical_address;
 120              		.loc 1 128 0 is_stmt 1
 121 00a4 003000E3 		movw	r3, #:lower16:.LANCHOR0
 122 00a8 003040E3 		movt	r3, #:upper16:.LANCHOR0
 123 00ac 013283E0 		add	r3, r3, r1, lsl #4
 124 00b0 040093E5 		ldr	r0, [r3, #4]
 125              	.LVL18:
 129:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 130:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( physical_address >= start_physical_address )
 126              		.loc 1 130 0
 127 00b4 00005CE1 		cmp	ip, r0
 128 00b8 F6FFFF3A 		bcc	.L8
 129              	.LBB6:
 131:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 132:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 uint32_t   area_size = MMU_SC_TABLE[ area_index ].page_count * GS_PAGE_SIZE;
 130              		.loc 1 132 0
 131 00bc 003000E3 		movw	r3, #:lower16:.LANCHOR0
 132 00c0 003040E3 		movt	r3, #:upper16:.LANCHOR0
 133 00c4 013283E0 		add	r3, r3, r1, lsl #4
 134 00c8 B8E0D3E1 		ldrh	lr, [r3, #8]
 135 00cc 0EEAA0E1 		lsl	lr, lr, #20
 136              	.LVL19:
 133:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 uintptr_t  last_physical_address = (start_physical_address + area_size) - 1;
 137              		.loc 1 133 0
 138 00d0 0E3080E0 		add	r3, r0, lr
 139 00d4 013043E2 		sub	r3, r3, #1
 140              	.LVL20:
 134:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 135:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 if ( (physical_address <= last_physical_address)  &&  (area_size != size_of_32bit_a
 141              		.loc 1 135 0
 142 00d8 03005CE1 		cmp	ip, r3
 143 00dc 0030A083 		movhi	r3, #0
 144              	.LVL21:
 145 00e0 0130A093 		movls	r3, #1
 146 00e4 00005EE3 		cmp	lr, #0
 147 00e8 0030A003 		moveq	r3, #0
 148 00ec 000053E3 		cmp	r3, #0
 149 00f0 E8FFFF0A 		beq	.L8
 136:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 {
 137:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 138:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if ( area_index != input_area_index )
 150              		.loc 1 138 0
 151 00f4 020051E1 		cmp	r1, r2
 152 00f8 E6FFFF0A 		beq	.L8
 153              	.LBB7:
 139:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 140:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         uint32_t  offset = physical_address - start_physical_address;
 154              		.loc 1 140 0
 155 00fc 00004CE0 		sub	r0, ip, r0
 156              	.LVL22:
 141:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 142:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         other_virtual_address = MMU_SC_TABLE[ area_index ].virtual_address + offset
 157              		.loc 1 142 0
 158 0100 003000E3 		movw	r3, #:lower16:.LANCHOR0
 159              	.LVL23:
 160 0104 003040E3 		movt	r3, #:upper16:.LANCHOR0
 161              	.LVL24:
 162 0108 013293E7 		ldr	r3, [r3, r1, lsl #4]
 163              	.LVL25:
 164 010c 030080E0 		add	r0, r0, r3
 165              	.LVL26:
 143:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         break;
 166              		.loc 1 143 0
 167 0110 04F09DE4 		ldr	pc, [sp], #4
 168              	.LVL27:
 169              	.L14:
 170              	.LBE7:
 171              	.LBE6:
 172              	.LBE5:
  95:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uint32_t      physical_address;
 173              		.loc 1 95 0
 174 0114 0100A0E3 		mov	r0, #1
 144:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     }
 145:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 }
 146:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 147:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         }
 148:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 149:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 150:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     return  other_virtual_address;
 151:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** } /* End of function gs_ChangeToOtherVirtualAddress */
 175              		.loc 1 151 0
 176 0118 04F09DE4 		ldr	pc, [sp], #4
 177              		.cfi_endproc
 178              	.LFE0:
 180              		.section	.text.gs_IsCached,"ax",%progbits
 181              		.align	2
 182              		.syntax unified
 183              		.arm
 184              		.fpu neon
 186              	gs_IsCached:
 187              	.LFB1:
 152:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 153:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 154:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
 155:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Function Name: gs_IsCached
 156:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *    Returns whether there is the specified virtual address on the cache
 157:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *
 158:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Arguments:
 159:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *   in_VirtualAddress - Cheking virtual address
 160:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *
 161:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Return Value:
 162:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** *   Whether the specified virtual address is on the cache
 163:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
 164:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** static bool_t  gs_IsCached( const volatile void*  in_VirtualAddress ) 
 165:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** {
 188              		.loc 1 165 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL28:
 193 0000 10402DE9 		push	{r4, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 4, -8
 196              		.cfi_offset 14, -4
 166:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     /* Cast to an appropriate type */
 167:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uint32_t  table_entry_value = R_MMU_ReadTbl( (uint32_t) in_VirtualAddress );
 197              		.loc 1 167 0
 198 0004 FEFFFFEB 		bl	R_MMU_ReadTbl
 199              	.LVL29:
 168:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 169:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     bool_t  is_cached =
 170:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( ( table_entry_value & GS_TTB_ATTR_TEX_C_B ) ==
 200              		.loc 1 170 0
 201 0008 0C2007E3 		movw	r2, #28684
 202 000c 022000E0 		and	r2, r0, r2
 171:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 172:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             /* Cast to an appropriate type */
 173:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             ( MMU_ATTR_NORMAL_L1CACHE & GS_TTB_ATTR_TEX_C_B ) ) ||
 203              		.loc 1 173 0
 204 0010 043004E3 		movw	r3, #16388
 205 0014 030052E1 		cmp	r2, r3
 206 0018 0A00000A 		beq	.L17
 174:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( ( table_entry_value & ( GS_TTB_ATTR_TEX_C_B | MMU_ATTR_NORMAL_L1L2CACHE ) ) ==
 207              		.loc 1 174 0 discriminator 2
 208 001c 0E3C07E3 		movw	r3, #31758
 209 0020 083040E3 		movt	r3, 8
 210 0024 003003E0 		and	r3, r3, r0
 173:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( ( table_entry_value & ( GS_TTB_ATTR_TEX_C_B | MMU_ATTR_NORMAL_L1L2CACHE ) ) ==
 211              		.loc 1 173 0 discriminator 2
 212 0028 0E2C01E3 		movw	r2, #7182
 213 002c 082040E3 		movt	r2, 8
 214 0030 020053E1 		cmp	r3, r2
 215 0034 0100000A 		beq	.L20
 173:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( ( table_entry_value & ( GS_TTB_ATTR_TEX_C_B | MMU_ATTR_NORMAL_L1L2CACHE ) ) ==
 216              		.loc 1 173 0 is_stmt 0
 217 0038 0000A0E3 		mov	r0, #0
 218              	.LVL30:
 175:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             MMU_ATTR_NORMAL_L1L2CACHE );
 176:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 177:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     return  is_cached;
 178:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** }/* End of function gs_IsCached */
 219              		.loc 1 178 0 is_stmt 1
 220 003c 1080BDE8 		pop	{r4, pc}
 221              	.LVL31:
 222              	.L20:
 173:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( ( table_entry_value & ( GS_TTB_ATTR_TEX_C_B | MMU_ATTR_NORMAL_L1L2CACHE ) ) ==
 223              		.loc 1 173 0
 224 0040 0100A0E3 		mov	r0, #1
 225              	.LVL32:
 226 0044 1080BDE8 		pop	{r4, pc}
 227              	.LVL33:
 228              	.L17:
 229 0048 0100A0E3 		mov	r0, #1
 230              	.LVL34:
 231 004c 1080BDE8 		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE1:
 235              		.section	.text.R_MEMORY_ToPhysicalAddress,"ax",%progbits
 236              		.align	2
 237              		.global	R_MEMORY_ToPhysicalAddress
 238              		.syntax unified
 239              		.arm
 240              		.fpu neon
 242              	R_MEMORY_ToPhysicalAddress:
 243              	.LFB2:
 179:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 180:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 181:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
 182:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Function Name: R_MEMORY_ToPhysicalAddress
 183:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
 184:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** errnum_t  R_MEMORY_ToPhysicalAddress( const volatile void*  in_VirtualAddress, 
 185:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         uintptr_t*  out_PhysicalAddress )
 186:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** {
 244              		.loc 1 186 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL35:
 249 0000 10402DE9 		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 253 0004 08D04DE2 		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0008 0140A0E1 		mov	r4, r1
 187:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     errnum_t     e;
 188:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     e_mmu_err_t  er;
 189:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     uint32_t     physical_address;
 190:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 191:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     /* Cast to an appropriate type */
 192:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     er= R_MMU_VAtoPA( (uint32_t)(uintptr_t) in_VirtualAddress,  &physical_address );  /* physical_a
 256              		.loc 1 192 0
 257 000c 04108DE2 		add	r1, sp, #4
 258              	.LVL36:
 259 0010 FEFFFFEB 		bl	R_MMU_VAtoPA
 260              	.LVL37:
 193:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     *out_PhysicalAddress = (uintptr_t) physical_address;
 261              		.loc 1 193 0
 262 0014 04309DE5 		ldr	r3, [sp, #4]
 263 0018 003084E5 		str	r3, [r4]
 194:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     if ( er == MMU_SUCCESS )
 264              		.loc 1 194 0
 265 001c 000050E3 		cmp	r0, #0
 195:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 196:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         e = 0;
 197:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 198:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     else
 199:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 200:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         e = E_MEMORY_ACCESS_DENIED_7;
 266              		.loc 1 200 0
 267 0020 0700A013 		movne	r0, #7
 268              	.LVL38:
 269 0024 00074013 		movtne	r0, 1792
 270              	.LVL39:
 271              	.L21:
 201:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 202:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             /* Error: Failed to get physical address from MMU. */
 203:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 204:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     return  e;
 205:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** } /* End of function R_MEMORY_ToPhysicalAddress */
 272              		.loc 1 205 0
 273 0028 08D08DE2 		add	sp, sp, #8
 274              		.cfi_def_cfa_offset 8
 275              		@ sp needed
 276 002c 1080BDE8 		pop	{r4, pc}
 277              		.cfi_endproc
 278              	.LFE2:
 280              		.section	.text.R_MEMORY_ToCachedAddress,"ax",%progbits
 281              		.align	2
 282              		.global	R_MEMORY_ToCachedAddress
 283              		.syntax unified
 284              		.arm
 285              		.fpu neon
 287              	R_MEMORY_ToCachedAddress:
 288              	.LFB3:
 206:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 207:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 208:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
 209:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Function Name: R_MEMORY_ToCachedAddress
 210:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
 211:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** errnum_t  R_MEMORY_ToCachedAddress 
 212:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( const volatile void* const  in_VirtualAddress,  void* const  out_CachedAddress )
 213:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** {
 289              		.loc 1 213 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 8
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              	.LVL40:
 294 0000 70402DE9 		push	{r4, r5, r6, lr}
 295              		.cfi_def_cfa_offset 16
 296              		.cfi_offset 4, -16
 297              		.cfi_offset 5, -12
 298              		.cfi_offset 6, -8
 299              		.cfi_offset 14, -4
 300 0004 08D04DE2 		sub	sp, sp, #8
 301              		.cfi_def_cfa_offset 24
 302 0008 0040A0E1 		mov	r4, r0
 303 000c 0150A0E1 		mov	r5, r1
 214:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     bool_t    is_cached = gs_IsCached( in_VirtualAddress );
 304              		.loc 1 214 0
 305 0010 FEFFFFEB 		bl	gs_IsCached
 306              	.LVL41:
 215:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     errnum_t  e;
 216:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 217:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     if ( is_cached )
 307              		.loc 1 217 0
 308 0014 000050E3 		cmp	r0, #0
 309 0018 0300000A 		beq	.L26
 218:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 219:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         /* out_CachedAddress = ... */
 220:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         *(uintptr_t*) out_CachedAddress = (uintptr_t) in_VirtualAddress;
 310              		.loc 1 220 0
 311 001c 004085E5 		str	r4, [r5]
 221:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 222:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 223:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     else
 224:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {  /* if not "in_VirtualAddress" "is_cached" */
 225:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         uintptr_t  other_address = gs_ChangeToOtherVirtualAddress( in_VirtualAddress );
 226:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 227:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         /* Guard */
 228:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         {
 229:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             bool_t     is_other_address_cached_address;
 230:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uintptr_t  physical_address_from_uncached;
 231:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uintptr_t  physical_address_from_cached;
 232:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 233:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             /* (variables) = ... */
 234:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 235:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e= R_MEMORY_ToPhysicalAddress( in_VirtualAddress,  &physical_address_from_uncached 
 236:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 237:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 238:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         goto fin;
 239:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     }  /* physical_address_from_uncached = . */
 240:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e= R_MEMORY_ToPhysicalAddress( (void*) other_address,  &physical_address_from_cache
 241:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 242:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 243:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         goto fin;
 244:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     }  /* physical_address_from_cached = . */
 245:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 is_other_address_cached_address = gs_IsCached( (void*) other_address );
 246:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 247:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 248:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             /* Guard */
 249:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( other_address == GS_NOT_SHARE )
 250:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 251:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e = E_MEMORY_ACCESS_DENIED_1;  goto fin;
 252:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     /* Error: The specified address is not in cached area or cannot change to cache
 253:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 254:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( ! is_other_address_cached_address )
 255:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 256:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e = E_MEMORY_ACCESS_DENIED_3;  goto fin;
 257:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     /* Error: Changed address is not in cached area. */
 258:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 259:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( physical_address_from_uncached != physical_address_from_cached )
 260:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 261:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e = E_MEMORY_ACCESS_DENIED_5;  goto fin;
 262:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     /* Error: The specified physical address is not same between before and after. 
 263:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 264:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         }
 265:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 266:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         /* out_CachedAddress = ... */
 267:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         *(uintptr_t*) out_CachedAddress = other_address;
 268:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 269:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 270:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     e=0;
 312              		.loc 1 270 0
 313 0020 0000A0E3 		mov	r0, #0
 314              	.LVL42:
 315              	.L25:
 271:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** fin:
 272:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 273:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         return e;
 274:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 275:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** } /* End of function R_MEMORY_ToCachedAddress */
 316              		.loc 1 275 0
 317 0024 08D08DE2 		add	sp, sp, #8
 318              		.cfi_remember_state
 319              		.cfi_def_cfa_offset 16
 320              		@ sp needed
 321 0028 7080BDE8 		pop	{r4, r5, r6, pc}
 322              	.LVL43:
 323              	.L26:
 324              		.cfi_restore_state
 325              	.LBB8:
 225:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 326              		.loc 1 225 0
 327 002c 0400A0E1 		mov	r0, r4
 328              	.LVL44:
 329 0030 FEFFFFEB 		bl	gs_ChangeToOtherVirtualAddress
 330              	.LVL45:
 331 0034 0060A0E1 		mov	r6, r0
 332              	.LVL46:
 333              	.LBB9:
 235:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 334              		.loc 1 235 0
 335 0038 0D10A0E1 		mov	r1, sp
 336 003c 0400A0E1 		mov	r0, r4
 337              	.LVL47:
 338 0040 FEFFFFEB 		bl	R_MEMORY_ToPhysicalAddress
 339              	.LVL48:
 236:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 340              		.loc 1 236 0
 341 0044 000050E3 		cmp	r0, #0
 342 0048 F5FFFF1A 		bne	.L25
 240:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 343              		.loc 1 240 0
 344 004c 04108DE2 		add	r1, sp, #4
 345 0050 0600A0E1 		mov	r0, r6
 346              	.LVL49:
 347 0054 FEFFFFEB 		bl	R_MEMORY_ToPhysicalAddress
 348              	.LVL50:
 241:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 349              		.loc 1 241 0
 350 0058 000050E3 		cmp	r0, #0
 351 005c F0FFFF1A 		bne	.L25
 245:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 352              		.loc 1 245 0
 353 0060 0600A0E1 		mov	r0, r6
 354              	.LVL51:
 355 0064 FEFFFFEB 		bl	gs_IsCached
 356              	.LVL52:
 249:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 357              		.loc 1 249 0
 358 0068 010056E3 		cmp	r6, #1
 359 006c 0A00000A 		beq	.L29
 254:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 360              		.loc 1 254 0
 361 0070 000050E3 		cmp	r0, #0
 362 0074 0B00000A 		beq	.L30
 259:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 363              		.loc 1 259 0
 364 0078 04309DE5 		ldr	r3, [sp, #4]
 365 007c 00209DE5 		ldr	r2, [sp]
 366 0080 030052E1 		cmp	r2, r3
 261:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     /* Error: The specified physical address is not same between before and after. 
 367              		.loc 1 261 0
 368 0084 0500A013 		movne	r0, #5
 369              	.LVL53:
 370 0088 00074013 		movtne	r0, 1792
 371              	.L27:
 372              	.LVL54:
 373              	.LBE9:
 374              	.LBE8:
 273:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 375              		.loc 1 273 0
 376 008c E4FFFF1A 		bne	.L25
 377              	.LVL55:
 378              	.L33:
 379              	.LBB11:
 267:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 380              		.loc 1 267 0
 381 0090 006085E5 		str	r6, [r5]
 382              	.LBE11:
 270:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** fin:
 383              		.loc 1 270 0
 384 0094 0000A0E3 		mov	r0, #0
 385              	.LVL56:
 386 0098 E1FFFFEA 		b	.L25
 387              	.LVL57:
 388              	.L29:
 389              	.LBB12:
 390              	.LBB10:
 251:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     /* Error: The specified address is not in cached area or cannot change to cache
 391              		.loc 1 251 0
 392 009c 0100A0E3 		mov	r0, #1
 393              	.LVL58:
 394 00a0 000740E3 		movt	r0, 1792
 395 00a4 DEFFFFEA 		b	.L25
 396              	.LVL59:
 397              	.L30:
 256:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     /* Error: Changed address is not in cached area. */
 398              		.loc 1 256 0
 399 00a8 0300A0E3 		mov	r0, #3
 400              	.LVL60:
 401 00ac 000740E3 		movt	r0, 1792
 402 00b0 DBFFFFEA 		b	.L25
 403              	.LBE10:
 404              	.LBE12:
 405              		.cfi_endproc
 406              	.LFE3:
 408              		.section	.text.R_MEMORY_ToUncachedAddress,"ax",%progbits
 409              		.align	2
 410              		.global	R_MEMORY_ToUncachedAddress
 411              		.syntax unified
 412              		.arm
 413              		.fpu neon
 415              	R_MEMORY_ToUncachedAddress:
 416              	.LFB4:
 276:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 277:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 278:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** /******************************************************************************
 279:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** * Function Name: R_MEMORY_ToUncachedAddress
 280:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** ******************************************************************************/
 281:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** errnum_t  R_MEMORY_ToUncachedAddress
 282:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         ( const volatile void* const  in_VirtualAddress,void* const  out_UncachedAddress )
 283:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** {
 417              		.loc 1 283 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL61:
 422 0000 70402DE9 		push	{r4, r5, r6, lr}
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 6, -8
 427              		.cfi_offset 14, -4
 428 0004 08D04DE2 		sub	sp, sp, #8
 429              		.cfi_def_cfa_offset 24
 430 0008 0040A0E1 		mov	r4, r0
 431 000c 0150A0E1 		mov	r5, r1
 284:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     bool_t    is_cached = gs_IsCached( in_VirtualAddress );
 432              		.loc 1 284 0
 433 0010 FEFFFFEB 		bl	gs_IsCached
 434              	.LVL62:
 285:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     errnum_t  e;
 286:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 287:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     if ( ! is_cached )
 435              		.loc 1 287 0
 436 0014 000050E3 		cmp	r0, #0
 437 0018 0200001A 		bne	.L35
 288:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 289:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         /* out_UncachedAddress = ... */
 290:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         *(uintptr_t*) out_UncachedAddress = (uintptr_t) in_VirtualAddress;
 438              		.loc 1 290 0
 439 001c 004085E5 		str	r4, [r5]
 440              	.LVL63:
 441              	.L34:
 291:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 292:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 293:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     else
 294:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {  /* if "in_VirtualAddress" "is_cached" */
 295:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         uintptr_t  other_address = gs_ChangeToOtherVirtualAddress( in_VirtualAddress );
 296:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 297:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         /* Guard */
 298:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         {
 299:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             bool_t     is_other_address_cached_address;
 300:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uintptr_t  physical_address_from_uncached;
 301:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             uintptr_t  physical_address_from_cached;
 302:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 303:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             /* (variables) = ... */
 304:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 305:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 /* Cast to an appropriate type */
 306:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e= R_MEMORY_ToPhysicalAddress( (void*) other_address,  &physical_address_from_uncac
 307:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 308:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 309:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         goto fin;
 310:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     }  /* physical_address_from_uncached = . */
 311:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e= R_MEMORY_ToPhysicalAddress( in_VirtualAddress,  &physical_address_from_cached );
 312:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 313:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 314:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                         goto fin;
 315:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     }  /* physical_address_from_cached = . */
 316:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 is_other_address_cached_address = gs_IsCached( (void*) other_address );
 317:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 318:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 319:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             /* Guard */
 320:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( other_address == GS_NOT_SHARE )
 321:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 322:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e = E_MEMORY_ACCESS_DENIED_2;
 323:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 goto fin;
 324:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 325:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 /* Error: The specified address is not in uncached area or cannot change to uncache
 326:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 327:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( is_other_address_cached_address )
 328:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 329:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e = E_MEMORY_ACCESS_DENIED_4;  goto fin;
 330:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 331:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 /* Error: Changed address is not in uncached area. */
 332:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 333:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             if ( physical_address_from_uncached != physical_address_from_cached )
 334:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 335:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 e = E_MEMORY_ACCESS_DENIED_6;  goto fin;
 336:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 337:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 /* Error: The specified physical address is not same between before and after. */
 338:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 339:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         }
 340:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 341:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         /* out_UncachedAddress = ... */
 342:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         *(uintptr_t*) out_UncachedAddress = other_address;
 343:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 344:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 345:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     e=0;
 346:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** fin:
 347:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     {
 348:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****         return e;
 349:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 350:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** }/* End of function R_MEMORY_ToUncachedAddress */
 442              		.loc 1 350 0
 443 0020 08D08DE2 		add	sp, sp, #8
 444              		.cfi_remember_state
 445              		.cfi_def_cfa_offset 16
 446              		@ sp needed
 447 0024 7080BDE8 		pop	{r4, r5, r6, pc}
 448              	.LVL64:
 449              	.L35:
 450              		.cfi_restore_state
 451              	.LBB13:
 295:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 452              		.loc 1 295 0
 453 0028 0400A0E1 		mov	r0, r4
 454              	.LVL65:
 455 002c FEFFFFEB 		bl	gs_ChangeToOtherVirtualAddress
 456              	.LVL66:
 457 0030 0060A0E1 		mov	r6, r0
 458              	.LVL67:
 459              	.LBB14:
 306:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 460              		.loc 1 306 0
 461 0034 0D10A0E1 		mov	r1, sp
 462 0038 FEFFFFEB 		bl	R_MEMORY_ToPhysicalAddress
 463              	.LVL68:
 307:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 464              		.loc 1 307 0
 465 003c 000050E3 		cmp	r0, #0
 466 0040 F6FFFF1A 		bne	.L34
 311:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     if(e)
 467              		.loc 1 311 0
 468 0044 04108DE2 		add	r1, sp, #4
 469 0048 0400A0E1 		mov	r0, r4
 470              	.LVL69:
 471 004c FEFFFFEB 		bl	R_MEMORY_ToPhysicalAddress
 472              	.LVL70:
 312:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                     {
 473              		.loc 1 312 0
 474 0050 000050E3 		cmp	r0, #0
 475 0054 F1FFFF1A 		bne	.L34
 316:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             }
 476              		.loc 1 316 0
 477 0058 0600A0E1 		mov	r0, r6
 478              	.LVL71:
 479 005c FEFFFFEB 		bl	gs_IsCached
 480              	.LVL72:
 320:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 481              		.loc 1 320 0
 482 0060 010056E3 		cmp	r6, #1
 483 0064 0900000A 		beq	.L38
 327:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 484              		.loc 1 327 0
 485 0068 000050E3 		cmp	r0, #0
 486 006c 0A00001A 		bne	.L39
 333:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****             {
 487              		.loc 1 333 0
 488 0070 04309DE5 		ldr	r3, [sp, #4]
 489 0074 00209DE5 		ldr	r2, [sp]
 490 0078 030052E1 		cmp	r2, r3
 335:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 491              		.loc 1 335 0
 492 007c 0600A013 		movne	r0, #6
 493              	.LVL73:
 494 0080 00074013 		movtne	r0, 1792
 495              	.L36:
 496              	.LVL74:
 497              	.LBE14:
 498              	.LBE13:
 348:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 499              		.loc 1 348 0
 500 0084 E5FFFF1A 		bne	.L34
 501              	.LVL75:
 502              	.L42:
 503              	.LBB16:
 342:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****     }
 504              		.loc 1 342 0
 505 0088 006085E5 		str	r6, [r5]
 506 008c E3FFFFEA 		b	.L34
 507              	.L38:
 508              	.LBB15:
 322:../generate/sc_drivers/r_jcu/porting/r_memory_map.c ****                 goto fin;
 509              		.loc 1 322 0
 510 0090 0200A0E3 		mov	r0, #2
 511              	.LVL76:
 512 0094 000740E3 		movt	r0, 1792
 513 0098 E0FFFFEA 		b	.L34
 514              	.LVL77:
 515              	.L39:
 329:../generate/sc_drivers/r_jcu/porting/r_memory_map.c **** 
 516              		.loc 1 329 0
 517 009c 0400A0E3 		mov	r0, #4
 518              	.LVL78:
 519 00a0 000740E3 		movt	r0, 1792
 520 00a4 DDFFFFEA 		b	.L34
 521              	.LBE15:
 522              	.LBE16:
 523              		.cfi_endproc
 524              	.LFE4:
 526              		.section	.rodata.MMU_SC_TABLE,"a",%progbits
 527              		.align	2
 528              		.set	.LANCHOR0,. + 0
 531              	MMU_SC_TABLE:
 532 0000 00000000 		.word	0
 533 0004 00000000 		.word	0
 534 0008 0010     		.short	4096
 535 000a 0000     		.space	2
 536 000c F20D0800 		.word	527858
 537 0010 00000000 		.word	0
 538 0014 00000000 		.word	0
 539 0018 4000     		.short	64
 540 001a 0000     		.space	2
 541 001c F20D0800 		.word	527858
 542 0020 00000004 		.word	67108864
 543 0024 00000004 		.word	67108864
 544 0028 4000     		.short	64
 545 002a 0000     		.space	2
 546 002c F20D0800 		.word	527858
 547 0030 00000008 		.word	134217728
 548 0034 00000008 		.word	134217728
 549 0038 4000     		.short	64
 550 003a 0000     		.space	2
 551 003c F20D0800 		.word	527858
 552 0040 0000000C 		.word	201326592
 553 0044 0000000C 		.word	201326592
 554 0048 4000     		.short	64
 555 004a 0000     		.space	2
 556 004c EE1D0800 		.word	531950
 557 0050 00000010 		.word	268435456
 558 0054 00000010 		.word	268435456
 559 0058 4000     		.short	64
 560 005a 0000     		.space	2
 561 005c F20D0800 		.word	527858
 562 0060 00000014 		.word	335544320
 563 0064 00000014 		.word	335544320
 564 0068 4000     		.short	64
 565 006a 0000     		.space	2
 566 006c F20D0800 		.word	527858
 567 0070 00000018 		.word	402653184
 568 0074 00000018 		.word	402653184
 569 0078 7000     		.short	112
 570 007a 0000     		.space	2
 571 007c F2010800 		.word	524786
 572 0080 0000001F 		.word	520093696
 573 0084 0000001F 		.word	520093696
 574 0088 1000     		.short	16
 575 008a 0000     		.space	2
 576 008c F20D0000 		.word	3570
 577 0090 00000020 		.word	536870912
 578 0094 00000020 		.word	536870912
 579 0098 0001     		.short	256
 580 009a 0000     		.space	2
 581 009c EE1D0800 		.word	531950
 582 00a0 00000030 		.word	805306368
 583 00a4 00000030 		.word	805306368
 584 00a8 0001     		.short	256
 585 00aa 0000     		.space	2
 586 00ac EE1D0800 		.word	531950
 587 00b0 00000040 		.word	1073741824
 588 00b4 00000040 		.word	1073741824
 589 00b8 0001     		.short	256
 590 00ba 0000     		.space	2
 591 00bc EE1D0800 		.word	531950
 592 00c0 00000050 		.word	1342177280
 593 00c4 00000050 		.word	1342177280
 594 00c8 0001     		.short	256
 595 00ca 0000     		.space	2
 596 00cc EE1D0800 		.word	531950
 597 00d0 00000060 		.word	1610612736
 598 00d4 00000060 		.word	1610612736
 599 00d8 0001     		.short	256
 600 00da 0000     		.space	2
 601 00dc EE1D0800 		.word	531950
 602 00e0 00000070 		.word	1879048192
 603 00e4 00000020 		.word	536870912
 604 00e8 0001     		.short	256
 605 00ea 0000     		.space	2
 606 00ec E20D0800 		.word	527842
 607 00f0 00000080 		.word	-2147483648
 608 00f4 00000080 		.word	-2147483648
 609 00f8 0400     		.short	4
 610 00fa 0000     		.space	2
 611 00fc E64D0800 		.word	544230
 612 0100 00004080 		.word	-2143289344
 613 0104 00004080 		.word	-2143289344
 614 0108 1C00     		.short	28
 615 010a 0000     		.space	2
 616 010c F2010800 		.word	524786
 617 0110 00000082 		.word	-2113929216
 618 0114 00000080 		.word	-2147483648
 619 0118 0400     		.short	4
 620 011a 0000     		.space	2
 621 011c E24D0800 		.word	544226
 622 0120 00004082 		.word	-2109734912
 623 0124 00004082 		.word	-2109734912
 624 0128 5C00     		.short	92
 625 012a 0000     		.space	2
 626 012c F2010800 		.word	524786
 627 0130 00000088 		.word	-2013265920
 628 0134 00000000 		.word	0
 629 0138 4000     		.short	64
 630 013a 0000     		.space	2
 631 013c F20D0800 		.word	527858
 632 0140 0000008C 		.word	-1946157056
 633 0144 00000004 		.word	67108864
 634 0148 4000     		.short	64
 635 014a 0000     		.space	2
 636 014c F20D0800 		.word	527858
 637 0150 00000090 		.word	-1879048192
 638 0154 00000008 		.word	134217728
 639 0158 4000     		.short	64
 640 015a 0000     		.space	2
 641 015c F20D0800 		.word	527858
 642 0160 00000094 		.word	-1811939328
 643 0164 0000000C 		.word	201326592
 644 0168 4000     		.short	64
 645 016a 0000     		.space	2
 646 016c E24D0800 		.word	544226
 647 0170 00000098 		.word	-1744830464
 648 0174 00000010 		.word	268435456
 649 0178 4000     		.short	64
 650 017a 0000     		.space	2
 651 017c F20D0800 		.word	527858
 652 0180 0000009C 		.word	-1677721600
 653 0184 00000014 		.word	335544320
 654 0188 4000     		.short	64
 655 018a 0000     		.space	2
 656 018c F20D0800 		.word	527858
 657 0190 000000A0 		.word	-1610612736
 658 0194 00000030 		.word	805306368
 659 0198 0001     		.short	256
 660 019a 0000     		.space	2
 661 019c E20D0800 		.word	527842
 662 01a0 000000B0 		.word	-1342177280
 663 01a4 00000040 		.word	1073741824
 664 01a8 0001     		.short	256
 665 01aa 0000     		.space	2
 666 01ac E24D0800 		.word	544226
 667 01b0 000000C0 		.word	-1073741824
 668 01b4 00000050 		.word	1342177280
 669 01b8 0001     		.short	256
 670 01ba 0000     		.space	2
 671 01bc E20D0800 		.word	527842
 672 01c0 000000D0 		.word	-805306368
 673 01c4 00000060 		.word	1610612736
 674 01c8 0001     		.short	256
 675 01ca 0000     		.space	2
 676 01cc E24D0800 		.word	544226
 677 01d0 000000E0 		.word	-536870912
 678 01d4 000000E0 		.word	-536870912
 679 01d8 8000     		.short	128
 680 01da 0000     		.space	2
 681 01dc F2010800 		.word	524786
 682 01e0 000000E8 		.word	-402653184
 683 01e4 000000E8 		.word	-402653184
 684 01e8 8001     		.short	384
 685 01ea 0000     		.space	2
 686 01ec F20D0000 		.word	3570
 687              		.text
 688              	.Letext0:
 689              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 690              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 691              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 692              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 693              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 694              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 695              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 696              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 697              		.file 10 "C:/Users/tle/e2_studio/workspace/rza2m_cam_and_disp_sample_freertos_gcc/generate/system/
 698              		.file 11 "C:/Users/tle/e2_studio/workspace/rza2m_cam_and_disp_sample_freertos_gcc/generate/drivers
 699              		.file 12 "C:/Users/tle/e2_studio/workspace/rza2m_cam_and_disp_sample_freertos_gcc/generate/sc_driv
 700              		.file 13 "C:/Users/tle/e2_studio/workspace/rza2m_cam_and_disp_sample_freertos_gcc/generate/drivers
DEFINED SYMBOLS
                            *ABS*:00000000 r_memory_map.c
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:17     .text.gs_ChangeToOtherVirtualAddress:00000000 $a
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:22     .text.gs_ChangeToOtherVirtualAddress:00000000 gs_ChangeToOtherVirtualAddress
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:528    .rodata.MMU_SC_TABLE:00000000 .LANCHOR0
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:181    .text.gs_IsCached:00000000 $a
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:186    .text.gs_IsCached:00000000 gs_IsCached
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:236    .text.R_MEMORY_ToPhysicalAddress:00000000 $a
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:242    .text.R_MEMORY_ToPhysicalAddress:00000000 R_MEMORY_ToPhysicalAddress
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:281    .text.R_MEMORY_ToCachedAddress:00000000 $a
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:287    .text.R_MEMORY_ToCachedAddress:00000000 R_MEMORY_ToCachedAddress
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:409    .text.R_MEMORY_ToUncachedAddress:00000000 $a
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:415    .text.R_MEMORY_ToUncachedAddress:00000000 R_MEMORY_ToUncachedAddress
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:527    .rodata.MMU_SC_TABLE:00000000 $d
C:\Users\tle\AppData\Local\Temp\ccKi58st.s:531    .rodata.MMU_SC_TABLE:00000000 MMU_SC_TABLE
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.14fc17be114e5a2cba0959c511ea2aaf
                           .group:00000000 wm4._newlib_version.h.4.3572908597b70d672d181fc7fc501c19
                           .group:00000000 wm4.features.h.33.d97f2d646536517df901beeb5b9993f5
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.cce27fed8484c08a33f522034c30d2b5
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.stddef.h.39.a38874c8f8a57e66301090908ec2a69f
                           .group:00000000 wm4.newlib.h.8.5f2124c7e712be65f83b91ff86a0b1c1
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.e658329a094974ebad41b40c60502de7
                           .group:00000000 wm4.math.h.13.adb102f7bd7860b1f241e149d6914a1e
                           .group:00000000 wm4.r_typedefs.h.38.e90d9de5300d9ae020e5db8c5af88b3e
                           .group:00000000 wm4.driver.h.34.180df73e0731406f5e50150641059ede
                           .group:00000000 wm4.r_mmu_lld_rza2m.h.39.be55e997d8665d00d9f529dbd893c422
                           .group:00000000 wm4.rz_co_typedef.h.30.d945c9904878daee922b7c70f5e10607
                           .group:00000000 wm4.rz_co.h.31.aecea41cce99b435cabd8b5611466e3b
                           .group:00000000 wm4.r_memory_map.h.32.fd0240a732446fd58916e6bf09ca3e51

UNDEFINED SYMBOLS
R_MMU_ReadTbl
R_MMU_VAtoPA
